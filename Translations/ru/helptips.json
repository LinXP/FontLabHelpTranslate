{
    "action_bold.radioFLS": "**Усовершенствованный алгоритм (FontLab Studio)**: Индивидуальный контроль для дополнительного начертания в вертикальном и горизонтальном направлении",
    "action_bold.radioFog": "**Простой алгоритм (TransType / Fontographer) **: Данный процесс автоматически оптимизирован для получения наилучшего эффекта.\n\nПоложительные значения увеличат начертание шрифта (глифы будут более жирными), отрицательные значения уменьшат начертание шрифта (глифы будут более тонкими).",
    "action_bold.sliderParameter": "@action_bold.valueParameter",
    "action_bold.valueH": "**Начертание по горизонтали**: Дополнительное начертание в горизонтальном направлении (`x`).",
    "action_bold.valueParameter": "**Дополнительное начертание**: Положительные значения увеличит начертание (сделают глифы более жирными), отрицательные значения уменьшат начертание (сделает глифы более тонким)",
    "action_bold.valueV": "**Начертание по вертикали**: Дополнительное начертание в вертикальном направлении (`y`).",
    "actions_section.Adjust": "**Регулировка**: Предназначена для изменения дизайн глифа: ширины, начертания, настройки закругленных или заостренных углов, чернильных ловушек. Создать пустые глифы (удалить содержимое).",
    "actions_section.Basics": "**Базовые**: Предназначены для выполнения геометрических преобразований (масштабирования, сдвига, наклона, поворота). Можно осуществлять общие операции с контурами.",
    "actions_section.Contour": "**Контур**: Предназначен для технического изменения структуры контура, но при этом будет сохранен общий дизайн глифа: округления значений координат, изменения типов узлов и кривых, улучшения контуров и сегментов, создания перекрытий и очистки.",
    "actions_section.Effects": "**Эффекты**: Предназначены для внесения изменений в дизайн шрифта: применения размытия, искажения, создания очертания или вытягивания контуров.",
    "actions_section.Guides": "**Направляющие и якоря**: Данные параметры влияют на шрифты, глифы, элементы и силовые направляющие, а также якоря.",
    "actions_section.Hinting": "**Хинтинг**: Предназначен для автоматического создания, удаления или изменения хинтинга PostScript, команд хинтинга TrueType и связанных с ними данных.",
    "actions_section.Kerning": "**Кернинг**: Влияет на процесс кернинг.а",
    "actions_section.Metrics": "****Метрики**: Влияют на регулировку ширины, полуапрошов, ссылок на метрики (выражения) и компоненты без пробелов.",
    "app.n": "FontLab",
    "app.nv": "FontLab 8",
    "auditpanel.buttonCheckFont": "Запустить аудит шрифта для выбранных глифов в текущем слое \n\nВ окне шрифта будет отображен край окрашенный красным цветом, если слой с глифом будет содержать ошибки после проведенного аудита шрифта",
    "auditpanel.buttonFix": "**Исправить выбранные и аналогичные ошибки**: Свидетельствует о попытке исправить выбранную и другие ошибки относящиеся к одному и тому же типу в текущем слое с глифом.\n\nНажмите на кнопке <i>Исправить </i>, которая находится справа от каждой ошибки, чтобы исправить ее индивидуально",
    "auditpanel.buttonFixAll": "**Исправить все ошибки при аудите шрифта**: Свидетельствует о попытке исправить все перечисленные ошибки в текущем слое с глифом. Данный процесс может вызвать другие ошибки\n\nНажмите на кнопку <i>Исправить</i>, которая находится справа от каждой ошибки, чтобы исправить ее индивидуально",
    "auditpanel.buttonMore": "**Активируйте аудита шрифта**: Включите и отключите процесс аудита шрифта, чтобы увидеть существующие ошибки.",
    "auditpanel.layoutDesign": "@mainwindow.actionAuditPanel",
    "auditpanel.list": "#### Ошибки при аудите шрифта\n\nЭто представленный перечень ошибок при осуществлении аудита шрифта для текущего глифа и слоя. Для каждой ошибки выводится информация, с указанием координат по осям xy и наличием кнопки <i>Исправить</i>.  Удерживая, над ошибкой, нажатой клавишу <span style=\"font-style: normal; white-space: nowrap;\"><b>F1</b></span> можно ознакомится с соответствующим описанием.\n\nПерейдите в пункт меню <i>Вид › Показать › Аудит шрифта</i> чтобы отобразить ошибки в окне глифа. Кликните в списке по определенной ошибке, чтобы выделить ее в окне глифа.\n\nВоспользуйтесь кнопкой <i>Исправить</i> чтобы исправить ошибку индивидуально. Кликните по кнопке <i>Исправить все</i> чтобы исправить весь перечень с ошибками, относящиеся к текущему слою с глифом. Но соответствующие исправления могут привести к другим ошибкам\n\n<small>Чтобы увидеть больше или меньше ошибок, нажмите <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span> и включите или отключите аудит шрифта, или воспользуйтесь пунктом меню <i>Настройки › Аудит шрифта</i></small>",
    "axiswidget.autoInstances": "**Создание экземпляров оси**: Создание перечня с экземплярами оси:\n\n‣ <i>Из графика с осями</i>: на основе точек графика, определенных в диалоговом окне  <i>график с осями</i> для нелинейного сопоставления дизайна с заданными координатами пользователя <br/>‣ <i>из экземпляров</i>: на основе положения предопределенных экземпляров шрифта, заданных на странице <i>Экземпляры</i> <br/>‣ <i>Из значений по умолчанию</i>: на основе значений по умолчанию, если ось относится к общей оси\n\nВ дальнейшем можно отредактировать экземпляры оси в соответствии с вашими предпочтениями",
    "axiswidget.buttonHidden": "**Ось скрыта от пользовательского интерфейса**: ‣ При **Включеном** параметре: приложением будет использоваться **Переменные для шрифтов PS & TT**, т.е ось не должна отображаться в пользовательском интерфейсе. Этот параметр не относится к пользовательскому интерфейсу FontLab",
    "axiswidget.buttonList": "Преобразовать текущую ось в общую. Общие оси будут включать оси, предусмотренные спецификацией OpenType, и дополнительные, часто используемые вариации осей",
    "axiswidget.buttonMap": "**График с осью**: Предназначен для изменения диапазона **расчетных координат** и создания нелинейное отношения между расчетными и **пользовательскими значениями координат** для оси.\n\n<small>Расчетные координаты определяют **положение** мастеров и экземпляров, но не используются в форматах конечного пользователя. Статистические экземпляры и <i>панель с вариациями</i> **экстраполяция** должна находится в пределах расчетного диапазона</small>\n\n<small>**Диапазон расположения основных элементов** (фактическое минимальное/максимальное положения основных элементов на оси) должен находиться в пределах расчетного диапазона. Он экспортируется в диапазон осей как DesignSpace и Variable OT. Экземпляры переменных OT должны находиться в пределах основного мастера\n\n<small>Отношение экспортируется в виде `map` DesignSpace и таблицы вариаций Variable OT `avar`</small>",
    "axiswidget.labelDesign": "@axiswidget.selectorDesign",
    "axiswidget.labelName_7": "@axiswidget.valueInstances",
    "axiswidget.labelUser": "@axiswidget.selectorUser",
    "axiswidget.selectorDesign": "**Расчетный диапазон**: Это минимальное и максимальное значение для оси при **расчете координат**. Расчетные координаты определяют **положение** мастеров и экземпляров, но не используются в форматах конечного пользователя. Экстраполяция статических экземпляров и<i>панели вариаций</i> находится в пределах диапазона проекта\n\n**Диапазон расположения основных мастеров** (фактическое минимальное/максимальное расположение основных мастеров на оси) должно находиться в пределах расчетного диапазона. Он экспортируется в диапазон осей DesignSpace и  Variable OT. Экземпляры переменных OT должны находиться в пределах диапазона основного мастера\n\n<small>Чтобы внести изменения: необходимо открыть <i>График оси</i>, отредактировать нижние значения _min_ &amp; _max_ , и кликнуть на кнопках <i>OK › Сохранить › OK</i></small>",
    "axiswidget.selectorUser": "**Пользовательский диапазон**: Представляет собой минимальные и максимальные значения для оси **пользовательские координаты**, используемые только в таблицах переменных шрифтов OT `fvar` и `STAT`.\n\nВ графики оси будет создано нелинейное **отображение** между координатами проекта (положение основных элементов и экземпляров в FontLab) и пользовательскими значениями координат (положение экземпляров шрифтов с переменной OT, отображаемых в приложениях конечного пользователя).\n\n<small>Для редактирования: откройте <i>график оси</i>, отредактируйте значения для левой части _min_ & _max_ , затем переместите красные точки вверх / вниз, чтобы отобразить диапазон проектирования на любых пользовательских значений координат в пределах пользовательского диапазона. Диапазон осей в шрифтах с переменной OT основан на **диапазоне расположения основных элементов** (фактическое минимальное/максимальное положения основных элементов на оси), отображаемом с помощью графика оси</small>",
    "axiswidget.valueInstances": "*Экземпляры оси**: Представляют собой список именованных положений на оси. Каждый экземпляр оси сопоставляет имя частицы с проектным положением на этой оси (в расчетных координатах).\n\nСоздайте экземпляров оси с помощью <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span>, или определите их вручную, используя формат `ParticleName=location1, \"Particle Name\"=location2`. Оберните имя в `\"` если будут использоваться пробелы. Оберните его в `()` чтобы пропустить его при построении предопределенных имен для экземпляров.\n\nВ<i>› Экземплярах</i>, Когда будет нажата клавиша <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>или -кликните<i>из осей</i>, FontLab объединит имена частиц для всех осей (в порядке осей) и создаст предопределенные записанные экземпляры. Когда вы экспортируете переменный шрифт, экземпляры осей буду экспортированы в виде таблицы `STAT`.",
    "axiswidget.valueName": "**Название оси**: Удобочитаемое название изменяемой оси. Нечувствителен к регистру, при экспорте в шрифты Variable OT будут учитываться заглавные буквы.",
    "axiswidget.valueShortName": "**Код оси**: 2-буквенный код, используемый внутри FontLab для указания положения мастеров и экземпляров",
    "axiswidget.valueTag": "**Тег оси**: 4-буквенный тег, используемый в таблице шрифтов переменной `var` OT. Выберите общую ось для использования зарегистрированного или популярного тега, используйте полностью прописной тег для пользовательской оси",
    "bar_brush.buttonBrushes": "@brushproperties.buttonBrushes",
    "bar_brush.buttonEraser": "@widgetbrush.buttonEraser",
    "bar_brush.buttonExpand": "@brushproperties.buttonExpand",
    "bar_brush.buttonNormal": "@widgetbrush.buttonNormal",
    "bar_brush.buttonSetRemove": "**Удалить кисть**: Предназначен для удаления фильтра Power Brush/Мощная кисть, при этом будет сохранен основной каркас контура.",
    "bar_brush.buttonSmart": "@widgetbrush.buttonPower",
    "bar_brush.previewBrush": "Предосмотр текущей формы и размера кисти\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Сделайте 2ой×клик</b></span> чтобы открыть панель <i>Brush/Кисть</i> на которой можно точно настроить размер кисти и изменить контрастность штриха и модуляцию",
    "bar_brush.sizeList": "@brushproperties.sizeList",
    "bar_brush.sliderSize": "@brushproperties.valueSize",
    "bar_brush.valueSize": "@brushproperties.valueSize",
    "bar_ellipse.buttonAdd": "**Добавить новый эллипс / прямоугольник**: Предназначен для создания эллипса или прямоугольника с заданными значениями ширины и высоты и разместить фигуру таким образом, чтобы выбранная исходная точка находилась в заданных координатах по осям X и Y",
    "bar_ellipse.buttonCurved": "@widgetellipse.buttonCurved",
    "bar_ellipse.buttonEraser": "**Ластик для прямоугольников**: С помощью инструмента можно  **вырезать прямоугольные фигуры** из существующих контуров вместо того чтобы создавать новую фигуру.",
    "bar_ellipse.buttonRound": "@widgetellipse.buttonRound",
    "bar_ellipse.buttonStar": "@widgetellipse.buttonStar",
    "bar_ellipse.editH": "Задайте **высоту** для новой фигуры (овала или прямоугольника)\n\nЗатем нажмите <i>Add/Добавить</i> чтобы создать новую фигуру с заданными значениями ширины и высоты и разместить ее так, чтобы выбранная исходная точка находилась в заданных координатах по осям X и Y",
    "bar_ellipse.editW": "Задайте **ширину** для эллипса или прямоугольника\n\nКликните на кнопке <i>Add/Добавить</i> чтобы создать новую фигуру (овал или прямоугольник) с заданными значениями ширины и высоты и разместить его так, чтобы выбранная исходная точка находилась в заданных координатах по осям X и Y",
    "bar_ellipse.editX": "Введите значение координат по оси **X** чтобы задать начало координат для новой фигуры (овала или прямоугольника)\n\nЗатем нажмите на кнопку <i>Add/Добавить</i>, чтобы создать новую фигуру овал или прямоугольник с заданными значениями ширины и высоты, и расположить ее так, чтобы выбранная исходная точка находилась в указанных координатах по осям X и Y",
    "bar_ellipse.editY": "Введите значение координат по оси **Y** чтобы задать начало координат для новой фигуры (овала или прямоугольника)\n\nЗатем нажмите на кнопку <I>Add/Добавить</I>, чтобы создать новую фигуру овал или прямоугольник с заданными значениями ширины и высоты, и расположить ее так, чтобы выбранная исходная точка находилась в указанных координатах по осям X и Y",
    "bar_ellipse.selectorCenter": "Выберите **исходную точку** для создания новой фигуры овала или прямоугольника\n\nЗатем нажмите на кнопку <I>Add/Добавить</I>, чтобы создать новую фигуру овал или прямоугольник с заданными значениями ширины и высоты, и расположить ее так, чтобы выбранная исходная точка находилась в указанных координатах по осям X и Y",
    "bar_glyph.buttonExpandAppearance": "@mainwindow.actionFlatten_Glyph",
    "bar_glyph.buttonRemoveOverlap": "@mainwindow.actionMerge_Outlines",
    "bar_glyph.buttonTags": "**Теги**: Откройте раскрывающийся список с тегами, в котором вы можете назначить теги для текущего глифа.\n\nЯрлык будет заполнен в том случае, если для глифа назначены теги",
    "bar_glyph.checkAuto": "@inspector_layers.checkAuto",
    "bar_glyph.editBottomLeft": "Нижний угол с левой стороны ограничен рамкой для слоя глифа",
    "bar_glyph.editCountContours": "Количество контуров в текущем слое лифа",
    "bar_glyph.editCountNodes": "Количество точек (включая точки вне кривой) в текущем слое глифа",
    "bar_glyph.editCountShapes": "Количество элементов в текущем слое глифа, включая компоненты и элементы контура по умолчанию",
    "bar_glyph.editHeight": "Высота ограничительной рамки для текущего слоя глифа",
    "bar_glyph.editTopRight": "Верхний правый угол слоя глифа ограничен рамкой",
    "bar_glyph.editWidth": "Ширина ограничительной рамки для текущего слоя глифа",
    "bar_glyph.selectorUnicode": "**Кодовая точка Юникода**: Предназначена для отображения кодовой точки Юникода для текущего глифа. Кликните, чтобы открыть выпадающий список, в котором будет показан пример глифа, представляющего кодовую точку, имя символа в Юникоде, скрипт и категория",
    "bar_glyph.valueRecipe": "@inspector_layers.valueRecipe",
    "bar_guideline.buttonAddStem": "**Add standard stem/Добавить стандартный штамб**: Предназначено для создание штамбов по вертикали или горизонтали из выбранных направляющих или хинтинга и добавления в список штамбом через пункт меню <i>Font Info › Stems/ Сведения о шрифте › Штамбы </i>. Для направляющей должна быть задана ширина, которую можно добавить в качестве штамба",
    "bar_guideline.buttonGuide": "**Создать направляющие**: Предназначено для преобразования хинтинга или зон для направляющих",
    "bar_guideline.buttonHint": "**Создать хинтинг**: Преобразует направляющую с заданной шириной в хинтинг",
    "bar_guideline.buttonHorizontal": "**По горизонтали**: По горизонтали будет создана выбранная направляющая",
    "bar_guideline.buttonLock": "**Заблокировать**: Можно заблокировать / разблокировать выбранную направляющую / хинтинг / зону выравнивания. Однако заблокированные элементы можно переименовать",
    "bar_guideline.buttonMeter": "**Измерительные маркеры**: Предназначены для создания автоматических маркеров на выбранной направляющей",
    "bar_guideline.buttonTags": "**Теги**: Откройте диалоговое окно с тегами, позволяющее определить теги для выбранной направляющей. Черный ярлык означает, что для текущей направляющей назначены теги",
    "bar_guideline.buttonUnlink": "**Отсоединить**: Предназначен для отсоединения направляющей или хинтинга от узлов",
    "bar_guideline.buttonVector": "**Вектор**: Предназначен для создания векторной направляющей из выбранной направляющей. Векторы могут быть перевернуты",
    "bar_guideline.buttonVertical": "**По вертикали**: По вертикали будет создана выбранная направляющая",
    "bar_guideline.buttonZone": "**Создать зону**: Предназначена для преобразования направляющей или хинтинга в зону выравнивания.",
    "bar_guideline.colorSelector": "**Цветной тег**: Измените цвет для направляющей / хинтинга / зоны выравнивания",
    "bar_guideline.editAngle": "**Угол**: Можно изменить угол наклона для векторной направляющей в градусах",
    "bar_guideline.editLocation": "**Выражение**: Выражения используются для вычисления положения выбранной направляющей на основе других направляющих, якорей, параметров шрифта.",
    "bar_guideline.editName": "**Имя**: Можно задать имя для выбранной направляющей / хинтинга / выравнивания зоны",
    "bar_guideline.editWidth": "**Ширина**: Толщина для выбранной направляющей / хинтинга / зоны выравнивания",
    "bar_guideline.editX": "**Позиция**: Положение для выбранной направляющей, хинтинга, зоны или позиции исходной точки по горизонтали для векторной направляющей",
    "bar_meter.buttonStickerArrow": "@mainwindow.actionNewSticker_Arrow",
    "bar_meter.buttonStickerCircle": "@mainwindow.actionNewSticker_Circle",
    "bar_meter.buttonStickerLine": "@mainwindow.actionNewSticker_Line",
    "bar_meter.buttonStickerPlus": "@mainwindow.actionNewSticker_Plus",
    "bar_meter.buttonStickerRectangle": "@mainwindow.actionNewSticker_Rectangle",
    "bar_meter.buttonStickerStar": "@mainwindow.actionNewSticker_Star",
    "bar_meter.buttonStickerText": "@mainwindow.actionNewSticker",
    "bar_meter.labelDx": "@bar_meter.valueDx",
    "bar_meter.labelDy": "@bar_meter.valueDy",
    "bar_meter.labelX": "@bar_meter.valueX",
    "bar_meter.labelY": "@bar_meter.valueY",
    "bar_meter.valueAngle": "**Angle** of measurement in degrees, clockwise from upright\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Drag</b></span> on canvas: measure, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: add element guide",
    "bar_meter.valueDx": "**Measuring X distance**:  Horizontal length of the measuring\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Drag</b></span> on canvas: measure, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: add element guide",
    "bar_meter.valueDy": "**Measuring Y distance**:  Vertical length of the measuring\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Drag</b></span> on canvas: measure, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: add element guide",
    "bar_meter.valueLength": "**Measuring length**:  geometric distance from origin to end of the measuring\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Drag</b></span> on canvas: measure, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: add element guide",
    "bar_meter.valueX": "**Measuring X origin**:  Horizontal position of the origin of the measuring\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Drag</b></span> on canvas: measure, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: add element guide",
    "bar_meter.valueY": "**Measuring Y origin**:  Vertical position of the origin of the measuring\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Drag</b></span> on canvas: measure, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: add element guide",
    "bar_meter.widgetAbsolute": "**Location**: the absolute position (x and y coordinates) of the pointer (end of the metering line) relative to the glyph zero point",
    "bar_meter.widgetRelative": "**Delta**: the horizontal and vertical distance from beginning to end of the metering line",
    "bar_metrics.autoWidth": "**Auto spacing**: Automatically calculates advance width and sidebearings of the current glyph (<span style=\"font-style: normal; white-space: nowrap;\"><b>;</b></span> key)",
    "bar_metrics.buttonDeleteKerning": "**Remove pair**: Delete kerning for the current pair",
    "bar_metrics.buttonFrame": "**Auto wrap**: Turn on/off the mode when the entire text is rendered and automatically wrapped in a fixed-size column",
    "bar_metrics.buttonMasters": "**Copy to masters**: In the variable font, copy metrics expressions from the current master to all other masters. Expressions include both linked and bound sidebearings",
    "bar_metrics.buttonPanel": "**Show panel**: Shows / hides the Metrics panel when in the Metrics mode or the Kerning panel when in the Kerning editing mode",
    "bar_metrics.buttonSamples": "**Edit Pairs & Phrases**: Open the dialog allowing to edit or import sample text strings for editing metrics or kerning. Browse sample strings using the dropdown menu in the <i>Text Bar</i> or just by pressing <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span>",
    "bar_metrics.buttonSizeDown": "**Smaller text**: Make the size of text in the Glyph window smaller",
    "bar_metrics.buttonSizeUp": "**Larger text**: Makes the size of text in the Glyph window larger",
    "bar_metrics.buttonString": "**Show Text bar**: Shows / hides the Text Bar at the top of the Glyph window. Type inside the Text Bar instead of in the Glyph window. Use <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> to change strings in the Text Bar",
    "bar_metrics.buttonTable": "**Show Metrics table**: Shows / hides the Metrics table used for spacing and kerning. Edit values in the table in both Kerning and Metrics modes; simply enter new width, left sidebearing (LSB), right sidebearing (RSB) and kerning values in the appropriate fields",
    "bar_metrics.labelTrackingH": "**Horizontal tracking**: Adding more or reducing space between characters in a text string. Tracking does not affect glyph metrics. To make text tighter, select negative tracking values in font units. To add more space between characters, select positive tracking values. Choose <i>0u</i> for no tracking",
    "bar_metrics.labelTrackingV": "**Leading** or line height: show text in the Glyph window with added or reduced space between lines. <i>100%</i> shows the line height equal to the font dimensions (Ascender + Descender + LineGap). Does not change the font dimensions",
    "bar_metrics.lockLSB": "**Bind or unbind left sidebearing**: When you change the glyph layer content, move nodes and contours, the left sidebearing will remain fixed and the width will change",
    "bar_metrics.lockRSB": "**Bind or unbind right sidebearing**: When you change the glyph layer content, move nodes and contours, the right sidebearing will remain fixed and the width will change",
    "bar_metrics.selectorKerningLeft": "The first member of the current kerning pair – the class name (shown in bold) or the glyph name (plain). Click the name to open the class selection dialog box allowing to view or assign the 1st class to the glyph",
    "bar_metrics.selectorKerningRight": "The second member of the current kerning pair – the class name (shown in bold) or the glyph name (plain). Click the name to open the class selection dialog box allowing to view or assign the 2nd class to the glyph",
    "bar_metrics.selectorPreviewSize": "**Text size**: Click to select the size of text in the Glyph window from the list",
    "bar_metrics.selectorTrackingH": "@bar_metrics.labelTrackingH",
    "bar_metrics.selectorTrackingV": "@bar_metrics.labelTrackingV",
    "bar_metrics.staticLSB": "**Left sidebearing**: >Top: absolute, >Bottom: based on Measurement line\n\nTurn on <i>View › Measurement Line</i> and move the line to see / edit Metrics measured at its intersection with the glyph layer content",
    "bar_metrics.staticRSB": "**Right sidebearing**: >Top: absolute, >Bottom: based on Measurement line\n\nTurn on <i>View › Measurement Line</i> and move the line to see / edit Metrics measured at its intersection with the glyph layer content",
    "bar_metrics.staticWidth": "**Advance width**: > Top: absolute, > Bottom: based on Measurement line\n\nTurn on <i>View › Measurement Line</i> and move the line to see / edit Metrics measured at its intersection with the glyph content. The Measurement line shows the glyph image width in this case – the distance between points where the Measurement line intersects glyph outline",
    "bar_metrics.valueKerning": "**Kerning value**: Enter kerning for the current pair of glyphs or classes.\n\nPositive values add space between 1st and 2nd members of the pair. Negative values move members of the pair closer. Enter zero to delete kerning",
    "bar_metrics.valueLSB": "**Left sidebearing** (or **LSB**): rounded distance from **origin point** of the current glyph layer — to either left **intersection** of content with Measurement line if <i>View › Measurement Line</i> is **on** (magenta background), or otherwise to **leftmost edge** of content\n\n<small>Use integers. In Font window, use <i>Glyph panel</i> or bottom bar to set for many glyphs. Click <i>Auto space</i> or tap <span style=\"font-style: normal; white-space: nowrap;\"><b>;</b></span> to calculate glyph metrics. Turn on <i>Font › Live Update › LIve Metrics</i> and link to other glyphs with <i>Font › Link Glyph Metrics</i>, or enter expressions:</small>\n\n<small>**spec**: `Aacute` or `\"Aacute\"` or `Á`: another glyph; `:Bold` same glyph, another layer; `Aacute:Bold`: another layer, another glyph; direct use: same field; **LSB**: `lsb(\"spec\")`, **RSB**: `rsb(\"spec\")`; **opposite SB**: `|`, `|spec`; **bound SB**: `=value`; **width**: `width(\"spec\")`; x of vertical **guide**: `g(\"guidename\")`; **arithmetics**: `+`, `-`, `*`, `/` with `(`, `)`; **conditions**: `=(d>0) ? d : o`; **stats**: `=max(i, w, m)`, `=avg(i, m)`</small>",
    "bar_metrics.valueRSB": "**Right sidebearing** (or **RSB**): rounded distance from either right **intersection** of content with Measurement line if <i>View › Measurement Line</i> is **on** (magenta background), or otherwise from **rightmost edge** of content — to the **advance width** of the current glyph layer\n\n<small>Use integers. In Font window, use <i>Glyph panel</i> or bottom bar to set for many glyphs. Click <i>Auto space</i> or tap <span style=\"font-style: normal; white-space: nowrap;\"><b>;</b></span> to calculate glyph metrics. Turn on <i>Font › Live Update › LIve Metrics</i> and link to other glyphs with <i>Font › Link Glyph Metrics</i>, or enter expressions:</small>\n\n<small>**spec**: `Aacute` or `\"Aacute\"` or `Á`: another glyph; `:Bold` same glyph, another layer; `Aacute:Bold`: another layer, another glyph; direct use: same field; **LSB**: `lsb(\"spec\")`, **RSB**: `rsb(\"spec\")`; **opposite SB**: `|`, `|spec`; **bound SB**: `=value`; **width**: `width(\"spec\")`; x of vertical **guide**: `g(\"guidename\")`; **arithmetics**: `+`, `-`, `*`, `/` with `(`, `)`; **conditions**: `=(d>0) ? d : o`; **stats**: `=max(i, w, m)`, `=avg(i, m)`</small>",
    "bar_metrics.valueWidth": "**Advance width** (or **Width**): horizontal space this glyph layer occupies\n\n<small>Use integers. In Font window, use <i>Glyph panel</i> or bottom bar to set for many glyphs. Click <i>Auto space</i> or tap <span style=\"font-style: normal; white-space: nowrap;\"><b>;</b></span> to calculate glyph metrics. Turn on <i>Font › Live Update › LIve Metrics</i> and link to other glyphs with <i>Font › Link Glyph Metrics</i>, or enter expressions:</small>\n\n<small>**spec**: `Aacute` or `\"Aacute\"` or `Á`: another glyph; `:Bold` same glyph, another layer; `Aacute:Bold`: another layer, another glyph; direct use: same field; **LSB**: `lsb(\"spec\")`, **RSB**: `rsb(\"spec\")`; **opposite SB**: `|`, `|spec`; **bound SB**: `=value`; **width**: `width(\"spec\")`; x of vertical **guide**: `g(\"guidename\")`; **arithmetics**: `+`, `-`, `*`, `/` with `(`, `)`; **conditions**: `=(d>0) ? d : o`; **stats**: `=max(i, w, m)`, `=avg(i, m)`</small>",
    "bar_pin.buttonAppearance": "@pinspanel.buttonAppearance",
    "bar_pin.buttonCloud": "**Preview cloud**: Make the selected anchor / pin active / inactive. To see the cloud of accents, the <i>View › Anchor Cloud</i> option should be on. To make all anchors / pins active / inactive in the current glyph layer, go to the corresponding list in the <i>Anchors &amp; Pins</i> panel and use corresponding buttons in the panel’s local toolbar",
    "bar_pin.buttonMasters": "**Copy to masters**: Copies location expressions to the corresponding anchor or pin on all other font masters",
    "bar_pin.editLocationX": "**Expression for X coordinate:** Positions the anchor or pin dynamically in relation to other named guides, font parameters, anchors and pins. Basic math operations are allowed",
    "bar_pin.editLocationY": "**Expression for Y coordinate:** Positions the anchor or pin dynamically in relation to other named guides, font parameters, anchors and pins. Basic math operations are allowed",
    "bar_pin.editName": "**Anchor / pin name**: Unique text identifier for the anchor / pin within the glyph.\n\nStart with a plain English letter (`A-Za-z`). Only use those letters, digits (`0-9`), hyphens (`-`). Do not use spaces. Use underscore (`_`) in front of anchor name in accent glyphs to pair the anchor with anchors without underscore in the base glyphs",
    "bar_pin.editX": "**X coordinate**: Horizontal (x) coordinate of the anchor or pin",
    "bar_pin.editY": "**Vertical coordinate**: Vertical (y) coordinate of the anchor or pin",
    "bar_pin.labelName": "A: anchor; P: pin",
    "bar_prepolate.buttonAllowCleanup": "#### Allow to clean up segments\n\n‣ **on**: when you match masters, may not only add nodes, but also removes nodes",
    "bar_prepolate.buttonBlend": "#### Show intermediates\n\nIf **on**:<br/>‣ shows intermediate interpolated designs between each visible master<br/>‣ colorizes each master using its color assigned in <i>Layers and Masters</i> panel\n\nIf **off**:<br/>‣ shows node numbers<br/>‣ colorizes each segment with a unique color in all visible masters<br/>‣ if any node / segment in the contour is selected with the <i>Contour</i> tool: shows that contour in bold, shows other contours in pale\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> eye icon in <i>Layers and Masters</i> panel header: show / hide all masters.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> eye for master: show / hide it.</small>",
    "bar_prepolate.buttonCleanup": "#### Clean up all masters\n\nPerforms <i>Contour › Clean Up</i> in all masters. May remove points to help making masters compatible.",
    "bar_prepolate.buttonMatchMasters": "#### Match masters\n\nTries to make all master layers compatible for interpolation, so that variation is possible. If glyph has two masters, adds extra nodes so matching is more effective.\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: applies only the auto-matching corrections that are turned on in <i>Font Info › Axes</i> to all master layers.</small>\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span>: applies all auto-matching corrections: corrects order of contours, relocates start nodes to optimal position, sorts components and elements, corrects segment and node type.</small>",
    "bar_prepolate.buttonMatchWidth": "#### Match masters width\n\n‣ **on:** applies visual compensation for width difference across visible masters\n\n<small>Does not change the glyphs</small>",
    "bar_prepolate.buttonSetDirection": "#### Set PS contour direction\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: correct contour direction (make PostScript direction) in current master\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span>: correct contour direction in all visible masters\n\n<small><span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> node: reverse contour</small>",
    "bar_prepolate.buttonSetStartpoints": "#### Relocate start points\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: makes the optimal node as the start point of each contour of the current layer.<br/><small>Uses sharp node on a line segment closest to the origin point (0,0), or sharp node closest to the origin, or any node closest to the origin.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span>: relocates start points in all visible masters.\n\n<small><span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> node: make it the start point of the contour</small>",
    "bar_prepolate.label": "@bar_prepolate.previewStatus",
    "bar_prepolate.previewStatus": "If **match status** of other masters towards current master is:\n\n‣ **green**: full match<br/>‣ **yellow**: match only when using <i>Font Info › Axes</i> auto-matching settings<br/>‣ **red**: mismatch, no variation; use <i>Match masters</i>",
    "bar_prepolate.sliderBlend": "#### Intermediates opacity\n\nIf <i>Show intermediates</i> is on, choose the opacity of the intermediate interpolations shown in the Glyph window.\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> eye icon in <i>Layers and Masters</i> panel header: show / hide all masters.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> eye for master: show / hide it.</small>",
    "bar_prepolate.spinBlend": "#### Number of intermediates\n\nIf <i>Show intermediates</i> is on, choose how many intermediate interpolations between visible masters the Glyph window shows.\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> eye icon in <i>Layers and Masters</i> panel header: show / hide all masters.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> eye for master: show / hide it.</small>",
    "bar_shape.buttonAutoComponent": "@mainwindow.actionComponentAttached",
    "bar_shape.buttonCenter": "@shapespanel.buttonCenter",
    "bar_shape.buttonFlipH": "@shapespanel.buttonFlipH",
    "bar_shape.buttonFlipV": "@shapespanel.buttonFlipV",
    "bar_shape.buttonLink": "#### Decompose / unlink reference\n\n‣ **Component**: Replace the component that points to a source glyph with the contours of the source glyph. To also copy anchors from the source glyph, use <i>Glyph › Decompose</i>.\n\n‣ **Element reference**: Replace an element reference with a standalone element and unlock the element contents.",
    "bar_shape.buttonLocationReset": "#### Reset location\n\nMoves the element / component to its original (0,0) position, removes the live shift.",
    "bar_shape.buttonNonSpacing": "@mainwindow.actionNon_Spacing",
    "bar_shape.buttonRotateReset": "#### Reset rotate and slant\n\nSets the live rotate and live slant transformation of the selected component / element to 0°.",
    "bar_shape.buttonScaleReset": "**Reset scale**: Sets the live scale transformation of the selected component / element to 100%.",
    "bar_shape.selectorName": "**Replace**: C: component; N: element\n\nIf the lable has underline, click to replace the selected component / element reference with another component / reference",
    "bar_shape.valueLocationX": "@shapespanel.valueLocationX",
    "bar_shape.valueLocationY": "@shapespanel.valueLocationY",
    "bar_shape.valueName": "N: **Element name**: Optional name of an element. Named elements appear in the Gallery panel. Use <i>Element › Element Reference</i> to insert references to named elements.\n\nC: **Glyph name of component source**: Name of the glyph used as the source of selected component. Type another glyph name to replace the component with a component that points to a different source glyph.",
    "bar_shape.valueRotate": "**Rotation angle**: Enter the value in degrees to rotate the selected component / element by that angle. The point of origin is the bottom left. To bring the component / element back to its original form, use the <i>Reset rotate and slant</i> button",
    "bar_shape.valueScaleH": "**Horizontal scale** of the selected component / element is shown as its width. To enlarge an element horizontally, enter values above 100%. To make an element narrower, enter values below 100%. To scale an element proportionally, enter the same value for its width and height. To revert the element to its original size, click the <i>Reset scale</i> button",
    "bar_shape.valueScaleV": "**Vertical scale** of the selected component / element is shown as its height. To enlarge an element vertically, enter values above 100%. To make an element lower, enter values below 100%. To scale an element proportionally, enter the same value for its width and height. To revert the element to its original size, click the <i>Reset scale</i> button",
    "bar_shape.valueSlant": "**Slant angle**: Enter the value in degrees to slant the selected component / element by that angle. The point of origin is the bottom left. To bring the component / element back to its original form, use the <i>Reset rotate and slant</i> button",
    "bar_singlenode.buttonAlignH": "**Align horizontally**: Aligns selected objects by their centers horizontally",
    "bar_singlenode.buttonAlignV": "**Align vertically**: Aligns selected objects by their centers vertically",
    "bar_singlenode.buttonBCP": "**Handle position**: Shows the relative position of the selected Bézier Control Point (BCP) from the on-curve point where it originates. When off shows absolute position",
    "bar_singlenode.buttonBreak": "**Break contour**: Breaks the contour, makes open contour with two overlapping nodes",
    "bar_singlenode.buttonGenius": "**Make Genius (G2-smooth)**: Changes the type of the selected node to genius. Genius node is a type of smart, PostScript node that always retains G2 continuity or ultra-smoothness",
    "bar_singlenode.buttonLink": "**Proportional scale**: Sets the mode to proportional scale or non-proportional. Click to toggle",
    "bar_singlenode.buttonMirrorH": "**Flip horizontally**: Mirrors selection horizontally",
    "bar_singlenode.buttonMirrorV": "**Flip vertically**: Mirrors selection vertically",
    "bar_singlenode.buttonOffset": "**Offset mode**: The next two fields offer two modes: location icon means you can see and change the absolute node position defined by the values you enter for X and Y co-ordinates; the offset move icon means you can move by the designated distance based on the values you enter for X and Y co-ordinates",
    "bar_singlenode.buttonRemoveOverlap": "@mainwindow.actionMerge_Outlines",
    "bar_singlenode.buttonSeparate": "**Unlink corners**: Breaks contours at each corner into separate overlapping sections, and adjusts each former corner vector a little (while maintaining their former shape) such that they cross",
    "bar_singlenode.buttonSharp": "**Corner**: Changes the type of the selected node to corner",
    "bar_singlenode.buttonSmooth": "**Smooth**: Changes the type of the selected node to smooth",
    "bar_singlenode.editH": "Selection Height / Vertical scale value: Values for scaling can be added in either percentage (displayed as %) or absolute units (displayed as u). Select % or u next to this field. Set 100% to not scale vertically",
    "bar_singlenode.editName": "**Node name**: Usually nodes do not have names, but you may need to name nodes sometimes",
    "bar_singlenode.editW": "Selection Width / Horizontal scale value: Values for scaling can be added in either percentage (displayed as %) or absolute units (displayed as u). Select % or u next to this field. Set 100% to not scale horizontally",
    "bar_singlenode.editX": "**X coordinate**: To move the selected node horizontally, change its X coordinate in the glyph space",
    "bar_singlenode.editY": "**Y coordinate**: To move the selected node vertically, change its Y coordinate in the glyph space",
    "bar_singlenode.selectorCenter": "**Reference point**: Allows you to set the transformation origin using the nine-point reference locator",
    "bar_singlenode.unitsH": "Set scaling by percentage or absolute units",
    "bar_singlenode.unitsW": "Set scaling by percentage or absolute units",
    "bar_stroke.buttonExchange": "@shapespanel.buttonExchange",
    "bar_stroke.widgetColorBrush": "@shapespanel.widgetColorBrush",
    "bar_stroke.widgetColorPen": "@shapespanel.widgetColorPen",
    "bar_text.buttonFeatures": "**Features**: Opens a dialog with a list of all OpenType features in the font",
    "bar_text.buttonFind": "**Find glyphs**: Opens the <i>Find Glyphs</i> (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>F</b></span>) pane",
    "bar_text.buttonFrame": "@bar_metrics.buttonFrame",
    "bar_text.buttonLowercase": "**Text to lowercase**: Replaces uppercase glyphs in the text with their lowercase counterparts",
    "bar_text.buttonSamples": "@bar_metrics.buttonSamples",
    "bar_text.buttonSizeDown": "@bar_metrics.buttonSizeDown",
    "bar_text.buttonSizeUp": "@bar_metrics.buttonSizeUp",
    "bar_text.buttonString": "@bar_metrics.buttonString",
    "bar_text.buttonUppercase": "**Text to uppercase**: Replaces lowercase glyphs in the text with their uppercase counterparts",
    "bar_text.fontChartView": "**Related glyphs**: Shows the list of glyphs related to the current one. Click one of the listed glyphs to add it to the text after the current glyph",
    "bar_text.labelTrackingH": "@bar_metrics.labelTrackingH",
    "bar_text.labelTrackingV": "@bar_metrics.labelTrackingV",
    "bar_text.selectorPreviewSize": "@bar_metrics.selectorPreviewSize",
    "bar_text.selectorTrackingH": "@bar_metrics.labelTrackingH",
    "bar_text.selectorTrackingV": "@bar_metrics.labelTrackingV",
    "bar_transform.buttonLink": "**Proportional scale**: Turns proportional scale on and off. When on, the horizontal value is used for vertical scale",
    "bar_transform.buttonMirrorH": "**Horizontal flip**: Mirrors the transformation rectangle horizontally",
    "bar_transform.buttonMirrorV": "**Vetical flip**: Mirrors the transformation rectangle vertically",
    "bar_transform.buttonRotateLeft": "**Rotate left (CCW)**: Rotates the transformation rectangle countercloclkwise by designated angle",
    "bar_transform.buttonRotateRight": "**Rotate right (CW)**: Rotates the transformation rectangle cloclkwise by designated angle",
    "bar_transform.buttonScaleDown": "**Scale down**: Scales down the transformation rectangle by the designated percentage. Use the <i>Proportional scale</i> toggle to scale proportionally",
    "bar_transform.buttonScaleUp": "**Scale up**: Scales up the transformation rectangle by the designated percentage. Use the <i>Proportional scale</i> toggle to scale proportionally",
    "bar_transform.buttonShiftLeft": "**Shift left and down**: Moves the transformation rectangle left and down by the designated number of units",
    "bar_transform.buttonShiftRight": "**Shift right and up**: Moves the transformation rectangle right and up by the designated number of units",
    "bar_transform.buttonSlantLeft": "**Slant left**: Slant the transformation rectangle to the left",
    "bar_transform.buttonSlantRight": "**Slant right**: Slant the transformation rectangle to the right",
    "bar_transform.editRotate": "**Rotation angle**: Enter the value and use <i>Rotate right</i> and <i>Rotate left</i> buttons",
    "bar_transform.editScaleH": "**Horizontal scale**: Enter the percentage for horizontal scale here and use <i>Scale</i> buttons. Zero doesn't scale, 100 scales by 100%",
    "bar_transform.editScaleV": "**Vertical scale**: Enter the percentage for vertical scale here and use <i>Scale</i> buttons. Zero doesn't scale, 100 scales by 100%",
    "bar_transform.editShiftX": "**Horizontal shift**: Enter the horizontal distance for shift and use <i>Shift</i> buttons",
    "bar_transform.editShiftY": "**Vetical shift**: Enter the vertical distance for shift and use <i>Shift</i> buttons",
    "bar_transform.editSlant": "**Slant angle**: Enter the value and use <i>Slant right</i> and <i>Slant left</i> buttons",
    "bar_transform.selectorCenter": "**Reference point**: Allows you to set the transformation origin using the nine-point reference locator",
    "bar_tth.buttonAutohint": "**Autohint**: Automatically hints the glyph and builds the instruction program",
    "bar_tth.buttonMenu": "#### TTH menu\n\nLocal menu with additional hinting commands.",
    "bar_tth.buttonMore": "**Other TTH Settings**: Opens the dialog box allowing to change various hinting options including text preview sizes and text strings",
    "bar_tth.buttonRenderBW": "**Black/White**: Selects the black/white pixel preview",
    "bar_tth.buttonRenderCT": "**ClearType**: Selects ClearType – the real Windows system rasterizer",
    "bar_tth.buttonStems": "**TTH Stems**: Opens the TrueType stems dialog box allowing to view and edit standard stems for TrueType hinting",
    "bar_tth.buttonViewCenters": "**Pixel Centers**: Shows centers of pixels. When the outline is filled, all pixels whose centers are on the outline or inside the outline are set black. This layer is very useful for delta hinting",
    "bar_tth.buttonViewGrid": "**Grid**: Shows gridlines that mark the edges of pixels at the selected PPM size",
    "bar_tth.buttonViewImage": "**Preview**: Shows resulting pixel preview. FontLab uses the real TrueType rasterizer to preview a filled glyph at the selected PPM after interpretation of the instruction program",
    "bar_tth.buttonViewOff": "**Off-Curve Points**: Shows off-curve control points",
    "bar_tth.buttonViewOutline": "**Hinted outline**: Shows hinted outline, which is the result of the interpretation of the instruction program, appears in blue. The original, untouched outline of the glyph appears in grey",
    "bar_tth.buttonZones": "**TTH Zones**: Opens the TrueType alignment zones dialog box allowing to view and edit alignment zones",
    "bar_tth.label": "@bar_tth.valuePPM",
    "bar_tth.sizeList": "**Text size menu**: Select one of the predefined size values. The Glyph window will show how outlines are rasterized at the particular size",
    "bar_tth.valuePPM": "**Text size**: Enter your own value in the field. The Glyph window will show how outlines are rasterized at the particular size",
    "brushproperties.brushNib": "**Tip shape**: preview of the brush tip\n\nDrag the arrow to change the **angle** of the stroke contrast. Drag the round control point to change the **minimum** thickness of the stroke contrast relative to the brush size",
    "brushproperties.brushShape": "**Stroke modulation and terminals**: Drag the top points to change how the thickness changes along the stroke. Click the left and right points to change the shape of the stroke start and finish",
    "brushproperties.buttonAdd": "**Add brush to collection**: adds current brush to the list of predefined brushes that you can choose in the brush bar or panel",
    "brushproperties.buttonBrushes": "**Open collection**: choose a brush from a predefined list",
    "brushproperties.buttonExpand": "**Expand Power Brush**: converts current Power Brush stroke to simple contours",
    "brushproperties.buttonList": "**Show collection**: shows list of predefined brushes",
    "brushproperties.buttonMore": "**Brush panel menu**: opens a menu where you can save the predefined brushes to a file, import brushes from a file or reset the list of predefined brushes to default",
    "brushproperties.buttonPressure": "**Pressure-sensitive**:  **on**: brush size changes dynamically when you use a pointing device that is pressure-sensitive, like a pen or tablet",
    "brushproperties.buttonRemove": "**Remove brush from the collection**: removes selected brush from the list of predefined brushes",
    "brushproperties.buttonSetRemove": "**Apply or remove Power Brush**: applies currently selected brush stroke to current element, or remove a Power Brush stroke",
    "brushproperties.chartBrush": "**Collection**: list of predefined brushes. Use <i>Add</i> (`+`) and <i>Remove</i> (`-`) buttons to customize collection",
    "brushproperties.frameTop": "@mainwindow.actionPropertyPanel",
    "brushproperties.label_2": "@brushproperties.valueSize",
    "brushproperties.legendSize": "@brushproperties.valueSize",
    "brushproperties.previewBrush": "Preview of the current brush shape and size",
    "brushproperties.sizeList": "**Brush sizes**: open list of predefined brush sizes. The list includes the stem values defined in <i>Font Info › Stems</i>\n\nIf Power Brush is active, changes the size of the current Power Brush element",
    "brushproperties.sliderSize": "@brushproperties.valueSize",
    "brushproperties.valueSize": "**Brush size**:  change the stroke **thickness** in font units\n\nIf the brush has contrast or modulation, this changes the maximum thickness. If Power Brush is active, changes the size of the current Power Brush element",
    "classespanel.alignCenter": "**Center**: Aligns glyph previews by their centers",
    "classespanel.alignLeft": "**Left align**: Aligns glyph previews by their left sidebearings",
    "classespanel.alignRight": "**Right align**: Aligns glyph previews by their right sidebearings",
    "classespanel.buttonAddGlyphs": "**Add glyphs to class**: Adds glyphs selected in the Font window to the current class or tag group",
    "classespanel.buttonList": "**List sidebar**: Shows the contents of the selected class as a spreadsheet. The list includes glyph Name, Unicode, LSB, Width, RSB and OT Class, and can be sorted by any of these criteria. Unicode values are shown in uppercase, and variant glyphs without Unicode (such as \"E.smcp\") show the Unicode of the base glyph. The list can also help to compare and synchronize two or more selected OpenType classes",
    "classespanel.buttonPreview": "**Preview**: Opens the **Preview** area where the preview of all glyphs included in the selected class(es) is shown. This mode is useful for previewing kerning classes: select the first (left) kerning class and then <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span>-click to select the second (right) kerning class, or select the same classes in the Kerning panel. Both classes will appear in the Preview area, and if kerning is defined for them, it will be applied to the preview",
    "classespanel.buttonSelectGlyphs": "**Select glyphs**: Click to select glyph cells belonging to the currently selected classes in the Font window. After cells are selected in the Font window you can color mark them or apply any other glyph operation",
    "classespanel.buttonTable": "**Table**: Opens the Table area that shows glyphs belonging to the selected class(es) as cells along with their names. If two or more classes are selected, glyph cells from the selected classes are shown overlapping in the cells. This makes it easy to verify that classes for substitution have the same set of glyphs.\n\nUse buttons in the bottom right corner to enlarge or make cells smaller",
    "classespanel.buttonType": "**Class type**: The type of the current class / tag. Click to change the type of the selected kerning class. Note that a glyph cannot belong to 2 classes having the same type",
    "classespanel.checkAlternative": "@dlginsertshape.checkAlternative",
    "classespanel.classAdd": "**Add class**: Opens the menu allowing to select the type of class to create. A new class or tag is created with a default name, with the glyphs selected in the Font window as its members. Rename new class using the <i>Name</i> field above the list of classes",
    "classespanel.classMore": "**Classes <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> menu**\n\n‣ <i>Import Classes</i> imports classes from a `.flc` or `.json` file<br/>‣ <i>Import From Features</i> imports classes from the code in the <i>Features</i> panel<br/>‣ <i>Copy Classes From</i> imports classes from another opened font or master<br/>‣ <i>Generate Kerning Classes</i> builds kerning classes based on optical analysis<br/>‣ <i>Remove All Classes</i> removes all classes, keeps tags, flattens kerning if needed<br/><i>Fix Ordering</i> corrects glyph order within OpenType classes<br/>‣ <i>Clean Up Selected Classes</i> removes missing glyphs from the selected class(es)<br/><i>Export Classes</i> exports classes into a `.flc` or `.json` file",
    "classespanel.className": "**Class name**: Click to rename the selected class. Click anywhere outside the field to apply changes. Class names may include Latin characters, digits, dots, underline characters",
    "classespanel.classRemove": "**Remove classes**: Deletes classes / tags selected in the list. To delete all classes, use the local menu",
    "classespanel.colorMark": "#### Color Flag\n\nAssign a color to the class to visually differentiate groups of classes.\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to assign a predefined color flag to selected classes. <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> <i>…</i> to choose other colors.\n\nSometimes called “mark”. Not used in final font formats",
    "classespanel.flagBlue": "**Blue flag**: Applies blue color flag to the selected classes",
    "classespanel.flagCyan": "**Cyan flag**: Applies cyan color flag to the selected classes",
    "classespanel.flagGreen": "**Green flag**: Applies green color flag to the selected classes",
    "classespanel.flagMagenta": "**Magenta flag**: Applies magenta color flag to the selected classes",
    "classespanel.flagNone": "**No flag**: Clears the color flag for the selected classes",
    "classespanel.flagRed": "**Red flag**: Applies red color flag to the selected classes",
    "classespanel.frameLegend": "@mainwindow.actionGroupsPanel",
    "classespanel.frameTop": "@mainwindow.actionGroupsPanel",
    "classespanel.labelName": "@classespanel.className",
    "classespanel.legendList": "The number of classes shown in the list",
    "classespanel.legendText": "The number of glyphs in the selected class(es)/tags",
    "classespanel.searchClear": "**Reset filter**: Clears the filter edit box",
    "classespanel.searchField": "**Filter**: To search for classes including particular glyph, enter its name. To not search among synonyms, turn off the option next to the filter",
    "classespanel.selectorName": "Use this menu to select which parameter (glyph Name, Unicode or Character) to show in the List sidebar when more than one class is selected for comparison",
    "classespanel.selectorType": "**Class type**: Filters which classes or tags are shown in the list below. <i>All classes</i> does not include tags and virtual tags",
    "classespanel.sizeDecrease": "**Smaller cells**: Makes the glyph cells in the Table area smaller",
    "classespanel.sizeIncrease": "**Bigger cells**: Makes the glyph cells in the Table area bigger",
    "colorpanel.actionSlidersGrayscale": "Grayscale mode",
    "colorpanel.actionSlidersHSB": "HSB (hue, saturation, brightness) mode, hue is the primary property",
    "colorpanel.actionSlidersRGB": "RGB mode",
    "colorpanel.areaColor": "**Color frame**: Choose secondary color property",
    "colorpanel.barColor": "**Color palette**: Select color by clicking the palette",
    "colorpanel.barHue": "**Color bar**: Select the primary color property",
    "colorpanel.barOpacity": "**Opacity**: Drag slider to the left for more transparency, drag to the right for more opacity.",
    "colorpanel.buttonApply": "**Apply Color**: Applies currently selected swatch color to current element or glyph. Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span> in Font window to apply to all selected glyphs",
    "colorpanel.buttonBoxes": "**Box panel**: Activate frame + bar color selecting panel",
    "colorpanel.buttonEyedropper": "**Eyedropper**: Click any object in the glyph window to select its color",
    "colorpanel.buttonSliders": "**Sliders panel**: Activate color sliders panel",
    "colorpanel.buttonWheel": "**Wheel panel**: Activate color wheel panel",
    "colorpanel.colorSource": "**Color**: Set stroke or body color or reset current color to transparency",
    "colorpanel.colorWheel": "**Color wheel**: Select current color using wheel for hue and triangle for brightness",
    "colorpanel.editColorRGB": "**Color name or code**: Enter color in #RRGGBB format or color name\n\n \n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "colorpanel.slider1": "First (primary) color property",
    "colorpanel.slider2": "Second color property",
    "colorpanel.slider3": "Third color property",
    "colorpanel.valueOpacity": "**Opacity**: Enter the opacity value here or use the slider at the left",
    "def.anchorpin": "**Anchor**: special named point inside the glyph layer. Attach a mark / component to a base glyph via auto layers or attached components if the base glyph has an anchor named e.g. `top`, and the mark has an anchor with the same name prefixed with `_` e.g. `_top`.<br/>**Pin**: special named point inside an element. Use pins to position elements using expressions, and to attach elements to each other.<br/>‣ Add them with <i>Guides</i> tool. Edit in <i>Anchors & Pins panel</i>. Customize appearance in <i>Preferences › Glyph Window</i>.",
    "def.attachedcomponent": "An **attached component** automatically snaps to the location determined by the corresponding anchors.<br/>‣ The app searches for mark anchors (prefixed with `_`) in the source glyph of the attached component, and searches for corresponding base anchors (same name, without the prefix) in the source glyphs of other components, or in the current glyph layer.<br/>‣ The position of the attached component is determined by the earliest found correspondence.<br/>‣ To move an attached component manually, detach it.",
    "def.element": "**Element**: basic piece of design inside a glyph layer.<br/>‣ In single-master **monochrome fonts**: glyph layer usually has one contour element with contours, or from one or more components that dynamically “import” contours from other glyphs<br/>‣ In fonts with **multiple masters**: each layer has its own elements, which must match in number, sequence and content<br/>‣ In **color fonts**: layer may have image / SVG elments, components, and also contour elements; each has its own fill color and/or stroke color and thickness<br/>‣ **Group**: also an element<br/>‣ **Compound element**: contour element with a contour filter applied (Smart Fill, Smart Corner, Glue, Power Brush, Power Stroke, Delta, Skin, CLipping Group)<br/>‣ Element **reference**: element that appears multiple times in the same or different glyphs, has the same content but different transformation, color, stroke.",
    "def.elementfilter": "**Element filter**: an algorithm that applies a live, non-destructive transformation to a contour element to produce a different result. Examples: Smart Fill, Smart Corner, Glue, Power Brush, Power Stroke, Delta, Skin, Clipping Group. If you apply a filter, you can edit the source contour element, and you can change the properties of the filter.<br/>‣ To convert to final contours: <i>Expand</i> a selected filter in <i>Elements</i> panel, or <i>Expand Filters</i> in <i>Element</i> menu.<br/>‣ To remove the filter result and restore the source contour: <i>Remove</i> a selected filter in <i>Elements</i> panel or in <i>Element</i> menu.",
    "def.elementref": "**Element reference**: piece of design that has the same content (contours, image) as other elements in the font. Each element reference can have its own transformation, color, stroke. Element which has a name appears in the <i>Gallery</i> panel. If locked, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> to edit content. See <i>Element › Element Reference</i> for more commands.",
    "def.globalmask": "**Global mask**: special layer that is not directly editable but can appear in the background of all glyphs in the current layer.<br/>‣ <i>View › Show › Global Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Global Mask</i>: snap to it (if visible)<br/>‣ <i>Tools › Copy to Global Mask</i>: copy current selection into the global mask<br/>‣ <i>Tools › Clear Global Mask</i>: remove the contents of the global mask<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i>",
    "def.glyphtext": "**Glyphtext**: Unicode text notation mixed with special “escaped” strings that you can use to input glyphs. Enter a series of plain characters like `Ж`. Follow an escaped string or series of strings with a space to enter a plain Unicode character.<br/>‣ `/glyphname`: glyph name or synonym like `Zhe-cy.sc` or `Zhecyr.sc`<br/>‣ `/character.suffix`: variant of a Unicode character like `Ж.sc`<br/>‣ `\\uXXXX`: The Unicode codepoint of a character like `\\u0416`",
    "def.mask": "**Mask**: a special snappable layer in which you can keep contours or images for reference, and show its content in the background of the current layer. A mask is associated with a main layer using the `mask.` name prefix.<br/>‣ <i>View › Show › Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Mask</i>: snap to it (if visible)<br/>‣ <i>Tools</i> menu: switch or swap content between the current layer and its associated mask, copy selections to mask and paste from it<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i>",
    "def.nonspacing": "**Nonspacing**: a nonspacing element / component is visible and exports, but it’s “invisible” to the metrics engine. The app ignores a nonspacing component when you specify a sidebearing value, when you use linked metrics, or when you paste metrics with <i>Paste Special</i>.",
    "def.quickmeasurement": "**Quick measurement**: visual measurements that appear automatically in the <i>Glyph window</i> if you move your pointer on fill (inside a filled area), on outline (near the outline) or everywhere. The basic Quick measurement shows the distance between two closest paths. In <i>Preferences › Glyph Window › Quick measurement</i>, you can show additional measurements between opposite segments inside a filled area:<br/>‣ **End lines**: distances near both ends of the segments.<br/>‣ **Center line**: center line between the segments.<br/>‣ **Thickness rainbow**: colorful fill that changes with the distance, towards **blue** with smaller, towards **red** with larger distance. **Uniform blue**: parallel lines or curves with distance that matches <i>Measurements panel</i> contrast.",
    "dlgactions.buttonCancel": "**Cancel**: Closes the dialog without running the action.",
    "dlgactions.buttonLayerActive": "#### Current Layer\n\nRuns the action in the chosen glyph(s) on the layer chosen in the <i>Layers & Masters</i> panel or in the window property bar",
    "dlgactions.buttonLayerMasters": "#### All Masters\n\nRuns the action in the chosen glyph(s) on all master layers (which belong to a font master or are a font-less master)",
    "dlgactions.buttonLayerVisible": "#### Visible Layers\n\nRuns the action in the chosen glyph(s) on the layers which are set as _visible_ in the “eye” column of the <i>Layers & Masters</i> panel",
    "dlgactions.buttonOK": "**OK**: Runs the selected action on the chosen layer(s) of the chosen glyph(s), then closes the dialog.\n\nWhen you click <i>Run</i>, the <i>OK</i> button changes to <i>Close</i>. If you click <i>Close</i>, the dialog closes without running the action. When you switch to another action, the button becomes <i>OK</i> again.",
    "dlgactions.buttonRangeAll": "#### All Glyphs\n\nRuns the action on the chosen layer(s) of _all glyphs in the font_",
    "dlgactions.buttonRangeSelected": "#### Selected Glyphs\n\n‣ If you opened Actions from the **Font window**, runs the action on the chosen layer(s) of the _selected glyphs_\n\n‣ If you opened Actions from the **Glyph window**, runs the action on the chosen layer(s) of the _current glyph_",
    "dlgactions.buttonRangeWindow": "#### Glyphs in Window\n\n‣ If you opened Actions from the **Font window**, runs the action on the chosen layer(s) of the _filtered glyphs_ if <i>Hide unfiltered glyphs</i> is on in the Font window property bar, otherwise on _all glyphs_\n\n‣ If you opened Actions from the **Glyph window**, runs the action on the chosen layer(s) of the _window text_ (glyphs shown in the Glyph window)",
    "dlgactions.buttonRun": "**Run**: Runs the selected action on the chosen layer(s) of the chosen glyph(s) but keeps the dialog open. Click <i>Run</i>, then choose another action, click <i>Run</i> again etc.\n\nWhen you click <i>Run</i>, the <i>OK</i> button changes to <i>Close</i>. If you click <i>Close</i>, the dialog closes without running the action. When you switch to another action, the button becomes <i>OK</i> again.",
    "dlgactions.checkEntireFont": "**Apply to entire font**: Check this option to run the selected action for every glyph in the font. Otherwise the action will be applied only to the glyph currently open in the Glyph window or to the glyphs selected in the Font window",
    "dlgactions.labelCount": "Indicates the total number of glyphs the action will be applied to",
    "dlgactions.listActions": "**Actions list**: The list of available actions.\n\n‣ Click the action name to select it and to change its parameters.<br/>‣ Click a section name to show / hide its actions.",
    "dlgactions.preview": "**Preview**: Shows how the selected action will affect the current layer of the chosen glyph(s).\n\n<small>Tip: if you opened Actions from a Glyph window, choose <i>Glyphs: Window</i> to see the same text as in your window. Tweak the action parameters and preview the result. Then choose <i>Glyphs: All</i> to run the action on all glyphs.</small>",
    "dlgactions.searchClear": "**Clear**: Deletes the text in the Search field",
    "dlgactions.searchField": "**Search field**: Allows to find Actions from the list. Note that it only checks for the beginning of words",
    "dlgaddellipse.buttonBlack": "Draw in **normal contour direction**. Fills overlaps with filled contours that have PS direction.",
    "dlgaddellipse.buttonCurved": "@bar_ellipse.buttonCurved",
    "dlgaddellipse.buttonRound": "@bar_ellipse.buttonRound",
    "dlgaddellipse.buttonWhite": "Draw in **reversed contour direction**. Unfills overlaps with filled contours that have PS direction.",
    "dlgaddellipse.selectorCenter": "**Origin point**: Set the drawing origin using the nine-point reference locator",
    "dlgaddellipse.valueHeight": "**Height**: Set the ellipse / rectangle height",
    "dlgaddellipse.valueWidth": "**Width**: Set the ellipse / rectangle width",
    "dlgaddglyphs.buttonApply": "**Apply**: Adds selected glyphs to the current font but leaves the dialog box open\n\nDepending on the settings in <i>Preferences › Operations › New glyphs</i>, the added glyphs will either be blank or will have some contents",
    "dlgaddglyphs.buttonCancel": "**Cancel**: Closes the dialog box without any changes",
    "dlgaddglyphs.buttonOK": "**OK**: Closes the dialog box and adds selected glyphs to the current font. Depending on the settings in <i>Preferences › Operations › New glyphs</i>, the added glyphs will either be blank or will have some contents",
    "dlgaddglyphs.buttonSelectAll": "**Select All**: Selects all cells of glyphs that are absent in the current font. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>click</b></span> cells to exclude particular single glyphs from the selection",
    "dlgaddglyphs.chartPreview": "The list of glyph cells. The cells colored gray contain glyphs that already exist in the font, and cannot be selected. The remaining glyphs could be added. Select any glyph, or use <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>click</b></span> (<span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>click</b></span>) to add additional glyphs to your selection, or use <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> to select a range.\n\nHolding <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span> shows the glyph information: Unicode index, Unicode name, script and category",
    "dlgaddglyphs.checkMark": "**Flag new glyphs**: Marks new created glyphs with the selected color flag. Choose the color in the dropdown menu",
    "dlgaddglyphs.colorMark": "**Color Flag**: Allows to select the color flag for new created glyphs to visually differentiate groups of glyphs",
    "dlgaddglyphs.itemsText": "Start typing keywords defining the group of glyphs, for example, \"cyr upp\" shows all uppercase Cyrillic glyphs at the right",
    "dlgaddglyphs.label": "Unicode index and Unicode name of the current glyph cell",
    "dlgaddglyphs.modeCategories": "**Categories**: Shows the list of predefined glyph categories like <i>Uppercase Letter</i> or <i>Math Symbol</i>. Choosing one of the categories will bring up all the glyphs in it on the right. Most non-Latin characters are in the <i>Other letter</i> group, so if you need non-Latin characters you should use the <i>Scripts</i> tab for more specific results",
    "dlgaddglyphs.modeRanges": "**Ranges**: Shows a list of available Unicode ranges – another way to find a particular group of glyphs. Click one of the ranges in the list to see all of its available characters",
    "dlgaddglyphs.modeScripts": "**Scripts**: Shows a long list of all available Unicode scripts (writing systems). Latin, for instance, is the script used for writing English, Czech and Vietnamese among other languages. Click one of the scripts in the list to see all of its available characters",
    "dlgaddglyphs.modeSmart": "**Smart**: The mode where you can type the script name and/or category or some other word combining several Unicode characters. For example, you could type: `lowercase greek`, or `uppercase geo` for Georgian, or just `tam` for Tamil. FontLab will show you the glyphs that fit the keywords you have typed in",
    "dlgaddglyphs.searchClear": "**Reset filter**: Deletes text from the <i>Filter</i> field",
    "dlgaddglyphs.searchField": "**Glyph filter**: Enter glyph name or Unicode index to search for a particular glyph; enter the part of the category, Unicode range or script title to filter the corresponding list by names",
    "dlgaddglyphs.sizeDecrease": "**Smaller cells**: Makes glyph cells in the dialog smaller",
    "dlgaddglyphs.sizeIncrease": "**Bigger cells**: Makes glyph cells in the dialog bigger",
    "dlgaddmissingglyphs.buttonCancel": "**Ignore**: Closes the dialog without changes to the font",
    "dlgaddmissingglyphs.buttonOK": "**Create Missing Glyphs**: Creates glyphs and closes the dialog",
    "dlgaddmissingglyphs.checkBox": "Turn this option on to not show this dialog. FontLab will not create missing glyphs in this case but it will print warnings to the Output panel instead. To show the dialog box again, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>-click on <i>Compile</i> in the Features panel",
    "dlgaddmissingglyphs.checkMarkGlyphs": "**Flag new glyphs**: Marks new added glyph cells with the selected color flag",
    "dlgaddstar.buttonBlack": "Draw in **normal contour direction**. Fills overlaps with filled contours that have PS direction.",
    "dlgaddstar.buttonPolygon": "**Polygon**: creates a polygon",
    "dlgaddstar.buttonStar": "**Star**: creates a star",
    "dlgaddstar.buttonWhite": "Draw in **reversed contour direction**. Unfills overlaps with filled contours that have PS direction.",
    "dlgaddstar.valueParameter": "**Corners**: Set the number of polygon or star corners",
    "dlgaddstar.valueRadius": "**Radius**: Set the radius of the polygon / star",
    "dlgaddvariation.buttonCancel": "**Cancel**: Closes the dialog box without changes",
    "dlgaddvariation.buttonOK": "**OK**: Creates new master and axis if needed and closes the dialog.\n\n<small>If you’re adding a master and a new axis, FontLab makes a copy of the current master (with kerning and kerning classes), gives it the chosen name, and adds the axis. Same happens if you’re adding a master for an existing axis that only has 1 master.</small>\n\n<small>If you’re adding a master for an axis that already has 2 or more masters, FontLab interpolates or extrapolates the new master (with kerning and kerning classes), and gives it the chosen name.</small>",
    "dlgaddvariation.checkAddAxes": "**Add axes**:  ‣**On** adds new axis if you’re creating a variation in a new axis",
    "dlgaddvariation.editName": "Type new master name here. FontLab suggests common master names. Choose one of these names, and FontLab will automatically provide a location on the design axis",
    "dlgaddvariation.label": "@dlgaddvariation.editName",
    "dlgartworkwarning.buttonColor": "Paste the artwork vector paths as separate elements, and **preserve** the fill color and the stroke color & thickness\n\nThis is preferred for **color** fonts, and is equivalent to <i>Preferences › Paste & Duplicate › Ignore artwork stroke and fill</i> **off**\n\n<small>Use the <i>Element</i> menu, and the <i>Color</i>, <i>Stroke</i> and <i>Swatches</i> panels to combine the elements and change their stroke and color</small>",
    "dlgartworkwarning.buttonOK": "**Place the artwork using these settings now**\n\nThis dialog appears only once. Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span> and choose <i>Edit › Paste Artwork</i> to open it again or change the settings in <i>Preferences › Paste & Duplicate</i>",
    "dlgartworkwarning.buttonPasteAlign": "@pref_paste.buttonPasteAlign",
    "dlgartworkwarning.buttonPasteAscenderDescender": "@pref_paste.buttonPasteAscenderDescender",
    "dlgartworkwarning.buttonPasteCapsBaseline": "@pref_paste.buttonPasteCapsBaseline",
    "dlgartworkwarning.buttonPasteCapsDescender": "@pref_paste.buttonPasteCapsDescender",
    "dlgartworkwarning.buttonPasteNoscale": "@pref_paste.buttonPasteNoscale",
    "dlgartworkwarning.buttonPasteUPM": "@pref_paste.buttonPasteUPM",
    "dlgartworkwarning.checkBox": "You can change this setting later in <i>Preferences › Paste & Duplicate › Ignore artwork stroke and fill</i>",
    "dlgartworkwarning.checkColor": "@pref_paste.checkColor",
    "dlgartworkwarning.checkIgnoreAppearance": "@pref_paste.checkIgnoreAppearance",
    "dlgartworkwarning.label": "@dlgartworkwarning.buttonColor",
    "dlgartworkwarning.label_2": "@dlgartworkwarning.buttonOK",
    "dlgartworkwarning.selectorColor": "@pref_paste.checkColor",
    "dlgartworkwarning.selectorIgnoreAppearance": "@pref_paste.checkIgnoreAppearance",
    "dlgartworkwarning.selectorPasteAlign": "@pref_paste.buttonPasteAlign",
    "dlgartworkwarning.selectorPasteAscenderDescender": "@pref_paste.buttonPasteAscenderDescender",
    "dlgartworkwarning.selectorPasteCapsBaseline": "@pref_paste.buttonPasteCapsBaseline",
    "dlgartworkwarning.selectorPasteCapsDescender": "@pref_paste.buttonPasteCapsDescender",
    "dlgartworkwarning.selectorPasteNoscale": "@pref_paste.buttonPasteNoscale",
    "dlgartworkwarning.selectorPasteUPM": "@pref_paste.buttonPasteUPM",
    "dlgauditselector.buttonSelectAll": "**Check all**: Click to activate all FontAudit tests in the list below",
    "dlgauditselector.buttonUnselect": "**Uncheck all**: Click to deactivate all FontAudit tests in the list below",
    "dlgauditselector.scrollContents": "Check the FontAudit test to activate it",
    "dlgauditselector.valueStemTolerance": "@pref_audit.valueStemTolerance",
    "dlgautotrace.buttonCancel": "Closes the dialog without any action",
    "dlgautotrace.buttonOK": "Traces bitmap images into vector outlines using the selected options and closes the dialog box",
    "dlgautotrace.checkExtremes": "**Add nodes at extremes**: Adds nodes at top, bottom, left and right edges of each contour",
    "dlgautotrace.checkSimplify": "**Simplify to PS curves**: Additionally simplifies the trace result into PostScript curves and lines. May remove additional nodes, always adds nodes at extremes",
    "dlgautotrace.labelCurveDegree": "The result of the trace before simplification will be line segments, TrueType curves and lines, or PostScript curves and lines (default). Simplify always gives PostScript contours",
    "dlgautotrace.labelCurveFit": "**Allowed curve approximation error**: 0 gives very many nodes. Higher values give fewer curve nodes and flatter segments. Default: 2",
    "dlgautotrace.labelStraighten": "**Allowed line approximation error**: 0 gives almost no straight lines. Higher values prefer lines over curves. Default: 5",
    "dlgautotrace.labelTolerance": "**Distance from the image edge to the outline**: Default 1 follows the image edges closely. Higher values follow the edges more loosely and give more straight lines",
    "dlgautotrace.selectorCurveDegree": "The result of the trace before simplification will be line segments, TrueType curves and lines, or PostScript curves and lines (default). Simplify always gives PostScript contours",
    "dlgautotrace.selectorImage": "Keep or remove the image after tracing, or move it to the Mask layer",
    "dlgautotrace.sliderCurveFit": "**Allowed curve approximation error**: 0 gives very many nodes. Higher values give fewer curve nodes and flatter segments. Default: 2",
    "dlgautotrace.sliderStraighten": "**Allowed line approximation error**: 0 gives almost no straight lines. Higher values prefer lines over curves. Default: 5",
    "dlgautotrace.sliderTolerance": "**Distance from the image edge to the outline**: Default 1 follows the image edges closely. Higher values follow the edges more loosely and give more straight lines",
    "dlgautotrace.valueCurveFit": "**Allowed curve approximation error**: 0 gives very many nodes. Higher values give fewer curve nodes and flatter segments. Default: 2",
    "dlgautotrace.valueOpacity": "Sets image opacity to the desired value (20% is default, 100% keeps image as is)",
    "dlgautotrace.valueStraighten": "**Allowed line approximation error**: 0 gives almost no straight lines. Higher values prefer lines over curves. Default: 5",
    "dlgautotrace.valueTolerance": "**Distance from the image edge to the outline**: Default 1 follows the image edges closely. Higher values follow the edges more loosely and give more straight lines",
    "dlgaxismap.actionCopy": "Copies the Axis Graph content so you can paste it to another axis graph\n\n<small>If <i>Preferences › Editing › Copy FontLab JSON as plain text</i> is on, you can paste the copied content to a text editor, make edits, and paste back</small>",
    "dlgaxismap.actionCubic": "**Cubic graph points**:  Moves graph points so they form a convex curve-like shape",
    "dlgaxismap.actionLinear": "**Linear graph points**:  Aligns existing graph points along a straight line",
    "dlgaxismap.actionPaste": "Replaces the current axis graph with copied content",
    "dlgaxismap.actionReset": "**Remove graph points**: Removes all graph points, keeping the design and user range. Moves the red mapping points of the design range onto the user range to the limits of the user range",
    "dlgaxismap.actionSmooth": "**Smoothen graph points**:  Moves graph points to reduce abrupt changes",
    "dlgaxismap.buttonAddPoints": "**Adds graph points** from locations of existing <i>Masters</i>, from locations of <i>Instances</i> defined in <i>Font Info › Instances</i>, or from the <i>Axes Instances</i> defined in <i>Font Info › Axes</i>\n\n<small>**Weight** axis should have standardized user locations such as `Thin` at `100`, `(Regular)` at `400`, `Bold` at `700`, or `Black` at `900`. To set standardized user locations for common axes (weight, width, italic, slant, optical size), choose <i>Font Info › Axes</i>, choose <i><span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> › From Axis Defaults</i>, then in <i>Axis Graph</i> choose <i>Add Points › From Axis Instances</i></small>",
    "dlgaxismap.buttonCancel": "Close the Axis Graph dialog and ignore the changes",
    "dlgaxismap.buttonGrid": "Show / hide an axis graph **grid**, helpful for visual orientation",
    "dlgaxismap.buttonInstances": "Show / hide green **instance lines**: locations of predefined instances\n\nVertical line: design location of the instance, as defined in <i>Font Info › Instances</i>. Horizontal line: the corresponding user location, as will be shown to end-users of a Variable OT font\n\n<small>Variable OT fonts should have a `Regular` instance in the main master location. **Weight** axis should have standardized user locations such as `Thin` at `100`, `(Regular)` at `400`, `Bold` at `700`, or `Black` at `900`. To set standardized user locations for common axes (weight, width, italic, slant, optical size), choose <i>Font Info › Axes</i>, choose <i><span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> › From Axis Defaults</i>, then in <i>Axis Graph</i> choose <i>Add Points › From Axis Instances</i></small>",
    "dlgaxismap.buttonLineInit": "**Reset**: Makes a fully linear axis graph. Removes all graph points. Sets the design range to the existing master location range (the min/max locations of existing masters) plus extra 12% on each side for extrapolation. Sets the user range identical to the design range",
    "dlgaxismap.buttonMasters": "Show / hide **master** lines. Vertical line: design location as defined in <i>Font Info › Masters</i>. Horizontal line: corresponding user location\n\n‣ **Orange line**: location of the main master (`0` in normalized variable space); <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> vertical line or click value: change location of all masters at this location, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span> left/right: scale lower (normalized variable `-1` to `0`) and higher (normalized variable `0` to `-1`) master / instance locations<br/>‣ **Blue lines**: locations of other masters; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> vertical line or click value: change location of all masters at this location\n\n<small>Variable OT fonts should have a Regular instance in the main master location</small>",
    "dlgaxismap.buttonOK": "Close the Axis Graph dialog and **accept** the changes\n\nIf you’ve changed the **design range** (min/max), the <i>New Design Coordinates Range</i> will appear. There, choose <i>Scale</i> to adjust existing master & instance locations to the new range, or click <i>Keep</i> to only change the limit, allowing extrapolation",
    "dlgaxismap.frameTop": "@dlgaxismap.widget",
    "dlgaxismap.labelDesign": "**Design coordinates** define **location** of masters and instances on an axis, but are not used in end-user formats\n\nSet the **design range** (min/max values) in the text boxes. Static instances and <i>Variations panel</i> extrapolation is within the design range\n\nThe **master location range** (actual min/max location of masters on the axis) must be within the design range. It exports to DesignSpace and Variable OT as axis range. Variable OT instances must be within the master location range\n\n<small>You can use **user coordinates** as your design coordinates, but you can also use more meaningful numbers</small>",
    "dlgaxismap.labelUser": "**User coordinates** are the coordinates that end-users see. Used only in Variable OT fonts `fvar` and `STAT` tables and in DesignSpace, not in static fonts. For common Variable OT axes (weight, width, slant, italic, optical size), user coordinates are standardized\n\nSet the **user range** (min/max values) using the text boxes, then move the red dots up/down to map design range to any user coordinates within the user range. Add/move points on the Axis Graph or use the buttons on top to create a non-linear **mapping** between design coordinates and user coordinates\n\n<small>Axis range in Variable OT fonts is based on the **master location range** (actual min/max location of masters on the axis), mapped via the Axis Graph</small>",
    "dlgaxismap.valueH0": "**Design coordinates minimum**: Lowest limit for extrapolation and master locations. Static instance locations must be ≥ than this limit, Variable OT instances must be ≥ min master location\n\n<small>When you change it, click <i>Scale locations</i> or <i>OK › Scale</i> to adjust existing master & instance locations to the new range, or click <i>OK › Keep</i> to only change the limit, allowing extrapolation</small>",
    "dlgaxismap.valueH1": "**Design coordinates maximum**: Highest limit for extrapolation and master locations. Static instance locations must be ≤ than this limit, Variable OT instances must be ≤ max master location\n\n<small>When you change it, click <i>Scale locations</i> or <i>OK › Scale</i> to adjust existing master & instance locations to the new range, or click <i>OK › Keep</i> to only change the limit, allowing extrapolation</small>",
    "dlgaxismap.valueV0": "**User coordinates minimum**: Lowest limit for the mapping of the design range minimum onto the user coordinates.  Move the left red circle up/down to actually map the design range minimum to a user coordinate\n\n<small>**User coordinates** are the coordinates that end-users see. Used only in Variable OT fonts `fvar` and `STAT` tables and in DesignSpace, not in static fonts. Variable OT fonts should have a `Regular` instance in the main master location. **Weight** axis should have standardized user locations such as `Thin` at `100`, `(Regular)` at `400`, `Bold` at `700`, or `Black` at `900`. To set standardized user locations for common axes (weight, width, italic, slant, optical size), choose <i>Font Info › Axes</i>, choose <i><span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> › From Axis Defaults</i>, then in <i>Axis Graph</i> choose <i>Add Points › From Axis Instances</i></small>",
    "dlgaxismap.valueV1": "**User coordinates maximum**: Highest limit for the mapping of the design range maximum onto the user coordinates. Move the right red circle up/down to actually map the design range maximum to a user coordinate\n\n<small>**User coordinates** are the coordinates that end-users see. Used only in Variable OT fonts `fvar` and `STAT` tables and in DesignSpace, not in static fonts. Variable OT fonts should have a `Regular` instance in the main master location. **Weight** axis should have standardized user locations such as `Thin` at `100`, `(Regular)` at `400`, `Bold` at `700`, or `Black` at `900`. To set standardized user locations for common axes (weight, width, italic, slant, optical size), choose <i>Font Info › Axes</i>, choose <i><span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> › From Axis Defaults</i>, then in <i>Axis Graph</i> choose <i>Add Points › From Axis Instances</i></small>",
    "dlgaxismap.widget": "‣ **Gray line**: mapping of design to user coordinates, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: add graph point (black circle) to make the mapping non-linear<br/>‣ **Orange line**: location of the main master; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> or click value: change location of all masters at this location, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span> left/right: scale lower and higer master/instance locations<br/>‣ **Blue lines**: locations of other masters; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> or click value: change location of all masters at this location<br/>‣ **Green lines**: locations of predefined instances\n\n‣ **Black circle**: graph point defining a non-linear break; <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: remove, <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> or click coordinates: change value<br/>‣ **Red circle**: mapping of design range limit to a user coordinate; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> up/down: change",
    "dlgchangeupm.radioScale": "#### Scale glyphs and metrics to the new UPM value\n\nChanges UPM value, and resizes the drawings so that relation of the drawings to the UPM value remains the same.\n\nIf you increase UPM value, the density of the font unit grid increases, so you get more precision to position your points at integer coordinates. If <i>Contour › Coordinates › Round when Editing</i> is on or you choose <i>Apply Rounding</i>, all points, guides and anchors will be rounded to the new font unit grid",
    "dlgchangeupm.radioUpmOnly": "#### Change only UPM value\n\nKeeps the drawings of the glyphs unchanged, but changes the end-user size. Increase the UPM value 2× to squeeze twice as many font units into the font size — so at any given font size, all glyphs will 50% smaller",
    "dlgchangeupm.valueUpm": "#### Units Per eM (UPM) value\n\nYour glyphs are drawn on a **grid** where coordinates are measured in integer **font units**. The **eM** represents the **font size** in the end-user apps that use the font. The **UPM value** defines how many font units are “squeezed” into the font size, so it determines the density (resolution of precision) of the font unit grid in the final font\n\n<small>Example: If the UPM is 1000 and you use the font at 12 pt, then a glyph that is 500 units tall will be 6 pt tall. If you change the UPM value to 2000, twice as many font units will be squeezed into the 12 pt font size — so your glyph will be 3 pt tall, and the font unit grid will have double density</small>",
    "dlgchooseglyph._searchBottomLess": "Glyph bottom is less than...",
    "dlgchooseglyph._searchBottomMore": "Glyph bottom is more than...",
    "dlgchooseglyph._searchCategory": "Glyph belongs to category starting from...",
    "dlgchooseglyph._searchCodepage": "Glyph belongs to codepage starting from...",
    "dlgchooseglyph._searchEncoding": "Glyph belongs to encoding starting from...",
    "dlgchooseglyph._searchLayers": "Glyph layer is...",
    "dlgchooseglyph._searchMark": "Glyph Color flag is...",
    "dlgchooseglyph._searchNameAlternative": "Synonym glyphs",
    "dlgchooseglyph._searchNameContains": "Glyph name contains...",
    "dlgchooseglyph._searchNameEndsWith": "Glyph name ends with...",
    "dlgchooseglyph._searchNameStartsFrom": "Glyph name starts from...",
    "dlgchooseglyph._searchScript": "Glyph belongs to script starting from...",
    "dlgchooseglyph._searchString": "Glyph in the typed text",
    "dlgchooseglyph._searchTags": "Glyph Tag is...",
    "dlgchooseglyph._searchTopLess": "Glyph top is less than...",
    "dlgchooseglyph._searchTopMore": "Glyph top is more than...",
    "dlgchooseglyph._searchUnicode": "Glyph Unicode codepoint starts from...",
    "dlgchooseglyph._searchUnicodeContains": "Glyph Unicode codepoint contains...",
    "dlgchooseglyph._searchUnicodeNameContains": "Glyph Unicode name contains...",
    "dlgchooseglyph._searchUnicodeRange": "Glyph belongs to Unicode range starting from...",
    "dlgchooseglyph._searchWidthLess": "Glyph advance width is less than...",
    "dlgchooseglyph._searchWidthMore": "Glyph advance width is more than...",
    "dlgchooseglyph.buttonSelectAll": "**Select glyphs**: Selects glyphs satisfying the chosen criterion",
    "dlgchooseglyph.fontChartView": "The list of glyphs: To select a glyph, click it in the list (or select multiple glyphs by holding down <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span> or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span>). To select all glyphs, click the <i>Select glyphs in the list</i> button in the top right corner.\n\nIf you were in the Font window, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> the selected glyphs closes the dialog and selects the glyphs in the Font window. If you were in the Glyph window, the same action opens the selected glyphs in the Glyph window",
    "dlgchooseglyph.legendText": "The number of filtered glyphs in the list",
    "dlgchooseglyph.legendTitle": "Shows the chosen criterion",
    "dlgchooseglyph.searchClear": "**Reset filter**: Removes the text from the search field",
    "dlgchooseglyph.searchField": "**Find Glyphs**: Start typing glyph name, tag, or other keyword here. Based on what you type, different criteria will become available from the list on the left",
    "dlgchooseglyph.sizeDecrease": "**Smaller cells**: Makes glyph cells in the list smaller",
    "dlgchooseglyph.sizeIncrease": "**Bigger cells**: Makes glyph cells in the list bigger",
    "dlgclosepackage.buttonCancel": "**Cancel**: Do not save changes and do not close the file",
    "dlgclosepackage.buttonDiscard": "**Don't Save**: Proceed without saving. All changes will be lost",
    "dlgclosepackage.buttonSave": "**OK**: Save changes to the file before closing it",
    "dlgclosepackage.preview": "Current layer preview",
    "dlgcloseproject.buttonCancel": "**Cancel**: Do not save changes and do not close the project",
    "dlgcloseproject.buttonDiscard": "**Don't Save**: Proceed without saving. All changes will be lost",
    "dlgcloseproject.buttonSave": "**OK**: Save changes to the project before closing it",
    "dlgcomponentglyphsdelete.buttonCancel": "**Cancel**: Close the dialog box without deleting anything",
    "dlgcomponentglyphsdelete.buttonOK": "**OK**: Proceed with deleting the listed glyphs and close the dialog box",
    "dlgcomponentglyphsdelete.checkPreserveRecipes": "**Preserve recipes**: Check this option to keep the recipes in auto glyphs",
    "dlgcomponentglyphsdelete.radioDecompose": "**Decompose**: All selected glyphs will be deleted. Components used in composite glyphs will be decomposed",
    "dlgcomponentglyphsdelete.radioKeepSource": "**Keep source glyphs**: Glyphs used as components in composite glyphs will not be deleted. Other selected glyphs will be deleted",
    "dlgcomponentglyphsdelete.radioToReferences": "**To references**: All selected glyphs will be deleted. Components used in composite glyphs will be converted to elements and element references",
    "dlgcreateglyphs.buttonCancel": "Closes the dialog box without changes to the font",
    "dlgcreateglyphs.buttonOK": "Generates glyph(s) according to the selected options, closes the dialog box and if <i>Open new glyphs for editing</i> is checked opens the new Glyph window with created glyphs",
    "dlgcreateglyphs.checkDynamic": "**Create auto layers**: Generates auto glyphs: adds elements as references, uses anchors to position elements in the primary glyphs, the advance width is inherited from the base glyphs, and the contents of the generated glyphs will automatically fill and update over time as you add new base and mark glyphs. The recipes that you’ve used to generate the auto glyphs are copied into the glyph recipe field of the glyphs’ auto layers",
    "dlgcreateglyphs.checkLegacyCode": "#### Use simple (FLS5) syntax\n\n \n\n‣ **Off:** Put one `glyphname=recipe` entry per line in **extended** syntax, like `Aacute = A + acute@top`\n\n‣ **On:** Put one or more space-separated `recipe=glyphname` entries per line in **simple** syntax compatible with FontLab Studio 5, like `A+acute=Aacute`, or put one `!glyphname=recipe` entry per line in **extended** syntax, like `!Aacute = A + acute@top`\n\n<small>Put multiple glyph names in one or more lines to use built-in glyph recipes. For syntax reference, close this dialog, tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>F1</b></span> and reopen <i>Font › Generate Glyphs › Custom</i>.</small>",
    "dlgcreateglyphs.checkMark": "Marks new created glyphs with the selected color flag. Shoose the color in the dropdown menu",
    "dlgcreateglyphs.checkReplace": "**Rebuild existing glyphs**: Overwrites existing glyphs if the newly-generated glyphs have the same names",
    "dlgcreateglyphs.checkUseAnchors": "**Use anchors**: Makes use of any anchors created in the source glyphs to position them together. This is usually desirable, and is most commonly used for better positioning of diacritical marks (accents)",
    "dlgcreateglyphs.checkWindow": "**Open new glyphs for editing**: Opens newly-generated glyphs for editing in the new Glyph window",
    "dlgcreateglyphs.colorMark": "**Color Flag**: Allows to select the color flag for new created glyphs to visually differentiate groups of glyphs",
    "dlgcreateglyphs.editSuffix": "Enter the appropriate suffix for new glyph variants. For example, if your input selection is the text `fön` and you specify the suffix `ss01`, FontLab will try to generate the glyphs `f.ss01`, `odieresis.ss01` and `n.ss01`",
    "dlgcreateglyphs.labelSize": "**Text size menu**: Allows to select the text size for glyphs preview at the bottom of the dialog",
    "dlgcreateglyphs.linkShapes": "**Link as references**: Generates glyphs using References to the Elements in the original glyphs. This too is commonly used for accented glyphs, and sometimes for ligatures as long as no changes are needed to the elements",
    "dlgcreateglyphs.modeCharacters": "Switches the dialog to the mode allowing to generate characters selected in the <i>Font window</i> or typed / pasted / selected in the <i>Glyph window</i> using the <i>Text tool</i> in advance",
    "dlgcreateglyphs.modeCustom": "In the Custom mode, you can enter your own glyph generation code to generate glyphs. This code can be in two syntaxes: the <i>simple syntax</i> or the <i>extended syntax</i>. Turn on <i>Use simple (FLS5) syntax</i> to use both simple and extended syntax, turn off for extended syntax only\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "dlgcreateglyphs.modeLigature": "Switches the dialog to the mode allowing to generate a single glyph which horizontally combines the glyphs from the input selection. Eg: if your input selection was the text `fön``, FontLab will try to generate the glyph `f_odieresis_n`",
    "dlgcreateglyphs.modePrecomposed": "Switches the dialog to the mode allowing to generate a single glyph that overlays all glyphs from the input you have selected in the <i>Font window</i> or <i>Glyph window</i>",
    "dlgcreateglyphs.modeVariants": "Switches the dialog to the mode allowing to generate variant glyphs for each glyph that you have selected in the <i>Font window</i> or <i>Glyph window</i> as input.Enter the appropriate Suffix for the variants in the field on the left of the dialog, or use the dropdown to select from suffixes used for OpenType features",
    "dlgcreateglyphs.preview": "Shows the quick preview of glyphs that will be generated using current options. Change the text string size in the <i>Size</i> menu at the top right",
    "dlgcreateglyphs.radioActiveMaster": "**Active master only**: Generates glyphs only in the current font master. New glyphs will have only one layer in this case",
    "dlgcreateglyphs.radioAllMasters": "**All masters**: Generates glyphs on every master of a variable font",
    "dlgcreateglyphs.selectorSize": "**Text size menu**: Allows to select the text size for glyphs preview at the bottom of the dialog",
    "dlgcreateglyphs.selectorSuffix": "**Suffix menu**: Lists suffixes used for OpenType features. Choose one for your new glyphs",
    "dlgcreateinstance.buttonFont": "**Create as Font**: Create new single master font using the current dynamic instance",
    "dlgcreateinstance.buttonMaster": "**Add as Master**: Create new font master using the current dynamic instance and add it to the current variable font",
    "dlgcustomizeprofile.buttonCancel": "**Cancel**: Closes the dialog without changes",
    "dlgcustomizeprofile.buttonOK": "**OK**: Saves changes to the current custom export profile or if you customize the default profile creates new custom profile based on the default one",
    "dlgcustomizeprofile.description": "**Description area**: Click on the option above to see its description here",
    "dlgduplicateglyph.button0": "**Alternative form**: Add `.alt` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>0</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button1": "**Stylistic set 1**: Add `.ss01` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>1</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button10": "**Subscript**: Add `.sups` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>8</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button11": "**Swash**: Add `.swsh` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>9</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button2": "**Stylistic set 2**: Add `.ss02` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>2</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button3": "**Stylistic set 3**: Add `.ss03` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>3</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button4": "**Smallcaps**: Add `.sc` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>4</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button5": "**Smallcaps**: Add `.smcp` suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button6": "**Numerators**: Add `.numr` suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button7": "**Denominators**: Add `.dnom` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>5</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button8": "**Oldstyle figures**: Add `.onum` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>6</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.button9": "**Proportional figures**: Add `.pnum` (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>7</b></span>) suffix to names of duplicated glyphs",
    "dlgduplicateglyph.buttonCancel": "Closes the dialog box without changes to the font",
    "dlgduplicateglyph.buttonOK": "**Set**: Duplicates glyphs selected in the Font window and names them by adding the suffix from the text field to the original glyph names",
    "dlgduplicateglyph.valueName": "**Suffix value**: Enter your custom glyph name suffix here. The suffix will be used in names of new added glyphs",
    "dlgexpand.buttonCancel": "**Cancel**: Closes the dialog box without changes",
    "dlgexpand.buttonCapButt": "**Butt cap**: Ends of open contours get butt caps",
    "dlgexpand.buttonCapRound": "**Round cap**: Ends of open contours get round caps",
    "dlgexpand.buttonCapSquare": "**Square cap**: Ends of open contours get square caps",
    "dlgexpand.buttonJoinBevel": "**Bevel join**: Bevel joins are drawn as if the joining segments were stroked with butt cap ends and the resulting notch is filled with a triangle",
    "dlgexpand.buttonJoinMiter": "**Meter join**: Extends the outer edges of the lines until they meet at an angle, similar to the corners of a picture frame",
    "dlgexpand.buttonJoinRound": "**Round join**: Draws a circle with a diameter equal to the stroke width at each bend",
    "dlgexpand.buttonOK": "**OK**: Expands selected contours using the current parameters and closes the dialog box",
    "dlgexpand.valueOffsetX": "**Distance**: Enter the distance between new parallel contours here",
    "dlgfeaturesselector.buttonCompile": "@glyphwindow.buttonCompile",
    "dlgfeaturesselector.buttonDefault": "@glyphwindow.buttonDefault",
    "dlgfeaturesselector.buttonOK": "**OK**: Applies changes and closes the dialog box",
    "dlgfeaturesselector.buttonUnselect": "@glyphwindow.buttonUnselect",
    "dlgfeaturesselector.checkFeatures": "**Features**: Applies OpenType features selected in the list to the text in the Glyph window, Preview panel or Sketchboard text frame. Also activates internationalized text processing: bidirectional rendering and Unicode normalization",
    "dlgfeaturesselector.listFeatures": "@glyphwindow.listFeatures",
    "dlgfeaturesselector.selectorLanguage": "@glyphwindow.selectorLanguage",
    "dlgfeaturesselector.selectorScript": "@glyphwindow.selectorScript",
    "dlgfindoutline.buttonCancel": "Closes the dialog",
    "dlgfindoutline.buttonFind": "Searches for the contour(s) shown in the left <i>Find</i> section, opens the glyph containing found contour(s) and selects the contour(s). After the found contours were selected, click <i>Find</i> again to continue the search, or click <i>Replace</i> to replace the selection with the contour(s) shown in the right <i>Replace</i> section, or click <i>Replace & Find</i> to replace and continue the search",
    "dlgfindoutline.buttonFindPaste": "**Paste from clipboard**: Puts the contour(s) from the Clipboard into the left <i>Find</i> section. These contour(s) will be searched for",
    "dlgfindoutline.buttonFindSelection": "**Use current selection**: Puts selected contour(s) from the Glyph window into the left <i>Find</i> section. These contour(s) will be searched for",
    "dlgfindoutline.buttonReplace": "Replaces the found contour(s) with contour(s) from the right <i>Replace</i> section and stops the search. To continue the search, click <i>Find</i>",
    "dlgfindoutline.buttonReplaceFind": "Replaces the found contour(s) with contour(s) from the right <i>Replace</i> section and continues the search",
    "dlgfindoutline.buttonReplacePaste": "**Paste from clipboard**: Puts the contour(s) from the Clipboard into the right <i>Replace</i> section. These contour(s) will replace the search resuts",
    "dlgfindoutline.buttonReplaceSelection": "**Use current selection**: Puts selected contour(s) from the Glyph window into the right <i>Replace</i> section. These contour(s) will replace the search resuts",
    "dlgfindoutline.checkMark": "**Mark results with color**: Marks changed glyphs with the selected color flag. Shoose the color in the dropdown menu",
    "dlgfindoutline.colorMark": "**Color Flag**: Allows to choose color flag for changed glyphs to visually differentiate them from other glyphs",
    "dlgfindoutline.previewFind": "**Find preview**: The preview of outline(s) to find. Use the <i>Paste from Clipboard</i> or <i>Use current selection</i> button above the preview to define the search pattern",
    "dlgfindoutline.previewReplace": "**Replace preview**: The preview of outline(s) to replace with. Use the <i>Paste from Clipboard</i> or <i>Use current selection</i> button  above the preview to define the replacement outline(s)",
    "dlgfindoutline.selectorApply": "Select <i>all glyphs</i> to search in every glyph in the font; select <i>tagged glyphs</i> and enter the tag in the edit field to search only glyphs with the particular tag",
    "dlgfindoutline.valueTags": "Enter the glyph tag to find outlines only in glyphs with the particular tag. For example, enter UC to search only in the uppercase letters",
    "dlgfontaudit.buttonCancel": "**Cancel**: Closes the FontAudit dialog without changes",
    "dlgfontaudit.buttonFix": "**Fix**: Tries to fix the problem. May produce other problems.\n\nClick <i>Fix All</i> to fix all  problems of this type",
    "dlgfontaudit.buttonFixAll": "**Fix All**: Tries to fix all problems of this type in the current glyph layer. May produce other problems.\n\nClick <i>Fix</i> to fix the problem individually",
    "dlgfontaudit.buttonMore": "@auditpanel.buttonMore",
    "dlgfontaudit.checkIgnore": "**Ignore this test**: Click to deactivate this test and to no longer show problems of this type\n\n<small>To activate the test again, click <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span>  or use <i>Preferences › FontAudit</i></small>",
    "dlgfontcolumns.buttonCancel": "**Cancel**: Closes the dialog box without changes",
    "dlgfontcolumns.buttonOK": "**OK**: Applies changes to the set of columns and closes the dialog box",
    "dlgfontcolumns.buttonSelectAll": "**Check all**: Selects all items to show all available columns in the Font window List view if <i>Synch with cell caption</i> is turned off",
    "dlgfontcolumns.buttonUnselect": "**Uncheck all**: Deselects all items in the list. Only the **Name** column will appear in the Font window List view if <i>Synch with cell caption</i> is turned off",
    "dlgfontcolumns.checkBox": "**Sync with cell caption**: Turn this option off to customize the set of parameters in the Font window List view. Select the columns that you need to show in the list below.\n\nWhen this option is on, customization is off and the set of columns in the List view depends on the selected Cell caption",
    "dlgfontcolumns.checkColoredItems": "**Colorize numeric columns**: Turn this option on to colorize the background of columns that contains grouped or numerical values",
    "dlgfontcolumns.selectorColoredItems": "@dlgfontcolumns.checkColoredItems",
    "dlgfontexport.buttonCancel": "**Cancel**: Closes the dialog box without changes",
    "dlgfontexport.buttonCustomize": "**Customize...**: Opens the <i>Customize Profile</i> dialog box where you can change the selected export profile options",
    "dlgfontexport.buttonFolder": "**Choose folder**: Opens the standard Open dialog box allowing to select the folder for export",
    "dlgfontexport.buttonOK": "**Export**: Starts the font export process using the selected profile. Error messages if any will appear in the <i>Output</i> panel",
    "dlgfontexport.buttonSelectAll": "**Select all fonts**: selects all open fonts for export",
    "dlgfontexport.buttonUnselect": "**Deselect all fonts**: empties the list of fonts for export",
    "dlgfontexport.buttonUnselectProfiles": "**Deselect all profiles**: turns off all export profiles except the first one",
    "dlgfontexport.checkGroupFamily": "**Family**: In the base destination folder, creates a subfolder using the font Family name and puts the exported fonts inside",
    "dlgfontexport.checkGroupProfile": "**Profile**: In the base destination folder, creates a subfolder using the chosen Export Profile name and puts the exported fonts inside",
    "dlgfontexport.checkProfiles": "**Multiple profiles**: ‣**On**: allows to select multiple export profiles to export in several font formats at once. Use checkboxes next to the profile names to turn them on/off",
    "dlgfontexport.destinationFolder": "**Folder**: Exports fonts to the particular folder. To choose the folder, click <i>Choose folder</i> and select the folder in the standard Open dialog",
    "dlgfontexport.destinationSource": "**Source**: Exports to the same folder where the source opened file resides",
    "dlgfontexport.labelFonts": "The number of fonts selected for export",
    "dlgfontexport.labelProfiles": "@dlgfontexport.checkProfiles",
    "dlgfontexport.listFonts": "The list of open fonts. Use checkboxes next to font names to select which fonts should be exported",
    "dlgfontexport.modeCurrent": "**Current layer**: Exports the current layer / master selected in the <i>Layers and Masters</i> panel",
    "dlgfontexport.modeInstances": "**Instances**: Exports predefined font instances selected in the list below as separate fonts",
    "dlgfontexport.modeMasters": "**Masters**: Exports font masters selected in the list below as separate fonts",
    "dlgfontexport.preview": "The preview of the current font layer",
    "dlgfontexport.selectorConflict": "**Existing files**: Defines the procedure to resolve the file name conflicts.\n\n‣<i>Rename</i>  keeps and renames existing files adding date / time stamp to their names\n\n‣ <i>Overwrite</i>  replaces existing files with new ones\n\n‣<i>Move to trash</i> moves existing files to the Trash can\n\n‣<i>Skip</i> does not export the font if the font with the same name already exists",
    "dlgfontexport.tree": "@dlgfontexport.treeInstances",
    "dlgfontexport.treeInstances": "**Instances / masters list**: Select instances or masters to export as separate fonts. To select / unselect all, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>-click the checkboxes",
    "dlgfontglyphsdelete.buttonCancel": "**Cancel**: Closes the dialog box without changes to the font",
    "dlgfontglyphsdelete.buttonOK": "**OK**: Deletes the selected glyphs and closes the dialog",
    "dlgfontglyphsdelete.checkBox": "Turn this option on to not show this dialog box and delete glyphs silently during the current session. The dialog box will appear again when you re-start FontLab",
    "dlgfontglyphsdelete.textSymbols": "The list of glyph names of glyphs to be deleted",
    "dlgfontglyphsreplace.buttonCancel": "**Cancel**: Closes the dialog box without changes to the font",
    "dlgfontglyphsreplace.buttonOK": "**OK**: Performs the selected action and closes the dialog",
    "dlgfontglyphsreplace.checkAppend": "**Append**: Select this option if you do not want to replace existing glyphs or their contents. New pasted glyphs will be created and renamed to avoid naming conflicts",
    "dlgfontglyphsreplace.checkBox": "Turn this option on to not show this dialog box and replace glyphs silently during the current session. The dialog box will appear again when you re-start FontLab or you can call the dialog by selecting <i>Edit › Paste Glyphs</i> holding down the <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span> key",
    "dlgfontglyphsreplace.checkRename": "**Replace and Rename**: Select this option if you want to replace existing glyphs with pasted glyphs. Old glyphs will be renamed to avoid naming conflicts",
    "dlgfontglyphsreplace.checkReplace": "**Replace**: Select this option if you want to replace the contents of existing glyphs with the contents of pasted glyphs. Existing glyphs will be overwritten",
    "dlgfontglyphsreplace.textSymbols": "The list of glyphs to be affected by the operation",
    "dlgfontinfo.buttonAddMaster": "Add master: Opens the dropdown menu allowing to create new font master in the current font\n\n<i>Duplicate master, copy glyph layers</i> creates a duplicate of the current font master and copies all the glyphs from it\n\n<i>Duplicate master, blank glyph layers</i> creates a duplicate of the current font master, creates empty glyphs\n\n<i>Duplicate master, no glyph layers</i> creates a duplicate of the current font master with no glyphs\n\n<i>Empty master</i> creates a new master with no glyphs",
    "dlgfontinfo.buttonApply": "Apply: Applies changes to the current font without closing the dialog box. If you switch between opened fonts, changes are also applied automatically during the switch",
    "dlgfontinfo.buttonCancel": "Cancel: Closes the dialog without changes to the current font. If you switch between opened fonts, changes are applied during the switch",
    "dlgfontinfo.buttonCopy": "Copy page: Copies the font information from the current page to the Clipboard. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to copy the page contents on all masters",
    "dlgfontinfo.buttonCopyAll": "Copy all pages: Copies all font information from all pages to the Clipboard. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to copy all pages for all masters",
    "dlgfontinfo.buttonFontNext": "Next font: Applies changes for the current font and switches to the next font",
    "dlgfontinfo.buttonFontPrevious": "Previous font: Applies changes for the current font and switches to the previous font",
    "dlgfontinfo.buttonOK": "OK: Closes the dialog box and applies changes to the current font",
    "dlgfontinfo.buttonPaste": "Paste page: Pastes the font information from the Clipboard to the current master of the current font. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to paste the page contents to all masters",
    "dlgfontinfo.buttonPasteFonts": "Paste to fonts: Opens the dialog box allowing to paste the copied font information to several fonts at once",
    "dlgfontinfo.buttonRemoveMaster": "Remove master: Deletes the selected font master with all its glyphs",
    "dlgfontinfo.listPages": "The list of Font Info pages: master properties and font properties. Click the item in the list to see the page contents at the right",
    "dlgfontinfo.mastersTree": "The list of masters: If the font contains 2 or more font masters click the name to switch to another master within the same font",
    "dlgfontinfo.searchClear": "Очистить поиск: Удаляет текст из поля поиска",
    "dlgfontinfo.searchField": "Search field: Type the part of the option name here to search for it in the dialog",
    "dlgfontinfo.selectorFont": "Font menu: The name of the current font. If more than one font is open click the name to switch to another font",
    "dlgfontinfo.selectorMaster": "Master menu: The name of the current font master. If the font contains 2 or more font masters click the name to switch to another master within the same font",
    "dlgfuzzy.buttonCancel": "**Close**: Closes the dialog box. All changes made to the keyboard shortcuts are preserved",
    "dlgfuzzy.buttonMenu": "#### Shortcuts menu\n\n‣ <i>Import Custom Shortcuts</i>: import customized keyboard shortcuts from the external file in the JSON format<br/>‣ <i>Export Custom Shortcuts</i>: export customized shortcuts to the external file<br/>‣ <i>Reset Shortcuts</i>: restore the default factory shortcuts",
    "dlgfuzzy.buttonOK": "**Go!**: Executes the selected command as if you called it in the menu and closes the dialog box",
    "dlgfuzzy.buttonSet": "**Set**: Assign new entered key combination to the currently selected command. If the shortcut cannot be assigned the <i>Set</i> button will appear disabled\n\n**Clear**: Remove the previously assigned key combination from the selected command",
    "dlgfuzzy.editShortcut": "**Shortcut**: Put the cursor in this field, press the combination of keys and click <i>Set</i> to assign that combination to the currently selected command. If the shortcut cannot be assigned the <i>Set</i> button will appear disabled",
    "dlgfuzzy.listWidget": "The list of command shows only the limited number of items. Use the search field above to bring up commands you are looking for",
    "dlgfuzzy.searchClear": "**Reset filter**: Deletes text in the search field",
    "dlgfuzzy.searchField": "**Find command**: Start typing the name of the command you are looking for to bring it up",
    "dlggenerateinstance.buttonCancel": "Closes the dialog box without changes",
    "dlggenerateinstance.buttonInstance": "**Add Instance**: Adds the current design position to the list of predefined font instances and closes the dialog. View or remove the new instance in <i>Font Info › Instances</i> or in the <i>Variations</i> panel",
    "dlggenerateinstance.buttonMaster": "**Add as Master**: Adds the current design position as a font master and closes the dialog. New master appears in the Layers and Masters panel and in <i>Font Info › Masters</i>. New master is a variable master by default (participates in interpolation)",
    "dlggenerateinstance.buttonOK": "**Create as Font**: Creates new single-master font using the current design position, opens it in a separate Font window or tab and closes the dialog. Use <i>File › Save Font</i> to save your new font in vfc",
    "dlggenerateinstance.preview": "Shows the current position in the design space. Use axes sliders above the preview to change the current instance",
    "dlggenerateinstance.scrollList": "Use the axes sliders to pick a position in the design space. The current instance preview is shown below the list of sliders.",
    "dlggenerateinstance.tree": "Click to select one of the instances that are already in the variable font",
    "dlginsertshape.buttonCancel": "Closes the dialog without changes to the glyph(s)",
    "dlginsertshape.buttonElements": "Searches and shows elements in the dialog. If <i>Glyphs</i> is active shows both glyphs and elements",
    "dlginsertshape.buttonGlyphs": "Searches and shows glyphs  in the dialog. If <i>Elements</i> is active shows both glyphs and elements",
    "dlginsertshape.buttonOK": "**Add element reference**: Adds the chosen element or glyph as a reference or component to the glyph(s) selected before the dialog was opened",
    "dlginsertshape.checkAllMasters": "#### Apply to all masters\n\n‣ **on**: adds element references to all masters<br/>‣ **off**: adds only to the current master",
    "dlginsertshape.checkAlternative": "#### Find glyph name synonyms\n\n‣ **On:** Uses the built-in synonyms to find more glyphs, for example, you can type `zhe-cy` or `zhe` or `uni0436` or `afii10072` to find the “ж” glyph<br/>‣ **Off:** Only searches for glyph names actually used in your font.",
    "dlginsertshape.checkFlipH": "Flips the added reference or component horizontally",
    "dlginsertshape.checkFlipV": "Flips the added reference or component vertically",
    "dlginsertshape.fontChartView": "The list of elelements and/or glyphs found. Click to select and then <i>OK</i> to add element reference",
    "dlginsertshape.searchClear": "Removes the text from the search field",
    "dlginsertshape.searchField": "Start typing the glyph or the element name to search for it in the current font. Check <i>Find glyph name synonyms</i> to search among alternative names. Use the <i>Glyphs</i> and <i>Elements</i> buttons in the bottom left of the dialog to choose whether you want to see only elements, only glyphs or both",
    "dlginsertshape.selectorMetrics": "**Metrics menu**: When <i>Keep metrics</i> is selected (default), adding element reference doesn't change the advance width of the glyph. Choose <i>Replace advance with</i> if you want to change the glyph width to the width of the added element",
    "dlginsertshape.valuePositionX": "**Horizontal shift**: Enter the numeric value to horizontally shift the added element reference in the destination glyph",
    "dlginsertshape.valuePositionY": "**Vertical shift**: Enter the numeric value to vertically shift the added element reference in the destination glyph",
    "dlgjsoneditor.lineName": "@dlgjsoneditor.plainTextEdit",
    "dlgjsoneditor.plainTextEdit": "<code style=\"background-color: #2c2c2d;\">&gt;&gt;</code> ‣<br/><code style=\"background-color: #2c2c2d;\">\\*\\*bold\\*\\*</code> **bold**<br/><code style=\"background-color: #2c2c2d;\">\\_italic\\_</code> _italic_<br/><code style=\"background-color: #2c2c2d;\">\\|\\|</code> paragraph<br/><code style=\"background-color: #2c2c2d;\">\\|\\|\\|</code> linebreak<br/><code style=\"background-color: #2c2c2d;\">&amp;amp;</code> &amp;<br/><code style=\"background-color: #2c2c2d;\">\\^\\^small\\^\\^</code> <small>small</small><br/><code style=\"background-color: #2c2c2d;\">==Menu &gt; Go==</code> <i>Menu › Go</i>\n\n<small><code style=\"background-color: #2c2c2d;\">\\+\\+Shift\\+A\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>A</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+1\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>1</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Space\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Backslash\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>\\</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Bar\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>|</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+BraceLeft\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>{</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+BraceRight\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>}</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+BracketLeft\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>[</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+BracketRight\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>]</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Colon\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>:</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Comma\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>,</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+DoubleQuote\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>\"</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Equal\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>=</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Exclam\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>!</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Grave\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>`</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Greater\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Less\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Minus\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>-</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Period\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>.</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Plus\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>+</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Question\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>?</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Semicolon\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>;</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+SingleQuote\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>'</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Slash\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>/</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Tilde\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>~</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Underscore\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>_</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Shift\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Alt\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Cmd\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Ctrl\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Fn\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>FN</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Up\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Down\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Left\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>←</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Right\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+PgUp\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>PG</small>U<small>P</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+PgDn\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>PG</small>D<small>N</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Home\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>Home</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+End\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>End</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Backspace\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Del\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>DEL</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Ins\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>INS</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Tab\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>⇥</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Enter\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Esc\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ESC</small></b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Mac\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+Win\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+click\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+double-click\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+drag\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+\"Click\"\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+\"Drag\"\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>Drag</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+menu-button\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+close-button\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>✕</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+gear-button\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+update-button\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>↻</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+auto-button\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>♥</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+turn-on\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>✓</b></span> &nbsp;&nbsp; <code style=\"background-color: #2c2c2d;\">\\+\\+turn-off\\+\\+</code> <span style=\"font-style: normal; white-space: nowrap;\"><b>□</b></span></small>\n\n<small>**START**: <code style=\"background-color: #2c2c2d;\">@section.item</code> ref<br/><code style=\"background-color: #2c2c2d;\">\\#head\\|\\|text</code> <code>\\#\\#\\#\\# head\\|\\|text</code><br/><code style=\"background-color: #2c2c2d;\">\\+text</code> <code>name: text</code><br/><code style=\"background-color: #2c2c2d;\">+#text</code> <code># name\\|\\|text</code><br/><code style=\"background-color: #2c2c2d;\">+*text</code> <code>\\*\\*name\\*\\*: text</code><br/><code style=\"background-color: #2c2c2d;\">+.text</code> <code>nametext</code></small>",
    "dlgkerningadjust.buttonCancel": "**Cancel**: Closes the dialog box without changes",
    "dlgkerningadjust.buttonOK": "**OK**: Performs the operation and closes the dialog",
    "dlgkerningadjust.checkApplyAll": "Select this option to ignore the selection and adjust kerning for all kerning pairs in the font",
    "dlgkerningadjust.checkRound": "Select this option to additionally round adjusted kerning values to the particular number of font units",
    "dlgkerningadjust.valueNegative": "Enter the number of font units or percents by which the negative kerning values should be changed. Positive values move glyphs closer. Negative values add more space",
    "dlgkerningadjust.valuePositive": "Enter the number of font units or percents by which the positive kerning values should be changed. Positive values add more space. Negative values move glyphs closer",
    "dlgkerningadjust.valueRound": "Enter the number of font units to additionally round kerning values",
    "dlgkerningfilter.buttonCancel": "**Cancel**: Closes the dialog box without any changes",
    "dlgkerningfilter.buttonDeselect": "**Uncheck all**: Deselects all items in the list above",
    "dlgkerningfilter.buttonOK": "**OK**: Deletes the requested kerning pairs and closes the dialog box",
    "dlgkerningfilter.buttonSelectAll": "**Check all**: Selects all items in the list above",
    "dlgkerningfilter.checkKeepExceptions": "Turn this option on to keep exceptions when deleting pairs with small kerning values",
    "dlgkerningfilter.checkNonExistent": "Turn this option on to delete kerning pairs including absent glyphs or empty classes",
    "dlgkerningfilter.checkScript": "Turn this option on to delete pairs containing glyphs belonging to different scripts (writing systems), e.g. pairs like T(Latin)A(Cyrillic) or A(Latin)T(Greek).",
    "dlgkerningfilter.checkScriptList": "Turn this option on to delete pairs containing glyphs belonging to the scripts NOT selected in the list below. Pairs from the selected scripts will remain",
    "dlgkerningfilter.checkValue": "Turn this option on to delete kerning pairs having values smaller and equal to the one set in the field. This feature may be useful to decrease the number of kerning pairs by removing small kerning",
    "dlgkerningfilter.listScripts": "Turn checkboxes on for the scripts that you want to keep kerning for",
    "dlgkerningfilter.valueValue": "Values smaller and equal to the one set in this field will be deleted",
    "dlglayers.treeWidget": "@inspector_layers.treeWidget",
    "dlglinkmetrics.buttonCancel": "**Cancel**: Closes the dialog box without changes to glyph metrics",
    "dlglinkmetrics.buttonOK": "**OK**: Runs the process of glyph metrics linking and closes the dialog box",
    "dlglinkmetrics.checkApplyToFont": "**Apply to entire font**: Select this option to process all glyphs in the current font. Otherwise only glyphs selected in the Font window will be analyzed",
    "dlglinkmetrics.checkLeft": "**Link LSB**: Turn this option on to process the left sidebearings of glyphs and link them to the left sidebearings of the key glyphs from the list",
    "dlglinkmetrics.checkMark": "Add color flag to key glyphs used for metrics linking",
    "dlglinkmetrics.checkOptical": "Turn this option on to allow FontLab to use optical algorithms to build metrics linking",
    "dlglinkmetrics.checkRight": "**Link RSB**: Turn this option on to process the right sidebearings of glyphs and link them to the right sidebearings of the key glyphs from the list",
    "dlglinkmetrics.checkScript": "Turn this option on to prevent linking of glyph metrics across different scripts. For example, it prevents linking between A (Latin) and A (Cyrillic) glyphs, even though their outlines are identical",
    "dlglinkmetrics.colorMarkLeft": "Select color flag for left key glyphs",
    "dlglinkmetrics.colorMarkRight": "Select color flag for right key glyphs",
    "dlglinkmetrics.radioMetrics": "Choose this option to make FontLab compare glyph metrics only when building links",
    "dlglinkmetrics.radioOptical": "Choose this option to make FontLab optically compare glyph shapes when building links",
    "dlglinkmetrics.valueToleranceKeys": "Enter the tolerance value in percents to control the maximum allowed metrics difference",
    "dlgmergelayers.buttonCancel": "**Cancel**: Closes the dialog box without changes to layers",
    "dlgmergelayers.buttonFont": "**All Glyphs**: Merges visible layers for all glyphs in the font",
    "dlgmergelayers.buttonGlyph": "**Glyph**: Merges visible layers for the current glyph only",
    "dlgmergelayers.buttonSelected": "**Selected Glyphs**: Merges visible layers for all selected glyphs",
    "dlgmissingglyphs.buttonAddFamily": "**Add Family Members**: Add fonts with the same family name to the list for comparison",
    "dlgmissingglyphs.buttonCancel": "**Cancel**: Closes the dialog box without changes",
    "dlgmissingglyphs.buttonOK": "**OK**: If <i>Add missing glyphs</i> is on creates glyphs in fonts where they are missing",
    "dlgmissingglyphs.checkAddGlyphs": "Turn this option on to create missing glyphs present in other fonts in comparison. Glyphs will be created after clicking <i>OK</i>",
    "dlgmissingglyphs.checkMarkGlyphs": "Turn this option on to add color flag to new created glyphs",
    "dlgmissingglyphs.colorMark": "Use this menu to select color flag for new glyphs",
    "dlgmissingglyphs.listFonts": "The list of compared fonts with the number of glyphs present in one font and missing in another font",
    "dlgnameglyph.checkAlternative": "@dlginsertshape.checkAlternative",
    "dlgnameglyph.fontChartView": "@dlgnameglyph.searchField",
    "dlgnameglyph.searchClear": "Deletes text in the search field",
    "dlgnameglyph.searchField": "#### Quick Find glyphs\n\n‣ If you pressed <span style=\"font-style: normal; white-space: nowrap;\"><b>/</b></span>, type a **glyph name portion**, and refine the results with the <i>Synonyms</i> toggle<br/>‣ If you pressed <span style=\"font-style: normal; white-space: nowrap;\"><b>#</b></span>, type a **Unicode portion**<br/>‣ To switch between the **search** field and the **results**, press <span style=\"font-style: normal; white-space: nowrap;\"><b>⇥</b></span>\n\n‣ To **replace the current** glyph in the Glyph window with another glyph or to **select** a glyph in Font window: choose the glyph in the results with <span style=\"font-style: normal; white-space: nowrap;\"><b>←</b>·<b>→</b></span> and press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>, or <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> the glyph<br/>‣ To **insert a glyph after** the current glyph in the Glyph window, choose it and press <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>↩</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>↩</b></span>, or <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>2×click</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>2×click</b></span> the glyph\n\n‣ To close the dialog without inserting a glyph, tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ESC</small></b></span>",
    "dlgnamesuffix.buttonCancel": "Closes the dialog without any changes to glyphs",
    "dlgnamesuffix.buttonOK": "Renames selected glyphs using the chosen suffix. If <i>Replace existing suffix</i> is not checked adds the suffix to glyph names",
    "dlgnamesuffix.checkReplace": "If glyphs already have suffix in their names, allows you to rename glyphs by changing the suffix. For example, if \"smcp\" suffix is selected, renames glyphs \"a.case\", \"b.case\" etc. to \"a.smcp\", \"b.smcp\" etc.",
    "dlgnamesuffix.selectorClass": "**Suffix menu**: Select OpenType feature in the menu to put the corresponding name suffix in the field at the right",
    "dlgnamesuffix.valueSuffix": "Enter new suffix with a dot for glyphs here (for example, .case or .smcp) or choose OpenType feature in the <i>suffix</i> menu at the left",
    "dlgnewclass.buttonBoth": "**Kerning both**: Add new kerning class marked both as the 1st (left) and the 2nd (left) kerning class",
    "dlgnewclass.buttonCancel": "**Cancel**: Close the dialog box without changes to the font",
    "dlgnewclass.buttonLeft": "**Kerning 1st**: Add the 1st (left) kerning class containing glyphs selected in the Font window",
    "dlgnewclass.buttonOT": "**OpenType**: Add new OpenType class containing glyphs selected in the Font window",
    "dlgnewclass.buttonRight": "**Kerning 2nd**: Add the 2nd (right) kerning class containing glyphs selected in the Font window",
    "dlgnewclass.buttonTag": "**Glyph tag**: Add new glyph tag for glyphs selected in the Font window",
    "dlgnewclass.valueName": "Name new class or tag",
    "dlgnewelement.checkAllMasters": "#### Apply to all masters\n\n‣ **on**: adds element to all masters<br/>‣ **off**: adds only to the current master",
    "dlgnewglyph.button0": "Put the \"_segment.\" prefix before the glyph name",
    "dlgnewglyph.button1": "Put the \"_corner.\" prefix before the glyph name",
    "dlgnewglyph.button2": "Put the \"_dash.\" prefix before the glyph name",
    "dlgnewglyph.button3": "Add \".alt\" suffix after the new glyph name",
    "dlgnewglyph.button4": "Add \".ss01\" suffix after the new glyph name",
    "dlgnewglyph.button5": "Add \".ss02\" suffix after the new glyph name",
    "dlgnewglyph.button6": "Add \".ss03\" suffix after the new glyph name",
    "dlgnewglyph.button7": "Add \".sc\" suffix after the new glyph name",
    "dlgnewglyph.button8": "Add \".smcp\" suffix after the new glyph name",
    "dlgnewglyph.buttonCancel": "**Cancel**: Close the dialog without adding glyph",
    "dlgnewglyph.buttonCreateEmpty": "**Create Blank**: Add named glyph with blank layers to the current font and close the dialog box. If the glyph already exists <i>Create Blank</i> is not available",
    "dlgnewglyph.buttonOK": "**Create**: Add named glyph to the current font and close the dialog box. If the glyph already exists <i>Create</i> will change to <i>Go to</i>",
    "dlgnewglyph.valueName": "Enter new glyph name here. If the glyph already exists <i>Create</i> will change to <i>Go to</i>",
    "dlgnewlayer.areaFont": "In the <i>Add Glyph Master</i> dialog, adds layers with the content of the dynamic instance to all glyphs in the font\n\nIn the <i>Add Layer</i> dialog:<br/>‣ if <i>Fill new layer</i> is **off**, adds blank layers with the specified name to all glyphs in the font<br/>‣ if <i>Fill new layer</i> is **on**, adds layers with the specified name and content to all glyphs in the font\n\nIf <i>Add font master</i> is:<br/>‣ **on**: also creates a new **font master** with the specified name, and creates appropriate kerning and Font Info data<br/>‣ **off**: to create a variable **font-less master**, use the `:ax=loc,ax=loc,...` notation as the name of the layer, otherwise use any name",
    "dlgnewlayer.areaGlyph": "In the <i>Add Glyph Master</i> dialog, adds a layer with the content of the dynamic instance to the current glyph. To create a variable **font-less master**, you must use the `:ax=loc,ax=loc,...` notation as the name of the layer — like `:wt=350,wd=100`\n\nIn the <i>Add Layer</i> dialog:<br/>‣ if <i>Fill new layer</i> is **off**, adds a blank layer with the specified name to the current glyph<br/>‣ if <i>Fill new layer</i> is **on**, adds a layer with the specified name and content to the current glyph",
    "dlgnewlayer.areaSelection": "In the <i>Add Glyph Master</i> dialog, adds layers with the content of the dynamic instance to glyphs selected in the Font window. To create variable **font-less masters**, you must use the `:ax=loc,ax=loc,...` notation as the name of the layer — like `:wt=350,wd=100`\n\nIn the <i>Add Layer</i> dialog:<br/>‣ if <i>Fill new layer</i> is **off**, adds blank layers with the specified name to glyphs selected in the Font window<br/>‣ if <i>Fill new layer</i> is **on**, adds layers with the specified name and content to glyphs selected in the Font window",
    "dlgnewlayer.checkFillContent": "Allows you to copy glyph elements from another opened font to the new layer of the current font, and choose whether you would like this copy to be <i>left</i>, <i>right</i> or <i>center aligned</i>. You can also choose the master of that font. If no other font is open at the time, the contents of the currently selected layer of the same font will be copied",
    "dlgnewlayer.checkInstance": "If the font has multiple masters, copies the content of of the dynamic #instance layer into the new layer. To create variable **font-less masters**, you must use the `:ax=loc,ax=loc,...` notation as the name of the layer — like `:wt=350,wd=100`",
    "dlgnewlayer.checkMaster": "When you add a new layer to <i>All glyphs</i>, if <i>Add font master</i> is:<br/>‣ **on**: also creates a new **font master** with the specified name, and creates appropriate kerning and Font Info data<br/>‣ **off**: to create a variable **font-less master**, use the `:ax=loc,ax=loc,...` notation as the name of the layer, otherwise use any name\n\nFont master names appear in bold in the <i>Layers & Masters panel</i>",
    "dlgnewlayer.checkRasterize": "Rasterizes the source glyph outlines at the particular resolution (pixel-per-em size), and puts the resulting images in the new layer",
    "dlgnewlayer.checkReuse": "#### Reuse named elements that exist in new font layer\n\n \n\n‣ **off**: copies the elements **including their content** (appearance) from the **source** font & master as standalone, unlinked elements\n\n‣ **on**: copies the element **structure** from the **source** font & master — but uses the **appearance** (content) taken from the **current** font & master\n\n<small>When this is on, FontLab checks for any glyphs in the current font that contain a pre-existing layer with the same name as the new layer. If the pre-existing layer in any glyphs already contains elements with the same name as the element references you’re adding from the source font & master, adds references to the pre-existing elements instead of copying the content from the source font as standalone elements.</small>",
    "dlgnewlayer.layerBackground": "**Put to background**: Puts the new layer at the bottom of the list. By default, the new layer will be added at the top of the list in the <i>Layers & Masters</i> panel",
    "dlgnewlayer.layerLocked": "Locks the new layer after creation. You can change this attribute at anytime later",
    "dlgnewlayer.layerName": "Enter the name of the new layer\n\n‣ To create variable **font-less masters** (<i>Current glyph only</i> or <i>Selected glyphs</i>), you **must** use the `:ax=loc,ax=loc,...` notation like `:wt=350,wd=100`<br/>‣ To create a variable **font master** (<i>All glyphs</i> in the <i>Add Glyph Master</i> dialog), enter any name you wish<br/>‣ To create a mask layer, prefix the name with `mask.`",
    "dlgnewlayer.layerService": "Marks new layer as a service layer. Service layers are not exported to the final font formats. You can change this attribute at anytime later",
    "dlgnewlayer.layerWireframe": "Renders the new layer as wireframe after creation. You can change this attribute at anytime later",
    "dlgnewlayer.radioAddAnyway": "Adds the layer even even if it already exists in the font. Existing layer won't be replaced",
    "dlgnewlayer.radioSkip": "By default, if a layer already exists, it will not be added because the option <i>Skip</i> is selected. To add the layer even if it exists, select <i>Add anyway</i>",
    "dlgnewlayer.selectorAlign": "Choose whether you would like the layer copy to be <i>left</i>, <i>right</i> or <i>center aligned</i>",
    "dlgnewlayer.selectorFont": "Shows the dropdown menu with all opened fonts to select which font to use as a source for new layer contents",
    "dlgnewlayer.valuePPM": "Enter the rezolution of rasterization in Pixels per M",
    "dlgnote.buttonApply": "**Apply**:  (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>↩</b></span>) Save changes to the glyph note and close the note editor",
    "dlgnote.buttonClose": "**Отмена**:  (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ESC</small></b></span>) Закрывает редактор без сохранения изменений",
    "dlgnote.textEdit": "Enter or paste the Note text and click on <i>Apply</i> to accept changes. You can style your Note texts using the basic Markdown formatting syntax",
    "dlgopeninstalledfont.buttonCancel": "**Cancel**: Close the dialog box without importing fonts",
    "dlgopeninstalledfont.buttonOK": "**OK**: Import selected fonts",
    "dlgopeninstalledfont.lineSample": "**Preview text**: The string of text used to show the preview of fonts in the list. Enter your custom string here to change the default text",
    "dlgopeninstalledfont.listFonts": "The list of fonts installed in the system. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span> or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span>-select fonts and click on <i>OK</i> to import them",
    "dlgopeninstalledfont.searchClear": "**Reset filter**: Clear the text in the search field",
    "dlgopeninstalledfont.searchField": "**Filter**: Start typing font family name here to quickly find particular fonts",
    "dlgopeninstalledfont.selectorWritingSystem": "Select the particular script to show only fonts supporting it",
    "dlgparallels.buttonCancel": "**Cancel**: Close the dialog box without changes to contours",
    "dlgparallels.buttonLink": "Link / unlink horizontal and vertical offset values",
    "dlgparallels.buttonOK": "**OK**: Create parallel contour(s) and close the dialog box",
    "dlgparallels.checkRemoveOriginal": "**Remove the original**: Check this option to replace the original contour with parallel contour(s)",
    "dlgparallels.selectorPosition": "Use this selector to choose the position of the parallel contour(s). <i>Left</i> will create parallel contour on the left of the original using offset values below; <i>Right</i> will create parallel contour on the right of the original using offset values below; <i>Both</i> will create two parallel contours",
    "dlgparallels.valueOffsetX": "Horizontal offset of the parallel contour",
    "dlgparallels.valueOffsetY": "Vertical offset of the parallel contour. Click on the <i>Link</i> button to keep the vertical offset the same as the horizontal offset",
    "dlgpastefontinfo.buttonCancel": "**Cancel**: Close the dialog box without changes",
    "dlgpastefontinfo.buttonDeselect": "**Deselect**: Turn off checkboxes for all fonts in the list",
    "dlgpastefontinfo.buttonOK": "**OK**: Paste font information to fonts selected in the list and close the dialog",
    "dlgpastefontinfo.buttonSelectAll": "**Select all**: Turn on checkboxes for all fonts in the list",
    "dlgpastefontinfo.checkAllMasters": "#### Paste to all masters\n\n‣ **on**: pastes font info to all masters<br/>‣ **off**: pastes only to the current master",
    "dlgpastefontinfo.listFonts": "The list of opened fonts. Turn on checkbox at the left of the font name to paste copied information to that font and click <i>OK</i>",
    "dlgpastespecial.buttonCancel": "Closes the dialog without pasting anything",
    "dlgpastespecial.buttonOK": "Pastes marked objects and attributes to the selected glyphs or if <i>Ignore destination selection</i> is turned on, pastes to the glyphs with the same names. This makes sense when you copy-paste between fonts",
    "dlgpastespecial.checkAllLayers": "Check this option to paste color flag of the copied glyphs to all layers of the destination glyphs. In multiple layer fonts glyphs may have different color flags on different layers. Turn it off to paste only to the current layer",
    "dlgpastespecial.checkAsLinks": "Check this option to link metrics of destination glyphs to metrics of the copied glyphs. Linked metrics are updated automatically if <i>Font › Live Update › Live Metrics</i> is turned on. If it is off use <i>Font › Update Glyphs</i>",
    "dlgpastespecial.checkAsReferences": "Check this option to paste element references to the copied elements if possible. Element references will be locked by default",
    "dlgpastespecial.checkBox0": "Check this option to paste visual (high-level) TrueType hinting instructions",
    "dlgpastespecial.checkBox1": "Check this option to paste advance width values of the copied glyphs. If both left and right sidebearings are checked then this option is ignored",
    "dlgpastespecial.checkBox2": "Check this option to paste left sidebearing values of the copied glyphs",
    "dlgpastespecial.checkBox3": "Check this option to paste right sidebearing values of the copied glyphs",
    "dlgpastespecial.checkBox4": "Check this option to paste glyph (local) guidelines",
    "dlgpastespecial.checkBox5": "Check this option to paste PostScript hints and links",
    "dlgpastespecial.checkBox6": "Check this option to paste glyph anchors",
    "dlgpastespecial.checkBox7": "Check this option to paste glyph outlines and bitmap images copied to the Clipboard",
    "dlgpastespecial.checkBox8": "Check this option to paste the contents of the Mask layer",
    "dlgpastespecial.checkBox9": "Check this option to paste color flag of the copied glyphs. In multiple layer fonts glyphs may have different color flags on different layers. Turn off <i>Paste color flag to all layers</i> to paste only to the current layer",
    "dlgpastespecial.checkBoxFill": "Check this option to apply the copied Fill color to all elements in the destination glyphs",
    "dlgpastespecial.checkBoxStroke": "Check this option to apply the copied Stroke attributes to all elements in the destination glyphs",
    "dlgpastespecial.checkMapNames": "Check this option to map source and destination glyphs by their names. This makes sense when you partially copy-paste glyphs between fonts",
    "dlgpastespecial.checkMeasurement": "Check this option to paste glyph metrics based on the current measurement line position",
    "dlgpastespecial.checkTags": "Check this option to paste tags of the copied glyphs",
    "dlgpastespecial.selector0": "Check this option to paste visual (high-level) TrueType hinting instructions",
    "dlgpastespecial.selector1": "Check this option to paste advance width values of the copied glyphs",
    "dlgpastespecial.selector2": "Check this option to paste left sidebearing values of the copied glyphs",
    "dlgpastespecial.selector3": "Check this option to paste right sidebearing values of the copied glyphs",
    "dlgpastespecial.selector4": "Check this option to paste glyph (local) guidelines",
    "dlgpastespecial.selector5": "Check this option to paste PostScript hints and links",
    "dlgpastespecial.selector6": "Check this option to paste glyph anchors",
    "dlgpastespecial.selector7": "Check this option to paste glyph outlines and bitmap images copied to the Clipboard",
    "dlgpastespecial.selector8": "Check this option to paste the contents of the Mask layer",
    "dlgpastespecial.selector9": "Check this option to paste color flag of the copied glyphs. In multiple layer fonts glyphs may have different color flags on different layers. Turn off <i>Paste color flag to all layers</i> to paste only to the current layer",
    "dlgpastespecial.selectorFill": "@dlgpastespecial.checkBoxFill",
    "dlgpastespecial.selectorStroke": "@dlgpastespecial.checkBoxStroke",
    "dlgpastespecial.selectorTags": "@dlgpastespecial.checkTags",
    "dlgplaceshape.buttonAscender": "**Ascender**: Scale the pasted element content to fit between the font Ascender and the baseline",
    "dlgplaceshape.buttonCancel": "**Cancel**: Close the dialog box without changes",
    "dlgplaceshape.buttonDescender": "**Descender**: Scale the pasted element content to fit between the font x-height and the Descender",
    "dlgplaceshape.buttonLowercase": "**Lowercase**: Scale the pasted element content to fit between the font x-height and the baseline",
    "dlgplaceshape.buttonName": "**Set name**: Name the element using the glyph name entered above and close the dialog",
    "dlgplaceshape.buttonNone": "**None**: Do not scale element content",
    "dlgplaceshape.buttonPlace": "**Place to Font**: Place the element to the selected font and close the dialog. The element will appear in the glyph with name entered above",
    "dlgplaceshape.buttonUppercase": "**Uppercase**: Scale the pasted element content to fit between the font caps-height and the baseline",
    "dlgplaceshape.checkLockReferences": "@pref_operations.checkLockComposites",
    "dlgplaceshape.selectorAlt": "Select name suffix in the list of common suffixes",
    "dlgplaceshape.selectorFont": "**Font name**: Select the font which the element should be placed to",
    "dlgplaceshape.valueName": "**Glyph name**: Enter the glyph name where the element should be placed. If the name is empty FontLab will create new glyph with the default name",
    "dlgpreferences.buttonApply": "**Apply**: Applies changes without closing the dialog box",
    "dlgpreferences.buttonCancel": "**Cancel**: Closes the dialog without changes",
    "dlgpreferences.buttonMenu": "#### Preferences menu\n\n‣ <i>Open Preferences</i>: import all settings an exported file<br/>‣ <i>Save Preferences</i>: export all settings to a file<br/>‣ <i>Reset to Defaults</i>: change all settings to their factory default values",
    "dlgpreferences.buttonOK": "**OK**: Closes the dialog box and applies changes",
    "dlgpreferences.searchClear": "**Clear search**: Removes text from the search field",
    "dlgpreferences.searchField": "**Search field**:  Type the part of the option name here to search for it in the dialog",
    "dlgpreviewcontextoptions.buttonCancel": "**Cancel**: Close the dialog box without saving changes to the context string",
    "dlgpreviewcontextoptions.buttonOK": "**OK**: Save the context string and close the dialog",
    "dlgpreviewcontextoptions.valueContext": "Enter the text string here to use it as a context. Type '@' to define the current glyph",
    "dlgprofiles.buttonAdd": "Create a duplicate of the selected profile that you can edit. Change the name of your new export profile in <i>Profile name</i> at the right",
    "dlgprofiles.buttonCancel": "Closes the dialog without saving changes. If you added new profiles or changed setting they all will be discarded",
    "dlgprofiles.buttonOK": "Closes the dialog and saves any changes",
    "dlgprofiles.buttonOpen": "Imports profile from the text file exported using the <i>Save profile</i> button",
    "dlgprofiles.buttonRemove": "Deletes the profile selected in the list",
    "dlgprofiles.buttonSave": "Exports the profile selected in the list as a text file. Exported files can be imported back using the <i>Open profile</i> button",
    "dlgprofiles.description": "The short description of the selected option",
    "dlgprofiles.items": "The list of available export profiles. To see the details of a profile, select it in the list.\n\nTo activate a profile, i.e. see it in the <i>Export Font As</i> dialog, select the checkbox to the left of the profile name in the list. If the checkbox is blue, the profile is activated. To deactivate a profile, i.e. remove it from the <i>Export Font As</i> dialog, unselect the checkbox to the left of the profile name in the list.\n\nTo add a new profile, select a profile in the list and click the plus-shaped <i>Add profile</i> button",
    "dlgprofiles.pw": "Default profiles are not editable. To change the export settings, select a profile at the left and click the plus-shaped <i>Add profile</i> button. Custom profiles can be edited",
    "dlgprofiles.searchClear": "Removes text in the search field",
    "dlgprofiles.searchField": "Start typing an option name here to filter settings of current profile. Only setting containing the typed string will be shown",
    "dlgremapglyphnames.checkAlternative": "@dlginsertshape.checkAlternative",
    "dlgremoveclasses.checkAllMasters": "#### Remove from all masters\n\n‣ **on**: removes classes from all masters<br/>‣ **off**: removes only from the current master",
    "dlgremovelayer.buttonCancel": "**Cancel**: Close the dialog without changes to the font",
    "dlgremovelayer.buttonFont": "**All Glyphs**: Remove the selected layer for all glyphs of the font. The empty master remains",
    "dlgremovelayer.buttonGlyph": "**Glyph**: Remove the selected layer in the current glyph",
    "dlgremovelayer.buttonMaster": "**Font Master**: Remove the selected layer for all glyphs of the font. The empty master is also removed",
    "dlgremovelayer.buttonSelected": "**Selected Glyphs**: Remove the selected layer in all selected glyphs",
    "dlgrenameglyph.autoName": "Finds the glyph name mapped to the Unicode codepoint in the FontLab database",
    "dlgrenameglyph.autoUnicode": "Finds the Unicode codepoint mapped to the glyph name in the FontLab database",
    "dlgrenameglyph.buttonCancel": "Closes the dialog box without changes to the current glyph",
    "dlgrenameglyph.buttonNext": "Assignes a new name and/or Unicode codepoint to the current glyph (as if you had pressed the <i>OK</i> button) and shows data from the next glyph",
    "dlgrenameglyph.buttonOK": "Assignes a new name and/or Unicode codepoint to the current glyph and closes the dialog box. To rename and show the next glyph click <i>Rename Next Glyph</i> instead",
    "dlgrenameglyph.checkRename": "Keeps a copy of the replaced glyph under a new name",
    "dlgrenameglyph.checkRenameAutoLayer": "Automatically changes the glyph name in auto layer recipes that contain the glyph being renamed",
    "dlgrenameglyph.checkRenameKerning": "Automatically changes the glyph name in kerning classes that contain the glyph being renamed and in the 'kern' feature text",
    "dlgrenameglyph.checkRenameOT": "Automatically changes the glyph name in OpenType classes that contain the glyph name, and in OpenType feature text",
    "dlgrenameglyph.checkReplace": "Allows you to replace existing glyphs. If this option is off, and you enter a name that is already assigned to one of the font’s glyphs, the <i>Rename</i> button will be disabled and you will not be able to assign that name. Switch the option on to allow FontLab to replace glyphs",
    "dlgrenameglyph.labelUnicodeNameNew": "New Unicode name of the glyph for your reference",
    "dlgrenameglyph.labelUnicodeNameOld": "Current Unicode name of the glyph for your reference",
    "dlgrenameglyph.valueNameNew": "To change a glyph’s name enter a new one here. If this glyph has a properly assigned Unicode codepoint and you want to find the name mapped to that index in the FontLab database, click the <i>Update</i> button to the right of the field",
    "dlgrenameglyph.valueNameOld": "Current glyph name for your reference",
    "dlgrenameglyph.valueUnicodeNew": "To change a glyph’s Unicode codepoint enter a new one here. To assign several codepoints enter them space separated. If this glyph has a properly assigned name and you want to find the codepoint mapped to that name in the FontLab database, click the <i>Update</i> button to the right of the field",
    "dlgrenameglyph.valueUnicodeOld": "Current Unicode index of the glyph for your reference",
    "dlgrenamelayer.buttonCancel": "**Cancel**: Close the dialog box without changes to the font",
    "dlgrenamelayer.buttonFont": "**All Glyphs**: Rename the layer in all glyphs of the font but do not rename the master",
    "dlgrenamelayer.buttonGlyph": "**Glyph**: Rename the layer only in the current glyph",
    "dlgrenamelayer.buttonMaster": "**Font Master**: Rename the layer in all glyphs of the font and also rename the master",
    "dlgrenamelayer.buttonSelected": "**Selected Glyphs**: Rename the layer in all selected glyphs of the font",
    "dlgreplacecomponent.checkAllMasters": "#### Apply to all masters\n\n‣ **on**: replaces component in all masters<br/>‣ **off**: replaces only in the current master",
    "dlgreplacecomponent.checkAlternative": "@dlginsertshape.checkAlternative",
    "dlgreplacecomponent.checkFlipH": "Flips the added reference or component horizontally",
    "dlgreplacecomponent.checkFlipV": "Flips the added reference or component vertically",
    "dlgsetkerningclass.buttonCancel": "Closes the dialog box without changes to classes",
    "dlgsetkerningclass.buttonGlyphs": "Shows glyphs in the list above",
    "dlgsetkerningclass.buttonKerningClasses": "Shows existing kerning classes in the list above",
    "dlgsetkerningclass.buttonOK": "Puts selected glyph(s) in the kerning class chosen from the list or creates a new class based on the chosen glyph name and puts selected glyph(s) in the new class then closes the dialog box",
    "dlgsetkerningclass.checkAlternative": "@dlginsertshape.checkAlternative",
    "dlgsetkerningclass.fontChartView": "The preview of the class selected in the list or new kerning class which will be created",
    "dlgsetkerningclass.searchClear": "Removes text from the search filed",
    "dlgsetkerningclass.searchField": "Enter a glyph name or existing kerning class name. Found glyphs and classes appear in the list below",
    "dlgsetkerningclass.searchTree": "Start typing a glyph or kerning class name in the search field above. Chose among found glyphs or kerning classes in the list to put the selected glyph(s) to the class",
    "dlgtags.buttonClear": "Clear the list of tags for the glyph. Virtual tags cannot be removed",
    "dlgtags.buttonVirtual": "Add virtual tags to the list of glyph tags",
    "dlgtospline.button1": "Converts PostScript segment to TrueType segment using only one off-curve point",
    "dlgtospline.button2": "Converts PostScript segment to TrueType segment using two off-curve points",
    "dlgtospline.button3": "Converts PostScript segment to TrueType segment using three off-curve points",
    "dlgtospline.buttonAuto": "Converts PostScript segment to TrueType segment using an optimal number of off-curve points",
    "dlgtospline.buttonCancel": "Reverts changes making the curve PostScript again",
    "dlgtospline.buttonOK": "Applies changes and closes the dialog. If <i>Revert</i> was activated just closes the dialog without changes",
    "dlgworkspaces.buttonActivate": "Activates the workspace selected in the list",
    "dlgworkspaces.buttonCancel": "Closes the dialog without saving any changes",
    "dlgworkspaces.buttonOK": "Closes the dialog and saves any changes to the list of workspaces",
    "dlgworkspaces.buttonOpen": "Opens the standard <i>Open</i> dialog box allowing you to import a workspace from the external file",
    "dlgworkspaces.buttonRemove": "Deletes the workspace selected in the list",
    "dlgworkspaces.buttonSave": "Opens the standard <i>Save</i> dialog box allowing you to exports the selected workspace to the external file",
    "dlgworkspaces.listWidget": "The list of available workspaces. Select one in the list and click <i>Activate</i> to apply. To rename a workspace, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> its name. To delete the selected workspace, click the minus-shape button below the list",
    "editinglayerspanel.buttonAlternative": "@mainwindow.actionCanvasView1",
    "editinglayerspanel.buttonInterpolate": "@widgetnodes.buttonPowerNudge",
    "editinglayerspanel.buttonRound": "@mainwindow.actionRound_Coordinates",
    "editinglayerspanel.buttonSettings": "#### Select view options\n\n Choose the buttons that appear in the <i>View</i> panel",
    "editinglayerspanel.buttonTunni": "@mainwindow.actionTunni_Lines",
    "editinglayerspanel.lockAll": "**Locking of details**: Lock / unlock all details in the **Lock** column",
    "editinglayerspanel.lockFontGuidelines": "@mainwindow.actionLockFontGuidelines",
    "editinglayerspanel.lockFontMetrics": "@mainwindow.actionLockFontMetrics",
    "editinglayerspanel.lockGlobalMask": "**Global mask**: special layer that is not directly editable but can appear in the background of all glyphs in the current layer.<br/>‣ <i>View › Show › Global Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Global Mask</i>: snap to it (if visible)<br/>‣ <i>Tools › Copy to Global Mask</i>: copy current selection into the global mask<br/>‣ <i>Tools › Clear Global Mask</i>: remove the contents of the global mask<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i>",
    "editinglayerspanel.lockGuidelines": "@mainwindow.actionLockGuidelines",
    "editinglayerspanel.lockHints": "@mainwindow.actionLockHints",
    "editinglayerspanel.lockMask": "@mainwindow.actionLockMask",
    "editinglayerspanel.lockMetrics": "@mainwindow.actionLockGlyphMetrics",
    "editinglayerspanel.lockOutline": "@mainwindow.actionLockOutline",
    "editinglayerspanel.lockPins": "@mainwindow.actionLockPins",
    "editinglayerspanel.lockZones": "@mainwindow.actionLockZones",
    "editinglayerspanel.selectorMask": "**Switch to Mask**: Click to switch from the main layer to its associated mask layer, and back.\n\n<small>**Mask**: a special snappable layer in which you can keep contours or images for reference, and show its content in the background of the current layer. A mask is associated with a main layer using the `mask.` name prefix.<br/>‣ <i>View › Show › Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Mask</i>: snap to it (if visible)<br/>‣ <i>Tools</i> menu: switch or swap content between the current layer and its associated mask, copy selections to mask and paste from it<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "editinglayerspanel.selectorOutline": "**Switch to Outline**: Click to switch to the main layer from its associated mask layer, and back.\n\n<small>**Mask**: a special snappable layer in which you can keep contours or images for reference, and show its content in the background of the current layer. A mask is associated with a main layer using the `mask.` name prefix.<br/>‣ <i>View › Show › Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Mask</i>: snap to it (if visible)<br/>‣ <i>Tools</i> menu: switch or swap content between the current layer and its associated mask, copy selections to mask and paste from it<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "editinglayerspanel.showAll": "**Visibility of details**: Show / hide all details in the **Show** column",
    "editinglayerspanel.showFontGuidelines": "@mainwindow.actionShowFontGuidelines",
    "editinglayerspanel.showFontMetrics": "@mainwindow.actionShowFontMetrics",
    "editinglayerspanel.showGlobalMask": "@mainwindow.actionShowGlobalMask",
    "editinglayerspanel.showGrid": "@mainwindow.actionShowGrid",
    "editinglayerspanel.showGuidelines": "@mainwindow.actionShowGuidelines",
    "editinglayerspanel.showHints": "@mainwindow.actionHints",
    "editinglayerspanel.showMask": "@mainwindow.actionShowMask",
    "editinglayerspanel.showMetrics": "@mainwindow.actionShow_Glyphs_Metrics",
    "editinglayerspanel.showOutline": "#### View outline\n\n Outline is always visible.\n\n<small>Customize outline appearance in <i>Preferences › Glyph Window</i></small>.",
    "editinglayerspanel.showPins": "@mainwindow.actionShow_Pin_Points",
    "editinglayerspanel.showZones": "@mainwindow.actionZones",
    "editinglayerspanel.smartBounds": "@mainwindow.actionSnap_to_bounds",
    "editinglayerspanel.smartNodes": "@mainwindow.actionOrdinat_smarts",
    "editinglayerspanel.smartStems": "@mainwindow.actionSnap_to_stems",
    "editinglayerspanel.smartTangents": "@mainwindow.actionTangents",
    "editinglayerspanel.snapAll": "**Snapping to details**: Turn all snapping on/off in the **Snap** column",
    "editinglayerspanel.snapFontGuidelines": "@mainwindow.actionSnapFontGuidelines",
    "editinglayerspanel.snapFontMetrics": "@mainwindow.actionSnapFontMetrics",
    "editinglayerspanel.snapGlobalMask": "@mainwindow.actionSnapGlobalMask",
    "editinglayerspanel.snapGrid": "@mainwindow.actionSnapGrid",
    "editinglayerspanel.snapGuidelines": "@mainwindow.actionSnapGuidelines",
    "editinglayerspanel.snapHints": "@mainwindow.actionSnapHints",
    "editinglayerspanel.snapMask": "@mainwindow.actionSnapMask",
    "editinglayerspanel.snapMetrics": "@mainwindow.actionSnapGlyphMetrics",
    "editinglayerspanel.snapOutline": "@mainwindow.actionSnapOutline",
    "editinglayerspanel.snapPins": "@mainwindow.actionSnapPins",
    "editinglayerspanel.snapZones": "@mainwindow.actionSnapZones",
    "editinglayerspanel.viewAnchorClouds": "@mainwindow.actionShow_Pin_Cloud",
    "editinglayerspanel.viewAutoAngles": "@pref_glyphwindow.checkShowCorners",
    "editinglayerspanel.viewAutoMeter": "@pref_glyphwindow.checkShowLengths",
    "editinglayerspanel.viewCharacterBackground": "@mainwindow.actionShowCharacterBackground",
    "editinglayerspanel.viewCloneLinks": "@mainwindow.actionShape_using",
    "editinglayerspanel.viewCoordinates": "@mainwindow.actionShowCoordinates",
    "editinglayerspanel.viewCurvature": "@mainwindow.actionShowCurvature",
    "editinglayerspanel.viewDetails": "@mainwindow.actionPreview_Inactive_Glyphs",
    "editinglayerspanel.viewEmptyCoordinates": "@pref_glyphwindow.checkEmptyCoordinates",
    "editinglayerspanel.viewFontAudit": "@mainwindow.actionFont_Audit",
    "editinglayerspanel.viewGhost": "@mainwindow.actionShowGhosts",
    "editinglayerspanel.viewGlyphBar": "@mainwindow.actionShowGlyphBar",
    "editinglayerspanel.viewGroups": "@mainwindow.actionShowGroups",
    "editinglayerspanel.viewHandles": "@mainwindow.actionShowHandles",
    "editinglayerspanel.viewHoveredCoordinates": "@pref_glyphwindow.checkHoveredCoordinates",
    "editinglayerspanel.viewKerningGroups": "@mainwindow.actionShow_Kerning_Groups",
    "editinglayerspanel.viewLengths": "@pref_glyphwindow.checkShowAngles",
    "editinglayerspanel.viewMasterLinks": "@mainwindow.actionShowMaster_Relations",
    "editinglayerspanel.viewMeasurement": "@mainwindow.actionShowMeasurementLine",
    "editinglayerspanel.viewMetricsTable": "@mainwindow.actionShowMetricsTable",
    "editinglayerspanel.viewNodes": "@mainwindow.actionAll_Nodes",
    "editinglayerspanel.viewNodesAnchors": "@mainwindow.actionAnchors",
    "editinglayerspanel.viewPreview": "@mainwindow.actionShowPreview",
    "editinglayerspanel.viewSelectionFrame": "@mainwindow.actionShowSelectionFrame",
    "editinglayerspanel.viewShapeFrame": "@mainwindow.actionShowShapeFrame",
    "editinglayerspanel.viewSmooth": "@mainwindow.actionShowSmooth_Outline",
    "editinglayerspanel.viewStickers": "@mainwindow.actionShowStickers",
    "editinglayerspanel.viewString": "@mainwindow.actionShowTextLine",
    "editinglayerspanel.viewTension": "@pref_glyphwindow.checkShowTension",
    "editinglayerspanel.viewThickness": "@mainwindow.actionQuick_Measurement",
    "editinglayerspanel.widgetButtons": "@mainwindow.actionEditingLayersPanel",
    "featurespanel.buttonCompile": "#### Compile features\n\nFeature definitions are written in the Adobe FEA code. To test them in a Glyph window or to export the font, they need to be compiled\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> or press <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>↩</b></span> to compile them. If <i><span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> › Update on Compile</i> is on, the auto features will be updated before compilation\n\n<small>If <i>Output</i> panel reports:<br/>‣ **warnings**, features will compile, but you may want to check them<br/>‣ **errors**, you must fix them to export the font with features</small>",
    "featurespanel.buttonFind": "#### Search and search again\n\nKeep clicking to search for the text in the <i>Search in feature definitions</i> field until you find the right match",
    "featurespanel.buttonGenerate": "#### Autogenerate code for selected features\n\nFontLab can autogenerate code for features marked with ☆\n\nSelect them and <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> this button to **replace** manual code with **auto code** inserted between `#> feature` and `#< feature`\n\nTo combine manual and auto code, cut your code, click the button, then paste / write manual code after the `#< feature` line\n\nTo prevent auto code from updating, change `#>` to `#/>`",
    "featurespanel.buttonLookup": "#### Go to glyph or class at cursor\n\n <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> or press <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>L</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>L</b></span> when your text cursor in the features editor inside a:<br/>‣ **glyph** name to show the glyph in the Font or Glyph window<br/>‣ **class** name (that starts with `@`) to show the class in the <i>Classes</i> panel",
    "featurespanel.buttonUpdate": "#### Update selected auto features\n\n <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to update auto code in **auto features** (marked with ★). <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: update all auto features\n\nReplaces code between `#> feature` and `#< feature`. Does not replace manual code or disabled auto code that starts with `#/>`\n\nIf <i><span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> › Update on Compile</i> is on, all auto features are updated on each compile or export",
    "featurespanel.featuresAdd": "#### Add feature\n\nClick to see a list of common features that are not yet defined in your font\n\nChoose a feature from the list<br/>‣ with a mark to add and autogenerate the code<br/>‣ without a mark to add placeholder code that you can edit<br/>‣ <i>Empty feature</i>, then enter the feature tag and press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span> to add placeholder code for an unlisted feature",
    "featurespanel.featuresList": "List of feature definitions in the font, in the order their lookups will be applied if multiple features are on.\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> tag: edit, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span>: multi-select, <span style=\"font-style: normal; white-space: nowrap;\"><b>drag-drop</b></span>: reorder, <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <small>FEATURES</small>: edit all\n\n☆ can be autogenerated, ★ is autogenerated. `kern`, `mark` &amp; `mkmk` will typically be generated on export if not defined here",
    "featurespanel.featuresMore": "#### Features panel local menu (<span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span>)\n\nAdd and update auto features. Import, copy, export and remove feature definitions. Create `kern`, `mark` &amp; `mkmk` auto features. Import classes, tags and virtual tags from <i>Classes</i> panel, or include them on-the-fly\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "featurespanel.featuresRemove": "Removes selected feature definition(s)",
    "featurespanel.frameTop": "@mainwindow.actionFeaturesPanel",
    "featurespanel.searchClear": "Clear search: ",
    "featurespanel.searchField": "#### Search in feature definitions\n\nPress <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>F</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>F</b></span> to jump to this search field. Enter the name of a feature, lookup, glyph or class. Keep tapping <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span> or clicking the <i>Search</i> button until you find the right match",
    "featurespanel.textEditor": "#### Feature definition code\n\n<small>`feature xxxx {` ‣ starts the definition block for the `xxxx` feature<br/>`} xxxx;` ‣ ends the feature def block</small>\n\n<small>`lookup nnnnn {` ‣ starts named lookup def. `} nnnn;` ‣ ends it. `lookup nnnn;` ‣ refers to it</small>\n\n<small>`#> keyword`<br/>`#< keyword`<br/>‣ auto code blocks between those lines where `#> keyword` is:</small>\n\n<small>`#> feature` ‣ inside a `feature` block: auto code for this feature<br/>`#> languagesystem` ‣ in Prefix: auto `languagesystem ssss LLL` definitions<br/>`#> otclasses` ‣ OpenType classes from <i>Classes</i> panel<br/>`#> kernclasses` ‣ kerning classes<br/>`#> tags` ‣ manually assigned tags<br/>`#> classes` ‣ classes / tags depending on <i><span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> › Include Classes</i><br/>`#> vtags` ‣ virtual tags</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "featurespanel_section.FEATURES": "@featurespanel.featuresList",
    "featurespanel_section.PREFIX": "#### Feature definitions prefix\n\nShould start with `languagesystem` declarations, may include class definitions and standalone lookups to which features may refer.",
    "filterpanel.container": "@mainwindow.actionFiltersPanel",
    "filterpanel.frameTop": "@mainwindow.actionFiltersPanel",
    "fontinfopanel.autoAscender": "@info_dimensions.autoAscender",
    "fontinfopanel.autoCapsHeight": "@info_fontdimensions.autoCapsHeight",
    "fontinfopanel.autoCaretOffset": "@info_fontdimensions.autoCaretOffset",
    "fontinfopanel.autoCorner": "@info_fontdimensions.autoCornerTension",
    "fontinfopanel.autoCurvature": "@info_fontdimensions.autoCurvature",
    "fontinfopanel.autoDescender": "@info_dimensions.autoDescender",
    "fontinfopanel.autoInkTrap": "@info_fontdimensions.autoInktrapLen",
    "fontinfopanel.autoItalicAngle": "@info_fontdimensions.autoItalicAngle",
    "fontinfopanel.autoLineGap": "@info_dimensions.autoLineGap",
    "fontinfopanel.autoTSN": "@info_names.autoTSN",
    "fontinfopanel.autoXHeight": "@info_fontdimensions.autoXHeight",
    "fontinfopanel.buttonAddVariable": "**Add new parameter**. You can use parameters in expressions for guides and anchors, and and in feature definitions",
    "fontinfopanel.buttonList": "**Информация о шрифте**: показывает основную информацию о шрифте (названия шрифта и размеры).",
    "fontinfopanel.buttonMap": "**Parameters**: show list of font parameters, and optionally font guides and dimensions",
    "fontinfopanel.buttonMore": "**Open Font Info dialog**: opens the <i>File › Font Info</i> dialog where you can edit more details of the font info, and where you can copy font info between fonts and masters",
    "fontinfopanel.buttonRemoveVariable": "**Remove parameter**: remove currently selected parameter",
    "fontinfopanel.buttonUpm": "@info_dimensions.buttonUpm",
    "fontinfopanel.checkGuides": "**Font guides**: show list of font guides",
    "fontinfopanel.checkMetrics": "**Font dimensions**: show font dimensions: Ascender, Descender, Caps Height and x Height",
    "fontinfopanel.checkParameters": "**Font parameters**: show list of font parameters",
    "fontinfopanel.editNamesOther": "@info_names.editNamesOther",
    "fontinfopanel.editNamesTFN": "@info_names.editNamesTFN",
    "fontinfopanel.editNamesTSN": "@info_names.editNamesTSN",
    "fontinfopanel.frameTop": "@mainwindow.actionFont_Info_Panel",
    "fontinfopanel.labelUPM": "@dlgchangeupm.valueUpm",
    "fontinfopanel.spinnerAscender": "@info_dimensions.spinnerAscender",
    "fontinfopanel.spinnerCapsHeight": "@info_fontdimensions.valueCapsHeight",
    "fontinfopanel.spinnerCaretOffset": "@info_fontdimensions.valueCaretOffset",
    "fontinfopanel.spinnerCorner": "@info_fontdimensions.valueCornerTension",
    "fontinfopanel.spinnerCurvature": "@info_fontdimensions.valueCurvature",
    "fontinfopanel.spinnerDescender": "@info_dimensions.spinnerDescender",
    "fontinfopanel.spinnerInkTrap": "@info_fontdimensions.valueInktrapLen",
    "fontinfopanel.spinnerItalicAngle": "**Italic angle**:  the angle in degrees by which the text cursor in end-user apps will be slanted. Positive values are for right slant, negative for left slant. Non-`0` for italic or script fonts, `0` for upright fonts\n\nTo space an italic font, auto-calculate <i>Caret Offset</i>, then use <i>View › Italic Angle › Apply</i> in Metrics mode. Turn on <i>Contour › Coordinates › Follow Italic Angle</i> to “slant” the movements of <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> keys",
    "fontinfopanel.spinnerLineGap": "@info_dimensions.spinnerLineGap",
    "fontinfopanel.spinnerXHeight": "@info_fontdimensions.valueXHeight",
    "fontinfopanel.styleSlope": "@info_names.styleSlope",
    "fontinfopanel.styleWeight": "@info_names.styleWeight",
    "fontinfopanel.styleWidth": "@info_names.styleWeight",
    "fontspanel.buttonClone": "**Duplicate fonts**: create a copy of selected fonts",
    "fontspanel.buttonClose": "**Close fonts**: close selected fonts",
    "fontspanel.buttonInfo": "**Open Font Info dialog**: same as File > Font Info command",
    "fontspanel.buttonMore": "**Menu**: opens a menu with additional commands",
    "fontspanel.frameBottom": "@mainwindow.actionFonts_Panel",
    "fontspanel.frameLegend": "@mainwindow.actionFonts_Panel",
    "fontspanel.labelCount": "**Number of selected fonts**: number of selected fonts / total number of fonts",
    "fontspanel.listFonts": "@mainwindow.actionFonts_Panel",
    "fontwindow.bookmarkList": "**Bookmarks**: Searches and filters stored in preferences and retained after app restart.\n\nSelect glyph cells in the cell table and <span style=\"font-style: normal; white-space: nowrap;\"><b>drag-drop</b></span> them to bookmarks to create a quick custom filter.\n\nChoose an item in <i>Search history</i> and click <i>Add bookmark</i>, or drag-drop from <i>Search history</i> to store a filter or search for future use.\n\nTo remove a bookmark, choose it and click <i>Remove bookmark</i>",
    "fontwindow.bookmarksAdd": "**Add bookmark**: Adds the selected <i>Search history</i> item to Bookmarks",
    "fontwindow.bookmarksDelete": "**Remove bookmark**: Removes selected bookmark from the Bookmarks list",
    "fontwindow.bookmarksLabel": "@fontwindow.bookmarkList",
    "fontwindow.buttonCellSizeLarge": "**Larger cells**: Makes the size of glyph cells larger",
    "fontwindow.buttonCellSizeSmall": "**Smaller cells**: Makes the size of glyph cells smaller",
    "fontwindow.buttonClearRecipe": "#### Edit / reset recipe in all auto layers\n\n ‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> if <i>Recipe</i> is on gray: replaces the built-in recipe in **all** auto layers of the current glyph with custom recipe<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> if <i>Recipe</i> is on white: replaces the custom recipe in all auto layers of the current glyph with the built-in recipe",
    "fontwindow.buttonInfo": "@mainwindow.actionFont_Info",
    "fontwindow.buttonLayers": "Switch to 1st layer (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>1</b></span>)\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: show layers popup\n\n<small>Switch between layers:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>,</b></span>: previous<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>.</b></span>: next<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>1</b></span>–<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>9</b></span>: direct<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>0</b></span>: `#instance` layer</small>",
    "fontwindow.buttonLayers2": "Switch to 2nd layer (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>2</b></span>)\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: show layers popup\n\n<small>Switch between layers:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>,</b></span>: previous<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>.</b></span>: next<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>1</b></span>–<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>9</b></span>: direct<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>0</b></span>: `#instance` layer</small>",
    "fontwindow.buttonLayers3": "Switch to 3rd layer (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>3</b></span>)\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: show layers popup\n\n<small>Switch between layers:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>,</b></span>: previous<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>.</b></span>: next<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>1</b></span>–<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>9</b></span>: direct<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>0</b></span>: `#instance` layer</small>",
    "fontwindow.buttonLayers4": "Switch to 4th layer (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>4</b></span>)\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: show layers popup\n\n<small>Switch between layers:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>,</b></span>: previous<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>.</b></span>: next<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>1</b></span>–<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>9</b></span>: direct<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>0</b></span>: `#instance` layer</small>",
    "fontwindow.buttonList": "@fontwindow.glyphList",
    "fontwindow.buttonProportionSquare": "**Normal**: Makes glyph cell width and height proportional",
    "fontwindow.buttonProportionTall": "**Narrow**: Makes glyph cells narrow and tall to show more cells in a row",
    "fontwindow.buttonProportionWide": "**Wide**: Makes glyph cells wide to show longer names in cell captions",
    "fontwindow.buttonQuery": "#### Show / hide Font window sidebar\n\nIn the sidebar of the Font window and in the Font Map panel, you can apply filters to the Font window cell table using built-in categories, search history and stored bookmarks.",
    "fontwindow.buttonSendMark": "Puts the current color flag value to the <i>Search</i> field allowing to find all glyphs having the same color",
    "fontwindow.buttonTable": "Show / hide **table of glyph cells**: a grid of cells that shows glyphs **existing** in the font (on white background) and **missing** glyphs that are matched by a filter (on gray background)\n\n<small><span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> an existing glyph cell to make the glyph the current glyph. Clickt with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span> or <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span> to select multiple glyph cells. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> a missing glyph cell to create the glyph, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> an existing glyph cell to open it for editing in a Glyph window</small>\n\n<small>Use the Font filter dropdown and Search box in the property bar, and the Font window sidebar to apply font filters that show only specific glyphs, and use <i>Hide unfiltered glyphs</i> to show / hide glyphs that don’t match a filter. <span style=\"font-style: normal; white-space: nowrap;\"><b>Drag-drop</b></span> to reorder glyphs if font filter type is <i>Index</i>, or otherwise to replace or append glyphs</small>\n\n<small>Zoom with pinch, <i>View › Zoom</i> or the bottom-right <i>Cols</i> selector (cell captions appear in closer zoom levels). Customize appearance in <i>Preferences › Font window</i></small>",
    "fontwindow.buttonTags": "**Tags**: Opens the tags dialog box allowing you to define tags for the current glyph. Black filled icon denotes there are tags defined for the glyph",
    "fontwindow.categoriesList": "Click an entry to apply a font filter, and to show the results on the top of the glyph cell table (if <i>Hide unfiltered glyphs</i> is off), or to only show filter results (if it’s on)\n\n<small>‣ **Basics**: start designing a new Latin-script font<br/>‣ **Categories**: see existing letters, numbers and other types of glyphs (property bar filters also show missing glyphs)<br/>‣ **Properties**: see existing composite or non-composite (contour) glyphs, marks, ligatures<br/>‣ **Layers &amp; Masters**: see names of glyph layers in all glyphs, and glyphs with non-matching variable masters<br/>‣ **Scripts**: see existing glyphs that belong to a writing system (Latin, Cyrillic etc.)</small>",
    "fontwindow.checkAllGlyphs": "#### Hide unfiltered glyphs\n\n‣ **on**: only shows filtered glyph cells (matched by the filter such as encoding, category, script or search result), and hides unfiltered glyph cells (that don’t match the filter)\n\n‣ **off**: shows filtered glyph cells first (with a colored caption, customizable in <i>Preferences › Font window</i>), then shows unfiltered glyph cells",
    "fontwindow.checkAuto": "#### Auto layers toggle\n\n‣ click if **off**:  makes auto layers in **all masters** of the current glyph, and copies the current recipe to all auto layers<br/>‣ click if **on**: makes manual layers in all masters of the current glyph\n\n<small>‣ When you turn Auto layer **on**: FontLab replaces all previously existing content of that layer with components placed according to a built-in or custom recipe. When you modify the source glyphs of these components, the auto layer updates ‣ automatically if <i>Font › Live Update › Live Auto Layers</i> is on, or ‣ when you choose <i>Font › Update Glyphs</i> if <i>Live Auto Layers</i> is off. Auto layers behave as if they’re locked: you cannot edit their contents except by editing the recipe<br/>‣ When you turn Auto layer **off**: the layer keeps the content placed by the auto layer recipe but becomes manual so you can edit it</small>",
    "fontwindow.colorMark": "#### Color flag\n\nAssign a color to the glyph cell to visually differentiate groups of glyphs, sort the Font window or search glyphs. The number shows how many glyphs in the font have the same color flag as the current glyph\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to assign a predefined color flag to selected glyph cells but to keep pre-existing per-layer flags in other layers. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to assign to current layer only. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> to assign to all layers, overriding per-layer flags. <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> <i>…</i> to choose other colors.\n\nSometimes called “mark”. Not used in final font formats",
    "fontwindow.columnCount": "**Columns**: Changes the size of glyph cells so that 8, 16, 24, 32, 64 cells could fit in the current Font window width. Select <i>Flex</i> to make the width in cells vatiable",
    "fontwindow.flagBlue": "**Blue flag**: <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to apply blue color flag to the selected glyphs, but keep pre-existing per-layer flags in other layers. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to apply for current layer only. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> to apply to all layers overriding any per-layer flags.",
    "fontwindow.flagCyan": "**Cyan flag**: <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to apply cyan color flag to the selected glyphs, but keep pre-existing per-layer flags in other layers. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to apply for current layer only. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> to apply to all layers overriding any per-layer flags.",
    "fontwindow.flagDown": "#### Decrease color flag value\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: decrease existing color flag values of selected glyph cells by –1 within the hue range 1–360<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span>: decrease by –10\n\nWorks on cells that have different color flags.",
    "fontwindow.flagGreen": "**Green flag**: <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to apply green color flag to the selected glyphs, but keep pre-existing per-layer flags in other layers. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to apply for current layer only. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> to apply to all layers overriding any per-layer flags.",
    "fontwindow.flagMagenta": "**Magenta flag**: <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to apply magenta color flag to the selected glyphs, but keep pre-existing per-layer flags in other layers. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to apply for current layer only. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> to apply to all layers overriding any per-layer flags.",
    "fontwindow.flagNone": "**No flag**: <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to remove color flag from the selected glyphs, but keep pre-existing per-layer flags in other layers. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to remove flag from current layer only. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> to remove flag from all layers.",
    "fontwindow.flagRed": "**Red flag**: <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> to apply red color flag to the selected glyphs, but keep pre-existing per-layer flags in other layers. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> to apply for current layer only. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> to apply to all layers overriding any per-layer flags.",
    "fontwindow.flagUp": "#### Increase color flag value\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: increase existing color flag values of selected glyph cells by +1 within the hue range 1–360<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> increase by +10\n\nWorks on cells that have different color flags.",
    "fontwindow.fontTableCellSize": "**Cell size slider**: Changes the size of glyph cells from the smallest to the largest",
    "fontwindow.glyphList": "**Font window list**: shows glyph details in columns. Use the <i>Cell caption</i> dropdown in the property bar to show different column groups. Click <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span>, turn off <i>Sync with cell caption</i> and choose the columns you want to explicitly see\n\nClick the column headers to sort the list. If a header is underlined, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> any cell in the column to edit its contents. Multi-select the rows and use menus and panels to trigger operations the same way as you would in the Font window table",
    "fontwindow.glyphName": "**Glyph name**: The name of the current glyph",
    "fontwindow.historyLabel": "@fontwindow.historyList",
    "fontwindow.historyList": "**Search history**: Lists recent searches and font filters applied from the property bar (not the sidebar). Click to repeat the search or reapply the filter. Drag to <i>Bookmarks</i> to keep search / filter for future use",
    "fontwindow.labelCaption": "@fontwindow.selectorCaption",
    "fontwindow.labelMark": "@inspector_glyph.labelMark",
    "fontwindow.searchField": "**Search box**: Enter some text or number to search within the font’s glyphs, then click in the dropdown to choose how to interpret your entry (glyph name, Unicode, glyph metrics, color flag…). The search results produce a font filter. Drag-drop glyph cells from the table into the search box to filter just those glyphs. Use the <i>Search history</i> section of the Font window sidebar to repeat previous searches",
    "fontwindow.searchReset": "**Clear filter**: Removes any filter applied to the glyph cells table, and shows all glyphs in the font",
    "fontwindow.selectedCount": "Number of **selected / visible / total** glyphs in the Font window",
    "fontwindow.selectorArrange": "**Sort cells**: Sorts the glyph cells visually by glyph index, name, Unicode codepoint, glyph metrics &amp; dimensions, color flag, Unicode script or last-modified “age”\n\nIf no filter is on, sorts all glyphs. If a filter is on, sorts the filter glyphs within themselves, and unfiltered glyphs within themselves. If filter type is Encoding, filtered glyphs are sorted by the selected encoding filter. If filter type is Index, cells are sorted by the physical glyph order in the font\n\n<small>Use <i>Font › Sort Glyphs › Current Order</i> to physically reorder the glyphs in the font to match the visual sorting</small>",
    "fontwindow.selectorCaption": "**Cell caption**: Choose the info to show as cell caption (<i>View › Zoom › Zoom In</i> if you don’t see cell captions). Customize cell &amp; caption appearance in <i>Preferences › Font window</i>",
    "fontwindow.selectorEncoding": "**Font filter**: Apply a font filter depending on the Font filter type (previous dropdown)\n\nFor all filter types except Index, shows glyph cells for both **existing** and **missing** glyphs that match the filter. To only see existing glyphs, use the corresponding filter in the <i>Categories</i> and <i>Scripts</i> sections of the Font window sidebar.",
    "fontwindow.selectorLeftGroup": "The name of the 1st kerning class which the current glyph belongs to. ==---= means the glyph doesn't belong to any 1st class. Click to put the glyph into existing class or to the new 1st class",
    "fontwindow.selectorMode": "**Font filter type**: Click to choose the type of font filter to apply to the table of glyph cells (encoding, Unicode range, codepage, Unicode category, script): the next dropdown will show the last-remembered filter.\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>-click and choose the type: the next dropdown will show the filter that best matches the current glyph. Change the filter in the next dropdown.\n\nChoose **Index** to see all font glyphs ordered by their physical glyph order (index / GID), and to reorder them with drag-drop\n\n<small>When you apply a font filter, the table shows filtered glyph cells (cells matched by the filter, which may include missing glyph cells on gray background) first, followed by the remaining glyph cells, or just the filtered cells, depending on the <i>Hide unfiltered glyphs</i> toggle</small>",
    "fontwindow.selectorRightGroup": "The name of the 2nd kerning class which the current glyph belongs to. ==---= means the glyph doesn't belong to any 2nd class. Click to put the glyph into existing class or to the new 2nd class",
    "fontwindow.staticQueryContent": "The currently selected filter for your reference",
    "fontwindow.unicodeName": "**Unicode**: Unicode index of the current glyph",
    "fontwindow.valueLSB": "@bar_metrics.valueLSB",
    "fontwindow.valueRSB": "@bar_metrics.valueRSB",
    "fontwindow.valueRecipe": "#### Recipe for all auto layers\n\n Edits the recipe for all auto layers in the current glyph. Built-in recipe for an auto layer is shown on gray; custom recipe on white. Red if some components are missing.\n\nTo replace the built-in recipe in all auto layers with a custom recipe, click <i>Edit / reset recipe</i>, edit the recipe text and press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>. To use the built-in recipe in all layers, click <i>Reset recipe</i>. To enter a custom recipe in all auto layers, enter the recipe text",
    "fontwindow.valueWidth": "@bar_metrics.valueWidth",
    "format.designspace": "**DesignSpace UFO**: `.designspace` file &amp; `.ufo` folders\n\nMultiple-master format for interchange with other apps. Export entire font into DesignSpace UFO, then open DesignSpace in Superpolator, Glyphs.app or fontmake, or open UFO in RoboFont or FontForge.",
    "format.glyphs": "**Glyphs**: `.glyphs` file\n\nMultiple-master format for interchange with other apps. Open the exported file in Glyphs.app or in fontmake.",
    "format.otf": "**OpenType with PostScript outlines**: `.otf` file\n\nUniversal format for delivering single-master monochrome fonts, families of instances, and color fonts to end users.\n\nThe OTF flavor stores PostScript curves in the `CFF` table. Usually looks good on screen with simple automatic hinting.\n\n<small>Monochrome OTF fonts can be installed on any modern system. Color font flavors and CSS webfonts will export as additional files (customize to enable / disable).</small>",
    "format.otvar": "**Variable OpenType with TrueType outlines**: `.ttf` file\n\nNew format for delivering multiple-master monochrome variable fonts to end users.\n\nThe TTF flavor converts PS curves into TT curves and stores them in the `glyf` table. The contours may change minimally. Your masters must match, and their locations on axes must conform to recommendations.\n\n<small>Variable TTF fonts work on recent systems and browsers. In older systems, only the default master is visible.</small>",
    "format.pfb": "**PostScript Type 1**: `.pfb`, `.afm`, `.inf` &amp; `.pfm` files\n\nLegacy PostScript Type 1 format for installing single-master monochrome fonts in some older or specialized systems.",
    "format.psvar": "**Variable OpenType with PostScript outlines**: `.otf` file\n\nNew format for delivering multiple-master monochrome variable fonts to end users.\n\nThe OTF flavor stores PostScript curves in the `CFF2` table. Your masters must match, and their locations on axes must conform to recommendations.\n\n<small>Variable OTF fonts only work in very recent systems and browsers. They cannot be installed on older systems.</small>",
    "format.ttf": "**OpenType with TrueType outlines**: `.ttf` file\n\nUniversal format for delivering single-master monochrome fonts, families of instances, and color fonts to end users.\n\nThe TTF flavor converts PS curves into TT curves and stores them in the `glyf` table. The contours may change minimally. Allows superb screen quality but requires some understanding of hinting.\n\n<small>The monochrome TTF fonts can be installed on any system. Color font flavors and CSS webfonts will export as additional files (customize to enable / disable).</small>",
    "format.ufo": "**Unified Font Object**: `.ufo` folder\n\nSingle-master format for interchange with other apps. Export masters or instances into UFO, then open them RoboFont, Glyphs.app, or FontForge.",
    "format.vfb": "**FontLab Classic**: `.vfb` file\n\nSingle-master format for interchange with other apps. Export masters or instances into VFB, then open them FontLab Studio 5, Fontographer 5 or TypeTool 3.",
    "format.vfc": "**FontLab Compact**: `.vfc` file\n\nNative FontLab format for saving files losslessly. Smaller than VFJ, but not human-readable.",
    "format.vfj": "**FontLab JSON**: `.vfj` file\n\nNative FontLab format for saving files losslessly. Based on JSON, human-readable, but larger than VFC.",
    "format.woff": "**CSS webfonts with TrueType outlines**: `.woff`, `.ttf`, `.eot`, `.css` &amp; `.html`, optionally also `.woff2`\n\nUniversal format for `@font-face` web font packages. The TTF flavor converts PS curves into TT curves, so the contours may change minimally. Allows superb screen quality but requires some understanding of hinting.\n\n<small>Exports WOFF and EOT by default, customize to also export WOFF2. Also exports TTF and a simple CSS and HTML file.</small>",
    "format.woff2": "**CSS webfonts with TrueType outlines**: `.woff2`, `.otf`, `.css`, &amp; `.html`, optionally also `.woff`\n\nUniversal format for `@font-face` web font packages. The OTF flavor uses PostScript curves. Usually looks good on screen with simple automatic hinting.\n\n<small>Exports WOFF2 by default, customize to also export WOFF. Also exports OTF and a simple CSS and HTML file.</small>",
    "format.xfo": "**FontLab XML**: `.xfo` folder\n\nExperimental format used internally by FontLab.",
    "gallerypanel.buttonAdd": "**Add element**: Adds the element selected in the Glyph windows to the Gallery by giving it some default name",
    "gallerypanel.buttonPlace": "**Place**: Places a reference to the selected element into current glyph\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Drag-drop</b></span> element from Gallery into Glyph window or a Font window cell to place a reference to this element. Select element in Gallery &amp; <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>Place</i> to place the reference into Glyph window or into selected Font window cells",
    "gallerypanel.buttonQuery": "**Filter sidebar**: Opens the Filter sidebar at the left. The sidebar may contain filters for elements generated automatically based on the element names",
    "gallerypanel.buttonRemove": "**Remove element from Gallery**: Removes the selected element from the Gallery by clearing its name. All elements and references are preserved in the font",
    "gallerypanel.buttonReplace": "**Replace selected element**: To replace an element in a glyph with a different one, select the element you want to replace in the Glyph window, select the element you want to replace it with in the Gallery panel, and then <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>Replace</i>",
    "gallerypanel.chartShapes": "#### Gallery panel: The container of all <i>named</i> elements in the font.\n\nElements are listed alphabetically in the panel as grid cells. Along with a preview of the element and its name, each grid cell shows the number of references. The selected element name is also shown at the bottom-left of the panel.\n\nTo change the size of the grid cells, use the <i>Smaller cells</i> or <i>Bigger cells</i> buttons. To place an element from the Glyph window to the Gallery panel, select the element in the Glyph window and click the <i>+</i> button. The selected element will get the default name and appear in the Gallery panel. To remove an element from the Gallery panel, select it and <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the <i>-</i> button",
    "gallerypanel.frameBottom": "@mainwindow.actionGalleryPanel",
    "gallerypanel.frameTop": "@mainwindow.actionGalleryPanel",
    "gallerypanel.keyList": "**Filter sidebar**: Automatically generated filters for elements in the Gallery. Filters are based on element names and are used to group and search elements quickly. Use element names with dots, e.g. \"a.top\", \"e.top\", \"o.top\" and the filter named \".top\" will appear in the list.\n\nTo filter elements by names, select the filter in the list. To show all elements, <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>No filter</i>. To close the filter sidebar, <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the <i>Filter sidebar</i> button",
    "gallerypanel.labelName": "**Element name**: The name of the selected element. Change names in the <i>Elements</i> panel",
    "gallerypanel.searchField": "**Element filter**: Start typing the element name here to find it in the Gallery",
    "gallerypanel.selectorNone": "**No filter**: Drops the filter if any and shows all available elements",
    "gallerypanel.sizeDecrease": "**Smaller cells**: Makes the size of the grid cells smaller. More elements are visible",
    "gallerypanel.sizeIncrease": "**Bigger cells**: Makes the size of the grid cells bigger. Less elements are visible",
    "glyphsbar.buttonClose": "**Close Glyphs bar**:  click to close the Glyphs bar\n\nOpen it with <i>View › Control Bars › Glyphs Bar</i>",
    "glyphsbar.buttonLocation": "**Location of the Glyphs bar**:  click to move the Glyphs bar to the top or bottom of the Glyph window",
    "glyphsbar.fontChartView": "**Glyphs bar**:  shows all glyphs sorted by Index. Click and then:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>←</b>·<b>→</b></span>: navigate<br/>‣ Type glyph name: jump to glyph<br/>‣ Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span> or <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: place glyph as current glyph in Glyph window<br/>‣ Tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ESC</small></b></span>: leave Glyph bar<br/>‣ Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span>: see quick preview of glyph if <i>Preferences › Font window › Scrolling › Space</i> is **off**, or drag to scroll if it is **on**",
    "glyphwindow.buttonAddText": "**Save text**: Adds the text from the text box below to the Text library. You can also add texts to the library using Preferences",
    "glyphwindow.buttonCompile": "**Compile features**: Updates the list of features by compiling their code defined in the Features panel. If <i>Update on Compile</i> is on in Features panel, also updates auto feature definitions",
    "glyphwindow.buttonCopyName": "**Copy glyph name**: <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> to copy the name of the current glyph to the clipboard",
    "glyphwindow.buttonDefault": "Turns on the features that are commonly applied in end-user apps by default (`calt`, `ccmp`, `liga`, `locl` and script-specific shaping features). Turns off other features",
    "glyphwindow.buttonFollow": "@mainwindow.actionEcho_Text",
    "glyphwindow.buttonKerning": "#### Apply kerning\n\n‣ **On**: applies the visual kerning when rendering the text in the Glyph window.",
    "glyphwindow.buttonLayers": "@fontwindow.buttonLayers",
    "glyphwindow.buttonLayers2": "@fontwindow.buttonLayers2",
    "glyphwindow.buttonLayers3": "@fontwindow.buttonLayers3",
    "glyphwindow.buttonLayers4": "@fontwindow.buttonLayers4",
    "glyphwindow.buttonLeftRightReset": "Clears side texts",
    "glyphwindow.buttonLowercase": "**Text to lowercase**: Coverts the text in the Glyph window to lowercase",
    "glyphwindow.buttonMarks": "#### Apply mark attachment\n\n‣ **On** and the text has base glyphs followed by mark glyphs: uses anchors with corresponding names (with the `_` prefix in marks, without the prefix in bases) and dynamically applies mark attachment when rendering the text in the Glyph window.",
    "glyphwindow.buttonMetrics": "@mainwindow.actionShow_Glyphs_Metrics",
    "glyphwindow.buttonQuery": "#### Show / hide Content sidebar\n\nIn the content sidebar of the Glyph window, you can edit the window text, apply basic font formatting, and apply OpenType features.",
    "glyphwindow.buttonSizeDown": "**Smaller text**: Makes the size of text in the Glyph window smaller",
    "glyphwindow.buttonSizeUp": "**Larger text**: Makes the size of text in the Glyph window larger",
    "glyphwindow.buttonText": "**Sample texts**: Opens a text from the Texts library. The selected text appears both in the Glyph window, and in the Text Bar",
    "glyphwindow.buttonUnselect": "Turns off all features",
    "glyphwindow.buttonUppercase": "**Text to uppercase**: Coverts the text in the Glyph window to uppercase",
    "glyphwindow.checkFeatures": "**Apply OpenType features**: Applies OpenType features selected in the list to the text in the Glyph window. Also activates internationalized text processing: bidirectional rendering and Unicode normalization.",
    "glyphwindow.colorMark": "@fontwindow.colorMark",
    "glyphwindow.labelFeatures": "@glyphwindow.checkFeatures",
    "glyphwindow.labelFont": "#### Open Font tab / window\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: open Font tab / window and select the glyphs that are visible in this Glyph tab / window\n\n<small>Same as <i>Window › Open Font Tab / Window</i></small>",
    "glyphwindow.labelGlyph": "@glyphwindow.selectorGlyph",
    "glyphwindow.labelText2": "@glyphwindow.selectorText2",
    "glyphwindow.listFeatures": "**Features list**: features defined in the Features panel. If the list is empty click the <i>Compile features</i> button above the list\n\nIf you don’t have any features defined, open <i>Window › Panels › Features</i>, click <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> in the panel and choose <i>Add Auto Features</i>",
    "glyphwindow.listTrackingH": "@bar_metrics.labelTrackingH",
    "glyphwindow.listTrackingV": "@bar_metrics.labelTrackingV",
    "glyphwindow.searchClear": "**Clear search**: Removes the text from the search field",
    "glyphwindow.searchField": "**Search field**: Searches for glyphs by some criterion to quickly change the contents of the Glyph window",
    "glyphwindow.selectorFont": "**Current font**: Shows current font name. <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span>: change current font used in this Glyph window if multiple fonts are open",
    "glyphwindow.selectorGlyph": "**Current glyph**: Shows name of current glyph. <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span>: change current glyph to a related glyph, same as <i>Edit › List Related Glyphs</i>",
    "glyphwindow.selectorLanguage": "**Set language for text**: Choose a script explicitly, then choose a language to apply features defined for this script and language system (including `locl`). When the script is <i>Auto</i>, the language is always <i>Defult</i>. The list depends on the selected script, and includes languages covered by the font’s `languagesystem` definitions in the <i>Features</i> panel prefix",
    "glyphwindow.selectorScript": "**Set script for text**: Choose the script (writing system) for which layout features will be applied in text\n\n<i>Auto</i> automatically splits text into script runs, and applies features defined for each script on each run. <i>Default</i>, <i>Latin</i> etc. apply features defined for that script to the entire text. The list includes scripts covered by the font’s Unicode codepoints and by the `languagesystem` definitions in the <i>Features</i> panel prefix",
    "glyphwindow.selectorText": "**Window texts**: Opens a text from the Texts library. The selected text appears both in the Glyph window, and in the text box below this menu",
    "glyphwindow.selectorText2": "**Text menu**: Click: change Glyph window text to a text predefined in <i>Preferences › Texts</i>",
    "glyphwindow.sizeList": "**Text size**: Click to select the size of text in the Glyph window from the list",
    "glyphwindow.textLeft": "**Text on the left**: Adds a string before each glyph in the Glyph window. This function, called “zigzag glyphs”, can be useful when working on glyph metrics or kerning",
    "glyphwindow.textRight": "**Text on the right**: Adds a string after each glyph in the Glyph window. This function, called “zigzag glyphs”, can be useful when working on glyph metrics or kerning",
    "glyphwindow.valueFontSize": "**Text size**: Enter the size of text in the Glyph window",
    "glyphwindow.valueGlyph": "**Glyph name**: The name of the current glyph. Typing new name here adds the glyph after the current glyph and makes it current",
    "glyphwindow.valueString": "**Text Bar**: Type or paste text here. The text appears in the Glyph window. Input Unicode characters directly (AÄĄ etc.), or input glyphnames using the /glyphname format (e.g. `/A/Aacute/Aogonek`), or hex Unicode codepoints using the \\uXXXX format (e.g. \\u0041\\u00c4\\u0104).To enter an explicit Unicode character right after a glyphname or a hex codepoint, enter a space first (e.g. `A/Acute Ą`)",
    "glyphwindow.valueText": "**Text box**: Type or paste text here. The text appears in the Glyph window. To add text to the Text library, click the plus-shaped button above the box",
    "glyphwindow.valueTrackingH": "@bar_metrics.labelTrackingH",
    "glyphwindow.valueTrackingV": "@bar_metrics.labelTrackingV",
    "glyphwindow.widgetGlyphs": "**Glyphs Bar**: A single-row mini-map of glyph cells at the bottom of the Glyph window. When the Glyphs Bar is active use the arrow keys to navigate your glyph set, quickly type the beginning of a glyph name to jump to that glyph, hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span> to show a larger sample of the glyph cell along with the glyph name, Unicodes, character name and metrics values, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> a glyph cell or tap <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span> to place that glyph as the current glyph in the Glyph window, tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ESC</small></b></span> or click the Glyph window to leave the Glyphs Bar without changing the current glyph",
    "historypanel.buttonClear": "**Forget history**: Clears the history, empties the stack of undoes",
    "historypanel.buttonDown": "**Rewind** (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>V</b></span>): Interpolate back to the remembered snapshot.",
    "historypanel.buttonDownLegend": "@historypanel.buttonDown",
    "historypanel.buttonStore": "**Record** (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>A</b></span>): Take a snapshot of the current glyph outlines and remember it in memory for further interpolation.",
    "historypanel.buttonStoreLegend": "@historypanel.buttonStore",
    "historypanel.buttonUp": "**Fast forward** (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>B</b></span>): Interpolate from the snapshot (taken with <i>Record</i>) to the current glyph contours.",
    "historypanel.buttonUpLegend": "@historypanel.buttonUp",
    "historypanel.frameLegend": "@mainwindow.actionHistoryPanel",
    "historypanel.frameTop": "@mainwindow.actionHistoryPanel",
    "historypanel.historyList": "**History list**: List of operations you have performed with glyph contours, glyph metrics, kerning or glyph info.<br/>‣ on the background: applied operations<br/>‣ on white background: undone operations<br/>‣ Click and entry or click <i>Undo</i> / <i>Redo</i> to roll back and forward.",
    "historypanel.redoButton": "**Redo**: Cancels the last <i>Undo</i> operation",
    "historypanel.undoButton": "**Undo**: Cancels the last operation",
    "historypanel.widgetBottom": "@mainwindow.actionHistoryPanel",
    "info_axes.Info_Axes": "**Axes**: font typographic properties that change during interpolation, e.g. weight, width\n\nDefine if you have multiple masters, and plan to export instances or variable fonts",
    "info_axes.buttonAdd": "**Add new axis** and choose a common or custom axis",
    "info_axes.buttonRemove": "Remove selected axis",
    "info_axes.checkCheckGeometry": "#### Check masters geometry\n\n‣ **On:** Auto-matches (dynamically corrects during interpolation) mismatching **order and transformation of components / elements**, and differences in **segment and node type**\n\n<small>This setting is saved in your VFC/VFJ and influences the interpolation when you choose dynamic instances in <i>Variations</i> panel, and when you export instances or variable fonts. You may use it in combination with <i>Sort contours and start nodes</i>. Turn one or both settings on, and use <i>Glyph › Match Masters</i> to permanently apply the auto-matching to your contours. Turn both off if your masters are perfectly compatible</small>",
    "info_axes.checkSortContours": "#### Sort contours and start nodes\n\n‣ **On:** Auto-matches (dynamically corrects during interpolation) mismatching **order of contours**, and differences in **start nodes**\n\n<small>This setting is saved in your VFC/VFJ and influences the interpolation when you choose dynamic instances in <i>Variations</i> panel, and when you export instances or variable fonts. You may use it in combination with <i>Check masters geometry</i>. Turn one or both settings on, and use <i>Glyph › Match Masters</i> to permanently apply the auto-matching to your contours. Turn both off if your masters are perfectly compatible</small>",
    "info_axes.selectorCheckGeometry": "@info_axes.checkCheckGeometry",
    "info_axes.selectorSortContours": "@info_axes.checkSortContours",
    "info_codepages.Info_Codepages": "**Codepages** that the font supports\n\nUsed in the OpenType `OS/2` table, will be autogenerated",
    "info_codepages.buttonAdd": "Add codepages selected in the **Available** list to the list of codepages that the font supports",
    "info_codepages.buttonAuto": "**Detect** the codepages that the font supports using the font’s Unicode codepoints",
    "info_codepages.buttonClear": "Remove all codepages from the list of codepages that the font supports",
    "info_codepages.buttonRemove": "Remove the codepages selected in the **Supported** list from the list of codepages that the font supports",
    "info_codepages.checkSymbol": "Turn this on, and make sure that your font only includes glyphs with PUA Unicodes U+F020–F0FF, to export an OpenType (.ttf or .otf) Symbol font. The .ttf will have `cmap 3.0`",
    "info_codepages.searchField": "Filter available codepages by name or number",
    "info_codepages.valueString": "Directly edit the `OS/2.CodePageRange1` &amp; `2` fields",
    "info_copyright.Info_Copyright": "**Legal**: info on copyright and licensing",
    "info_copyright.editCreditCopyright": "**Copyright notice**: Should include the © symbol or the word “Copyright”, the year and the name of the copyright owner (company or person)\n\nExported to OpenType as `name 0` and to Type 1 as `Notice`",
    "info_copyright.editCreditTrademark": "**Trademark**: Optional\n\nExported to OpenType as `name 7`",
    "info_copyright.editLicense": "**License Description**: Licensing info or the EULA terms for the font\n\nExported to OpenType as `name 13`",
    "info_copyright.editLicenseURL": "**License URL**: The website address where end-users can find licensing info or the EULA terms for the font\n\nShould start with `https://` or `http://`\n\nExported to OpenType as `name 14`",
    "info_copyright.selectorEmbedding": "Choose the conditions on which the copyright owner permits embedding of the font into electronic documents such as PDF",
    "info_creator.Info_Creator": "**Creator**: description, vendor and designer credits. Used in the OpenType `name` and `head` tables.",
    "info_creator.buttonAutoVersion": "**Build version string from version numbers**:  enter the major and minor version numbers and click this button to generate the version string",
    "info_creator.buttonDesignerURL": "Click to open Designer URL in browser",
    "info_creator.buttonNow": "Click to set assign date and time",
    "info_creator.buttonVendorURL": "Click to open Vendor URL in browser",
    "info_creator.dateCreation": "**Creation date**:  Edit the date in `YYYY-MM-DD` format. It will be stored as the creation date in the font. Click <i>Now</i> to assign the current date.",
    "info_creator.editCreditDescription": "**Description**:  description or explanations intended for the end-users of the font\n\nExports to OpenType as `name 10`, to Type 1 as `Copyright`",
    "info_creator.editDesigner": "**Designer**:  the name or names of the type designer(s)\n\nExports to OpenType as `name 9`",
    "info_creator.editDesignerURL": "**Designer URL**:  enter the web site address for the designer\n\nShould start with `https://` or `http://`\n\nExports to OpenType as `name 12`",
    "info_creator.editManufacturer": "**Manufacturer**:  longer free-text field that identifies the font manufacturer or publisher\n\nExports to OpenType as `name 8`",
    "info_creator.editVendor": "**Vendor code**:  identifies the font manufacturer/publisher. It consists of up to 4 plain English uppercase or lowercase letters and/or digits\n\nEnter your Vendor code registered at Microsoft in the 1st field, and the corresponding **Vendor name** will appear in the 2nd field (and vice versa), or enter an unregistered code, which should not use uppercase letters\n\nExports to OpenType as `OS/2.achVendID`",
    "info_creator.editVendorURL": "**Vendor URL**:  specify the web site address for the font publisher / vendor.\n\nShould start with `https://` or `http://`\n\nExports to OpenType as `name 11`",
    "info_creator.editVersion": "**Version string**:  enter the major and minor version numbers and click the <i>Build version string from version numbers</i> button to generate the version string\n\nYou may follow `Version x.yyy` with a semicolon and additional info.",
    "info_creator.spinVersionMajor": "**Major version number**:  enter the major and minor version numbers and click the <i>Build version string from version numbers</i> button to generate the version string",
    "info_creator.spinVersionMinor": "**Minor version number**:  enter the major and minor version numbers and click the <i>Build version string from version numbers</i> button to generate the version string",
    "info_creator.timeCreation": "**Creation time**:  Edit the time in `HH:MM` format. It will be stored as the creation time in the font. Click <i>Now</i> to assign the current time.",
    "info_creator.vendorCompletion": "@info_creator.editVendor",
    "info_dimensions.Info_Dimensions": "**Font family dimensions**: font UPM size, current master linespacing\n\nMake them identical in all masters or fonts of the same family",
    "info_dimensions.autoAscender": "**Auto Ascender**: automatically calculate Ascender by measuring height of key lowercase Latin letters: `h`, `b`, `d`",
    "info_dimensions.autoBbox": "**Auto BBox**: Normally, the BBox (font bounding box) is calculated automatically and shown here. If the font contains many glyphs, the BBox fields are empty. Click this to calculate the BBox",
    "info_dimensions.autoDescender": "**Auto Descender**: automatically calculate Descender by measuring the bottom of key lowercase Latin letters: `p`, `q`",
    "info_dimensions.autoLineGap": "**Auto Line gap**: automatically calculate font line gap dimension using _Ascender_, _Descender_ and _UPM_.",
    "info_dimensions.autoSZB": "**Auto Safe bottom**:  automatically calculates the Safe bottom (`OS/2.usWinDescent`) value",
    "info_dimensions.autoSZT": "**Auto Safe top**:  automatically calculates the Safe bottom (`OS/2.usWinAscent`) value",
    "info_dimensions.buttonUpm": "Click <i>Change</i> to modify the Units Per eM (UPM) value, then choose to just change the value, or to also scale all glyphs and metrics to match the new UPM value",
    "info_dimensions.spinnerAscender": "Enter the position of the font’s ascender line in the **Ascender** field. To keep the line height consistent within a font family, Ascender, Descender and Line gap should be identical in all masters and in all fonts of a family.\n\n<small>The default **line height** of the text in many end-user apps will be sum of the distances from Ascender to baseline, and from baseline to Descender, plus the Line gap. If the value differs between masters, the background of the text field will be yellow.</small>\n\n<small>Exports to OpenType as `OS/2.sTypoAscender`, and as `hhea.ascender` if <i>Font Info › Other Values › Custom hhea linespacing</i> is off. For new fonts, we recommend turning on <i>Font Info › Other values › Prefer typo metrics</i></small>",
    "info_dimensions.spinnerDescender": "Enter the position of the font’s descender line in the **Descender** field. To keep the line height consistent within a font family, Ascender, Descender and Line gap should be identical in all masters and in all fonts of a family. Should be a negative value if it is below the baseline.\n\n<small>The default **line height** of the text in many end-user apps will be sum of the distances from Ascender to baseline, and from baseline to Descender, plus the Line gap. If the value differs between masters, the background of the text field will be yellow.</small>\n\n<small>Exports to OpenType as `OS/2.sTypoDescender`, and as `hhea.descender` if <i>Font Info › Other Values › Custom hhea linespacing</i> is off. For new fonts, we recommend turning on <i>Font Info › Other values › Prefer typo metrics</i></small>",
    "info_dimensions.spinnerLineGap": "Enter the font’s default Line gap in the **Line gap** field. To keep the line height consistent within a font family, Ascender, Descender and Line gap should be identical in all masters and in all fonts of a family.\n\n<small>The default **line height** of the text in many end-user apps will be sum of the distances from Ascender to baseline, and from baseline to Descender, plus the Line gap. If the value differs between masters, the background of the text field will be yellow.</small>\n\n<small>Exports to OpenType as `OS/2.sLineGap`, and as `hhea.linegap` if <i>Other Values › Custom hhea linespacing</i> is off. For new fonts, we recommend turning on <i>Other values › Prefer typo metrics</i></small>",
    "info_dimensions.spinnerSZB": "**Safe bottom**:  Exports to OpenType as `OS/2.usWinDescent`\n\nIf <i>Other values › Prefer typo metrics</i> is off, **Safe top** and **Safe bottom** determine the default line height of the font in nearly all apps on Microsoft Windows. If <i>Prefer typo metrics</i> in on (recommended), the line height in modern Windows apps is based on Ascender, Descender and Line gap, but old Windows versions may still use Safe top and Safe bottom. Safe bottom should be a negative value if it is below the baseline.\n\n<small>Some older Windows apps will clip (cut off, not render on screen) any portions of glyphs that reach above the Safe top or below Safe bottom, so ideally, you should choose Safe top &amp; bottom so that most of your glyphs will fit between the lines, but at the same so that the distance between Safe top &amp; Safe bottom is the same as the distance between Ascender and Descender plus Line gap</small>",
    "info_dimensions.spinnerSZT": "**Safe top**:  Exports to OpenType as `OS/2.usWinAscent`\n\nIf <i>Other values › Prefer typo metrics</i> is off, **Safe top** and **Safe bottom** determine the default line height of the font in nearly all apps on Microsoft Windows. If <i>Prefer typo metrics</i> in on (recommended), the line height in modern Windows apps is based on Ascender, Descender and Line gap, but old Windows versions may still use Safe top and Safe bottom.\n\n<small>Some older Windows apps will clip (cut off, not render on screen) any portions of glyphs that reach above the Safe top or below Safe bottom, so ideally, you should choose Safe top &amp; bottom so that most of your glyphs will fit between the lines, but at the same so that the distance between Safe top &amp; Safe bottom is the same as the distance between Ascender and Descender plus Line gap</small>",
    "info_dimensions.valueBboxBottom": "**BBox bottom** (bottom of the font bounding box) is the Y coordinate of the deepest glyph in the font\n\nUse it to determine the optimal Safe bottom value. If value is not shown, click the <i>Auto BBox</i> button.",
    "info_dimensions.valueBboxTop": "**BBox top** (top of the font bounding box) is the Y coordinate of the tallest glyph in the font\n\nUse it to determine the optimal Safe top value. If value is not shown, click the <i>Auto BBox</i> button.",
    "info_dimensions.valueUPM": "@dlgchangeupm.valueUpm",
    "info_fontdimensions.Info_FontDimensions": "**Font master dimensions**: design metrics of the current master\n\nSet Font Dimensions (line metrics for horizontal text), grid angle, Tunni line and Smart Corner defaults",
    "info_fontdimensions.autoCapsHeight": "**Auto Caps height**: automatically calculate the font Caps height by measuring the height of key uppercase Latin letters: `H`, `X`",
    "info_fontdimensions.autoCaretOffset": "**Auto Caret Offset in italic fonts**: Automatically calculate the font Caret offset based on the uppercase letter `I`",
    "info_fontdimensions.autoCornerTension": "**Auto Corner tension**: make Corner tension equal to the Curve tension",
    "info_fontdimensions.autoCurvature": "**Auto Curve tension**: automatically calculate Curve tension by measuring the tension of the uppercase letter `O`",
    "info_fontdimensions.autoInktrapLen": "**Auto Ink trap width**: set ink trap length to 1/500 of font UPM",
    "info_fontdimensions.autoItalicAngle": "**Auto Italic angle**: Automatically calculate the font Italic angle by measuring the the uppercase letter `I`",
    "info_fontdimensions.autoUP": "Auto Underline position",
    "info_fontdimensions.autoUT": "Auto Underline thickness",
    "info_fontdimensions.autoXHeight": "**Auto x Height**: automatically calculate the font x-height by measuring the height of key lowercase Latin letters: `x`, `z`",
    "info_fontdimensions.valueCapsHeight": "**Caps height**:  the height of the typical flat uppercase Latin letters in the font: `B`, `H`, `X`\n\nCommonly around 70% of the UPM size (so 700 in a font that has the UPM size of 1000)",
    "info_fontdimensions.valueCaretOffset": "**Caret offset**:  optimizes the horizontal position of the slanted sidebearings around symmetric glyphs, and of the slanted text cursor if the Italic Angle is non-`0`. Exports as `hhea.caretOffset`.\n\nSet it to non-`0` if you’re designing an italic font or a script font. Upright fonts should use `0`\n\nTo space an italic font, auto-calculate, use <i>View › Italic Angle › Apply</i> in Metrics mode, and correct if needed",
    "info_fontdimensions.valueCornerTension": "**Corner tension**:  the curve tension created by Smart Corners\n\n55% is close to a perfect circle or ellipse, 60% is default",
    "info_fontdimensions.valueCurvature": "**Curve tension**:  percentage of how much a curve segment deviates from a straight line. 0%: line, 55%: circle/ellipse, 60%: default, 100%: pointy curve\n\nUsed as default curve segment tension for the <i>Rapid tool</i>, for the <i>Oval tool with tension</i> mode of <i>Ellipse tool</i>, and for the default tension when you double-click a Tunni point",
    "info_fontdimensions.valueInktrapLen": "**Ink trap width**:  distance between ink trap nodes\n\nTo create a simple ink trap, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> a node with the <i>Scissors</i> tool. To create a dynamic curved ink trap, create a Smart Corner and move its control point inside the filled area",
    "info_fontdimensions.valueItalicAngle": "**Italic angle**:  the angle in degrees by which the text cursor in end-user apps will be slanted. Positive values are for right slant, negative for left slant\n\nSet it to non-`0` if you’re designing an italic font or a script font. Upright fonts should use `0`\n\nTo space an italic font, auto-calculate <i>Caret Offset</i>, then use <i>View › Italic Angle › Apply</i> in Metrics mode. Turn on <i>Contour › Coordinates › Follow Italic Angle</i> to “slant” the movements of <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> keys\n\nYou may prefer to set the Italic Angle using the <i>Slope</i> fields",
    "info_fontdimensions.valueSlopeX": "**Slope X**:  optimal length of the *X* leg of the right triangle where the hypotenuse has the **Italic Angle**. Exports as `hhea.caretSlopeRun`.\n\nTo draw italic glyphs on an integer grid with highest chance of placing nodes or handles along the italic angle, use small Slope X & Y values instead of “round” italic angles.\n\n<small>Examples: slope 1/15 corresponds to the angle 3.81°, 1/12 = 4.76°, 1/10 = 5.71°, 1/9 = 6.34°, 1/8 = 7.13°, 1/7 = 8.13°, 1/6 = 9.46°, 1/5 = 11.31°, 2/9 = 12.53°, 1/4 = 14.04°</small>",
    "info_fontdimensions.valueSlopeY": "**Slope Y**:  optimal length of the *Y* leg of the right triangle where the hypotenuse has the **Italic Angle**. Exports as `hhea.caretSlopeRise`.\n\nTo draw italic glyphs on an integer grid with highest chance of placing nodes or handles along the italic angle, use small Slope X & Y values instead of “round” italic angles.\n\n<small>Examples: slope 1/15 corresponds to the angle 3.81°, 1/12 = 4.76°, 1/10 = 5.71°, 1/9 = 6.34°, 1/8 = 7.13°, 1/7 = 8.13°, 1/6 = 9.46°, 1/5 = 11.31°, 2/9 = 12.53°, 1/4 = 14.04°</small>",
    "info_fontdimensions.valueUP": "**Underline position**:  position of the center of the underline, used when text is underline in end-user app",
    "info_fontdimensions.valueUT": "**Underline thickness**:  thickness of the underline, used when text is underline in end-user app\n\nBest if not thicker than the font’s horizontal stems",
    "info_fontdimensions.valueXHeight": "**x Height**:  the height of the typical flat lowercase letters in the font: `x`, `y`, `z`\n\nCommonly between 50 and 60% of the UPM size",
    "info_guides.Info_Guides": "**Guides**: font guides in the current master\n\nEdit positions numerically or with expressions, Width and Tags",
    "info_guides.buttonAdd": "#### Add horizontal font guide\n\n To add a vertical font guide, turn on <i>View › Rulers</i> in Glyph window, and <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-drag from the vertical ruler.",
    "info_guides.buttonClear": "**Reset**:  Remove all font guides in this master",
    "info_guides.buttonRemove": "**Remove guide**:  Removes selected font guide",
    "info_instances.Info_Instances": "**Predefined instances** produced by variation\n\nDefine if you have multiple masters, and plan to export instance fonts or variable fonts",
    "info_instances.autoSGN": "Automatically builds the Style group name based on the Family name and Style name",
    "info_instances.buttonAdd": "**Add predefined instance** with default axis locations\n\n<small>To add the current dynamic instance as a predefined instance, switch the <i>Variations</i> panel to <i>Variations List</i>, choose <i>Instances</i> at the bottom of the panel, and click <i>+</i></small>",
    "info_instances.buttonExpand": "Show / hide additional properties for static instances: Family name, Style group and Style link\n\nSpecify Style group and Style link to build Windows legacy 4-font families (OpenType`name 1–2` &amp; `OS/2.fsSelection` if you export static instances)\n\nSpecify Family name to use a Typographic family name different from <i>› Names › Family name</i> (OpenType `name 16` if you export static instances)\n\nThose properties have no influence on predefined instances in variable OpenType fonts",
    "info_instances.buttonFillAxes": "Removes predefined instances, and builds instance definition for every combination of an **axis instance** per each axis. Builds style names from particle names in axis order.\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: builds **style groups** with optimized names and with style-linking<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: builds style groups with names from full names, and without style-linking\n\n<small>First, define axis instances in <i>› Axes</i>. Each axis instance maps a particle name to a design location on this axis (in design coordinates). Build them with <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> or manually using the format `ParticleName=location1, \"Particle Name\"=location2`. Wrap the name in `\"` if it uses spaces. Wrap it in `()` to skip it when building predefined instance names.</small>",
    "info_instances.buttonFillGraph": "Removes all predefined instances, and builds one instance definition for every combination of an **axis graph point** per each axis. Builds style names in axis order (may need editing).\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: builds **style groups** with optimized names and with style-linking<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: builds style groups with names from full names, and without style-linking\n\n<small>First, click the <i>Axis Graph</i> button next to each axis in <i>› Axes</i>, and add graph points in the Axis Graph dialog.</small>",
    "info_instances.buttonFillMasters": "Removes predefined instances, and builds one instance definition per each **font master**\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: builds **style groups** with optimized names and with style-linking<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: builds style groups with names from full names, and without style-linking",
    "info_instances.buttonRemove": "Remove selected instances",
    "info_instances.buttonReset": "Removes all predefined instances",
    "info_instances.locationMaster": "**Instance location string**:  specifies the location (interpolation value) of the instance on each defined axis",
    "info_instances.selectorSLN": "**Style link**:  the role that a font plays in a Style group (a Windows legacy 4-font family). Can be Regular, Italic, Bold or Bold Italic\n\nExports to static OpenType instances as `name 2`, `OS/2.fsSelection` &amp; `head.macStyle`. Not used in variable OpenType fonts",
    "info_instances.styleWeight": "**Weight class**:  Standardized weight class of the font\n\nChoose a value to set the numeric weight class which exports to static OpenType instances as `OS/2.usWeightClass`. To use in variable OpenType fonts: go to <i>› Axes</i>, open the `weight` axis graph and choose <i>Add points › From Instances</i>. This will build an `avar` mapping.",
    "info_instances.styleWidth": "**Width class**:  Standardized width class of the font\n\nExports to static OpenType instances as `OS/2.usWidthClass`. To use in variable OpenType fonts: go to <i>› Axes</i>, open the `width` axis graph and choose <i>Add points › From Instances</i>. This will build an `avar` mapping.",
    "info_instances.tree": "#### Predefined font instances\n\nDefinitions of instances that FontLab will export if export into a static font format in the <i>Instances</i> mode, and that FontLab will include in the `fvar` table of a Variable font.\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> entry or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> multiple: edit properties in the section below.\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> column: sort instances visually. ‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> the **blue dot** in 1st column: include / exclude the instance when FontLab exports instances, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: include / exclude all.\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> <i>Style</i>: change the style name. ‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> variation location: change interpolation value in design coordinates. Static instances may extrapolate if location is outside master locations but within the <i>› Axes › Axis Graph</i> design range.",
    "info_instances.valueSGN": "**Style group name**:  name of the Windows legacy 4-font family that old Windows apps display as “families”. No more than 4 instances may have the same Style group name, and they must differ in Style link\n\nExports as static OpenType instance `name 1`, not used in variable OpenType fonts",
    "info_instances.valueTFN": "**Family name**:  Typographic family name if different from <i>› Names › Family name</i>\n\nExports as static instance OpenType `name 16`, not used in variable OpenType fonts",
    "info_instances.valueTSN": "**Typographic style name**:  the name that appears in font menu dropdowns when the end-user chooses a family\n\nExports to static OpenType instances as `name 17`, to variable OpenType fonts as `fvar` instance name",
    "info_instances.valueWeight": "**Weight class**:  Numeric representation of the standardized weight class of the font\n\nExports to static OpenType instances as `OS/2.usWeightClass`. To use in variable OpenType fonts: go to <i>› Axes</i>, open the `weight` axis graph and choose <i>Add points › From Instances</i>. This will build an `avar` mapping.",
    "info_lib.Info_Lib": "‣ **Font Lib** holds data specific to the font as a whole; corresponds to the DesignSpace lib element.\n\n‣ **Master Lib** holds data specific to a font master, including data specific to the main font master; corresponds to the UFO lib.plist file\n\nIn FontLab, a lib is expressed as a JSON structure",
    "info_masters.Info_Masters": "**Font masters**: master designs between which variation happens\n\nAdd, remove and switch masters in the Font Info bottom-left list. Rename master, edit master properties and set default master in this page.",
    "info_masters.locationMaster": "**Variation location string**: location (interpolation value) of the master on each defined axis. Change it to move the master within the design space\n\n<small>Use the same notation prefixed with a `:` as a layer name in a glyph to define an intermediate glyph master layer that does not have a corresponding font master</small>",
    "info_masters.styleOther": "@info_names.editNamesOther",
    "info_masters.styleSlope": "@info_names.styleSlope",
    "info_masters.styleWeight": "@info_names.styleWeight",
    "info_masters.styleWidth": "@info_names.styleWidth",
    "info_masters.tree": "#### Variation properties of font masters\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> an entry to edit the variation properties of the master in the section below.\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> the **circle** in the first column to make the master **main master**. <small>When FontLab exports instances or a variable font: ‣ It uses the kerning classes of the main master, matches kerning in other masters (reconfigures the kerning so it’s based on the main master’s kerning classes). ‣ It also uses glyph hints defined in the main master to build hints in other masters</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> the name to rename master. ‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> variation location to relocate the master within the axis design range. ‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> blue <i>AAA</i> icon to make master non-variable (master does not participate in interpolation), click again to make it variable.\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> the columns or <span style=\"font-style: normal; white-space: nowrap;\"><b>drag-drop</b></span> masters to reorder them. <small>This affects the order in which masters are shown in the <i>Layers &amp; Masters</i> panel and <i>Variations</i> panel. Also affects the order of layer switching with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>,</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>.</b></span></small>",
    "info_masters.valueWeight": "@info_names.valueWeight",
    "info_names.Info_Names": "**Font and family names**, font style attributes.\n\nSet Family name per font, Style and other names per master. Set `OS/2` weight, width and slope per font or master.\n\nUsed when you export **current layer** or **masters**, and as the **default** settings in a Variable font\n\nFor **instances**, set these, and optionally override Family name, in the <i>Instances</i> page of Font Info",
    "info_names.autoMasterName": "Build current master name from Style name (removing spaces), and rename the current master\n\nYou can also rename masters in <i>› Masters</i>",
    "info_names.autoTSN": "**Build Style name**: first set the <i>Weight</i>, <i>Width</i>, <i>Slope</i> class, and optionally enter a style name suffix into <i>Other</i>, then click this button to generate the <i>Typographic Style Name</i>",
    "info_names.buttonBuildNames": "Enter the <i>Family name</i>, build or enter <i>Style name</i>, then click this button to build Full name, PostScript and Style group name",
    "info_names.checkMonospaced": "Turn this on if you want your font to be recognized as monospace by the operating system and the end-user apps that use the font\n\nThis does not make the width of all glyphs equal — you need to do it yourself\n\nExports as appropriate OpenType fields",
    "info_names.editNamesFFN": "**Full font name**: <i>Family name</i> followed by one space, followed by <i>Style name</i>\n\nFor example, if Family name is `Garamond Pro` and Style name is `Bold Italic`, Full font name must be `Garamond Pro Bold Italic`",
    "info_names.editNamesOther": "**Other style attributes**: text field where you can add a suffix that will be added to the Style name when you auto-calc it\n\nTypically includes a style descriptor other than weight, width or slope, for example `Text`, `Shadow`, `SC` or `Swash`",
    "info_names.editNamesPSN": "**PostScript name**: family and style name separated by hyphen, no spaces\n\nMust be max. 27 characters in length and use only plain English (ASCII) uppercase &amp; lowercase letters and digits\n\nUse one **hyphen** to separate the family portion of the name from the style portion, like this: `GaramondPro-BoldItalic`\n\nMay not contain spaces or other non-alphabetic characters",
    "info_names.editNamesSGN": "**Style group name**: name of the Windows legacy 4-font family that old Windows apps display as “families”. No more than 4 fonts may have the same Style group name, and they must differ in Style link\n\nShould use only plain English uppercase &amp; lowercase letters, digits and spaces\n\nExports as `name 1` if you export Current layer or Masters, as the main Style group name if you export a variable OpenType font\n\nUse <i>› Instances › Style group</i> to set the Style group name for static predefined instances",
    "info_names.editNamesTFN": "**Family name**: Typographic family name\n\nShould be identical across all fonts that are listed in end-user apps as the same family. Use only plain English (ASCII) uppercase &amp; lowercase letters, digits and spaces. Exports as `name 16` to static fonts and to Variable fonts.\n\n<small>This name is always used in Variable fonts. Static instances can have their own Family names in <i>Font Info › Instances › Family</i>.</small>",
    "info_names.editNamesTSN": "**Style name**: Typographic style name. Typically a combination of <i>Weight</i>, <i>Width</i>, <i>Slope</i> and <i>Other</i> names. Must be unique for each fonts that shares the same Family name. Use only plain English uppercase &amp; lowercase letters, digits and spaces\n\nExports as `name 17` if you export Current layer or Masters, as the main style name if you export a Variable font. Predefined and static instances have their style names in <i>Font Info › Instances › Style</i>.",
    "info_names.selectorSLN": "**Style link** is the role that a font plays in a Style group, a Windows legacy 4-font family. Can be Regular, Italic, Bold or Bold Italic\n\nExports as `name 2`, `OS/2.fsSelection` &amp; `head.macStyle` if you export Current layer or Masters, as the main Style link if you export a variable OpenType font\n\nUse <i>› Instances</i> to set the Style link for static predefined instances",
    "info_names.styleSlope": "**Slope class**: Relative slope class of the font master within the family. If the family does not include separate upright and italic fonts, should always be <i>Plain</i>. Use <i>Italic</i> for fonts that are style-linked italics or other fonts. Do not use <i>Oblique</i>\n\nUse it to auto-calc Style name. To express the font’s true typographic slope, use <i>› Font Dimensions › Italic angle</i> and <i>› Other Values › PANOSE › Slope</i>",
    "info_names.styleWeight": "**Weight class**: Relative weight class of the font master within the family. Should be <i>Regular</i> for the default style of the family, regardless of the true typographic weight\n\nChoose a standardized value to set the numeric weight class\n\nExports as `OS/2.usWeightClass` if you export Current layer or Masters, as the main Weight class if you export a Variable OT font\n\nUse <i>› Instances › Weight class</i> to set it for static predefined instances. Not used in Variable OT instances\n\nUse it to auto-calc Style name. To express the font’s true typographic weight, use <i>› Other Values › PANOSE › Weight</i>",
    "info_names.styleWidth": "**Width class**: Relative width class of the font master within the family. Should be <i>Normal</i> for the default style of the family, regardless of the true typographic width\n\nExports as `OS/2.usWidthClass` if you export Current layer or Masters, as the main Width class if you export a Variable OT font\n\nUse <i>› Instances › Width class</i> to set it for static predefined instances. Not used in Variable OT instances\n\nUse it to auto-calc Style name. To express the font’s true typographic width, use <i>› Other Values › PANOSE › Width</i>",
    "info_names.valueMasterName": "If you work with multiple masters, each font master must have a unique **Master name**.\n\nUse plain English letters and digits, no spaces. The master name appears in the <i>Layers &amp; Masters</i> panel, and layers within a glyph that have the same name as the font master belong to that master and use its axis location for interpolation.\n\nWhen you export font masters, Master name will be used as file name.",
    "info_names.valueWeight": "**Numeric weight class**: Relative weight class of the font master within the family, expressed numerically. Should be `400` for the default style of the family, regardless of the true typographic weight\n\nChoose a standardized value from the list for common values. Customize the numeric value if you have more than 9 weights in the family\n\nExports as `OS/2.usWeightClass` if you export Current layer or Masters, as the main Weight class if you export a Variable OT font\n\nUse <i>› Instances › Weight class</i> to set it for static predefined instances. Not used in Variable OT instances\n\nUse it to auto-calc Style name. To express the font’s true typographic weight, use <i>› Other Values › PANOSE › Weight</i>",
    "info_note.Info_Note": "**Note**: internal designer comments",
    "info_other.Info_Other": "**Other** technical font or master properties\n\nChoose TrueType Hinting engine and tweak screen smoothing",
    "info_parameters.Info_Parameters": "**Parameters**: named numeric variables for use in expressions",
    "info_sections.font": "**Font properties**: Settings that affect the entire font / all masters",
    "info_sections.master": "**Master properties**: Settings that affect the current master\n\nFamily name, Units Per eM and some hinting settings affect the entire font.",
    "info_stems.Info_Stems": "**Stems**: thickness of strokes to be regularized by hinting",
    "info_table.Info_Table": "**Overview**: tabular view of properties of all masters\n\nEdit, select, copy to spreadsheets and back",
    "info_unicode.Info_Unicode": "**Unicode ranges** that the font supports\n\nUsed in the OpenType `OS/2` table. Will be autogenerated if not defined",
    "info_zones.Info_Zones": "**Zones**: Y-coordinate ranges where hinting vertically aligns points in small font sizes\n\nTop zones on the left, bottom zones on the right",
    "inspector_glyph.autoName": "**Update the glyph name**: FontLab will build a friendly glyph name based on the Unicode codepoint assigned to the glyph",
    "inspector_glyph.autoOTClass": "**Auto Glyph Definition class**: Guess the glyphs’s OT Glyph Definition class, used in Features and the `GDEF` OpenType table.",
    "inspector_glyph.autoTags": "Update tags",
    "inspector_glyph.autoUnicode": "**Update Unicode codepoints based on the glyph name**: If FontLab does not know the glyph name or it’s a glyph name for an alternate glyph, the Unicode codepoint will be blank.",
    "inspector_glyph.autoWidth": "Auto calculate advance width (<span style=\"font-style: normal; white-space: nowrap;\"><b>;</b></span> key)",
    "inspector_glyph.buttonLeft": "**Show 1st kerning class in Classes panel**: Open <i>Window › Panels › Classes</i>, and click here to show this glyph’s 1st kerning class in the Classes panel",
    "inspector_glyph.buttonMasters": "**Copy expressions to masters**: If the advance width or sidebearings in current layer of current glyph or of selected glyphs use **expressions** (linked metrics), <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> to copy these expressions to the corresponding metrics of all other font masters",
    "inspector_glyph.buttonRight": "**Show 2nd kerning class in Classes panel**: Open <i>Window › Panels › Classes</i>, and click here to show this glyph’s 2nd kerning class in the Classes panel",
    "inspector_glyph.buttonTags": "@inspector_glyph.labelTags",
    "inspector_glyph.checkNoexport": "**No export**: When turned ON the glyph receives \"noexport\" glyph tag and will not be exported to the final font",
    "inspector_glyph.colorMark": "**Color flag**: assign a color to the glyph cell to visually differentiate groups of glyphs, sort the Font window or search glyphs\n\nChoose a predefined color, click <i>…</i> to choose other colors. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>-click: set for current layer only. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-click: force set for all layers.\n\nSometimes called “mark”. Not used in final font formats.",
    "inspector_glyph.frameLegend": "@mainwindow.actionGlyphPanel",
    "inspector_glyph.frameTop": "@mainwindow.actionGlyphPanel",
    "inspector_glyph.labelIndex": "@inspector_glyph.valueIndex",
    "inspector_glyph.labelKerningGroups": "Kerning classes",
    "inspector_glyph.labelMark": "#### Color flag: color of the glyph cell\n\nUse color flags to visually differentiate groups of glyphs, sort the Font window or search glyphs. Sometimes called “mark”. Not used in final font formats.",
    "inspector_glyph.labelName": "@inspector_glyph.valueName",
    "inspector_glyph.labelNote": "@inspector_glyph.valueNote",
    "inspector_glyph.labelOTClass": "@inspector_glyph.selectorOTClass",
    "inspector_glyph.labelSidebearings": "**Sidebearings**: Distances between the glyph layer content and the advance width.",
    "inspector_glyph.labelTags": "**Glyph tags**: Custom text labels to use with stems, zones, font guides and features\n\n Do not use spaces inside a tag.\n\nPrefix with `+` to add or with `-` to remove a tag for multiple glyphs.\n\n FontLab also assigns virtual tags for certain glyph properties.",
    "inspector_glyph.labelUnicode": "@inspector_glyph.valueUnicode",
    "inspector_glyph.labelUnicodeName": "@inspector_glyph.valueUnicodeName",
    "inspector_glyph.labelWidth": "@inspector_glyph.valueWidth",
    "inspector_glyph.legendLabelName": "@inspector_glyph.valueName",
    "inspector_glyph.legendLabelUnicode": "@inspector_glyph.valueUnicode",
    "inspector_glyph.legendLabelWidth": "@inspector_glyph.valueWidth",
    "inspector_glyph.legendName": "@inspector_glyph.valueName",
    "inspector_glyph.legendUnicode": "@inspector_glyph.valueUnicode",
    "inspector_glyph.legendWidth": "@inspector_glyph.valueWidth",
    "inspector_glyph.lockLSB": "**Bind or unbind left sidebearing**: When you change the glyph layer content, the sidebearing will remain fixed and the width will change. Use <i>Font › Update Glyphs</i> if you don’t see the change.",
    "inspector_glyph.lockRSB": "**Bind or unbind right sidebearing**: When you change the glyph layer content, the sidebearing will remain fixed and the width will change. Use <i>Font › Update Glyphs</i> if you don’t see the change.",
    "inspector_glyph.selectorLeftGroup": "**Set 1st kerning class**: Click to set the 1st kerning class for the current glyph or selected glyphs.\n\nIn the dialog: choose an existing class, or choose a glyph to create a class. All glyphs in the **1st** kerning class should have a **similar right side**. They will be kerned the same if they are first in the pair. Leave the field blank and click <i>OK</i> to remove current / selected glyph(s) from class.\n\n<small>Use <i>Font › Kerning › Generate Kerning Classes</i> to automatically build kerning classes, use <i>Classes panel</i> to review / edit them</small>",
    "inspector_glyph.selectorNoexport": "@inspector_glyph.checkNoexport",
    "inspector_glyph.selectorOTClass": "**OT Glyph Definition Class**: Used in Features and the `GDEF` OpenType table. Choose `Ligature` for ligatures, `Mark` for combining (non-spacing) diacritical marks, `Simple` for normal (base) glyphs.\n\nClick <i>Auto</i> to guess.",
    "inspector_glyph.selectorRightGroup": "**Set 2nd kerning class**: Click to set the 2nd kerning class for the current glyph or selected glyphs.\n\nIn the dialog: choose an existing class, or choose a glyph to create a class. All glyphs in the **2nd** kerning class should have a **similar left side**. They will be kerned the same if they are second in the pair. Leave the field blank and click <i>OK</i> to remove current / selected glyph(s) from class.\n\n<small>Use <i>Font › Kerning › Generate Kerning Classes</i> to automatically build kerning classes, use <i>Classes panel</i> to review / edit them</small>",
    "inspector_glyph.staticLSB": "**Left sidebearing**: ‣ Top: absolute<br/>‣ Bottom: based on Measurement line\n\nTurn on <i>View › Measurement Line</i> and move the line to see / edit Metrics measured at its intersection with the glyph layer content.",
    "inspector_glyph.staticRSB": "**Right sidebearing**: ‣ Top: absolute<br/>‣ Bottom: based on Measurement line\n\nTurn on <i>View › Measurement Line</i> and move the line to see / edit Metrics measured at its intersection with the glyph layer content.",
    "inspector_glyph.staticWidth": "**Advance width**: ‣ Top: absolute<br/>‣ Bottom: based on Measurement line\n\nTurn on <i>View › Measurement Line</i> to and move the line to see / edit Metrics measured at its intersection with the glyph content.",
    "inspector_glyph.valueIndex": "**Glyph index, or GID**: The location of the glyph within the final font, determines the physical glyph order\n\nSwitch Font window to Index filter and drag glyphs to reorder or use <i>Font › Sort Glyphs</i>. Glyph with index 0 should be `.notdef`.",
    "inspector_glyph.valueLSB": "@bar_metrics.valueLSB",
    "inspector_glyph.valueMark": "Color flag: numeric representation.\n\nEnter the hue value 1–360 for the color to be used as flag.",
    "inspector_glyph.valueName": "**Glyph name**: Unique text identifier for the glyph within the font\n\nFollow published glyph naming conventions. Use `uniXXXX` or `uXXXXX` or known friendly synonyms, e.g. `Adieresis` for the letter “Ä”.\n\nStart with a plain English letter (`A-Za-z`). Only use those letters, digits (`0-9`), hyphens (`-`). Use underscore (`_`) in ligatures e.g. `f_l`. Use period (`.`) to add a suffix for OpenType variants e.g. `Adieresis.ss01`. Do not use spaces.\n\nClick <i>Update</i> to build name based on the Unicode codepoint.",
    "inspector_glyph.valueNote": "**Glyph note**: Custom text for your own purpose\n\nAppears in Font window glyph cells and in the top-right corner of Glyph window. You can use Markdown.",
    "inspector_glyph.valueRSB": "@bar_metrics.valueRSB",
    "inspector_glyph.valueTags": "**Edit glyph tags**: Enter comma-separated tags. Do not use spaces inside a tag.\n\nPrefix with `+` to add or with `-` to remove a tag for multiple glyphs.",
    "inspector_glyph.valueUnicode": "**Unicode codepoint(s) of the glyph**: Enter the hexadecimal number (consisting of `0-9` and `A-F`) if the glyph is the default representation of a Unicode character (e.g. `0041` for Latin capital letter A).\n\nClick <i>Update</i> to build based on the glyph name. If the glyph represents one character or another character, enter comma-separated codepoints. If the glyph represents a variant or a series of character, leave blank and use OpenType features.",
    "inspector_glyph.valueUnicodeName": "**Unicode name**: Official name of the first Unicode codepoint of the glyph, as registered by the Unicode Consortium. For your reference.",
    "inspector_glyph.valueWidth": "@bar_metrics.valueWidth",
    "inspector_guide.autoTags": "Update tags",
    "inspector_guide.buttonGuide": "Convert guide to hint, hint to guide or zone, zone to guide",
    "inspector_guide.buttonMeter": "Generates auto-markers on the guide",
    "inspector_guide.colorSelector": "Change the color for guide / hint / alignment zone",
    "inspector_guide.frameLegend": "@mainwindow.actionGuidesPanel",
    "inspector_guide.frameTop": "@mainwindow.actionGuidesPanel",
    "inspector_guide.isHorizontal": "Makes the guide horizontal",
    "inspector_guide.isLocked": "Lock / unlock the selected guide / hint / alignment zone. The locked items can be renamed",
    "inspector_guide.isShort": "Converts the guide to short guide",
    "inspector_guide.isVector": "Makes the vector guide. Vectors can be slanted",
    "inspector_guide.isVertical": "Makes the guide vertical",
    "inspector_guide.labelTitle": "G: glyph guide, F: font guide, E: element guide, H: hint, Z: alignment zone, D: font dimension line",
    "inspector_guide.panel": "@mainwindow.actionGuidesPanel",
    "inspector_guide.valueAngle": "Change angle of the vector guide in degrees",
    "inspector_guide.valueLength": "Change length of the vector guide",
    "inspector_guide.valueLocation": "Expression can be used to calculate the position of the selected guideline based on other guides, anchors, parameters",
    "inspector_guide.valueMarks": "Edit positions of the current guideline markers here",
    "inspector_guide.valueName": "Name of the guide / hint / alignment zone",
    "inspector_guide.valuePosition1": "The position of the guide, hint, zone or the horizontal position of the origin point of the vector guide",
    "inspector_guide.valuePosition2": "The vertical position of the origin point of the vector guide",
    "inspector_guide.valueTags": "Enter font guideline tags separated by comma here",
    "inspector_guide.valueWidth": "Thickness of the guide / hint / alignment zone",
    "inspector_layers.buttonClearRecipe": "#### Edit / reset recipe for auto layer\n\n ‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> if <i>Recipe</i> is on gray: replaces the built-in recipe in current auto layer with custom recipe<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> if <i>Recipe</i> is on white: replaces the custom recipe in current auto layer with the built-in recipe<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: replaces recipe in **all** masters of current glyph",
    "inspector_layers.buttonClone": "**Duplicate layer**: Adds a copy of the current glyph layer with a numerical suffix",
    "inspector_layers.buttonExpand": "Show / hide additional properties including layer preview opacity",
    "inspector_layers.buttonLock": "**Lock / unlock layer**: <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> in this column next to a layer to **lock** or **unlock** the layer in all glyphs. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> this button to lock / unlock all layers.\n\nWhen a layer is **locked** (has lock icon), you cannot select or edit its contents, actions and operations from the menus that change the contents will have no effect. Layer switching with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>,</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>.</b></span> skips locked layers.\n\nHowever, you can still change metrics in locked layers, and change kerning in font masters that have locked layers.",
    "inspector_layers.buttonPanel": "**Show / hide layer properties**: Open / close bottom panel section.\n\n<small>Click to open, then edit the layer **name** (or 2×click name in the list), change **auto layer** status (content is automatically generated from components vs. manually edited), add a custom auto layer recipe.<br/>If properties section is open, click **v** to edit more properties</small>",
    "inspector_layers.buttonService": "**Set / unset Service layer**: <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> in this column next to a layer to make it a **service** layer in all glyphs, or to make it a normal layer. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> this button to toggle service status of all layers\n\nWhen a layer is **service** (has gear icon), it does not appear in previews, does not export and does not participate in variation. Layer switching with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>,</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>.</b></span> skips service layers\n\n<small>Use service layers to place contours or images that you want to use as visual references during design but which should not end up in the final font. The most common service layers are <i>Mask</i> layers that have their dedicated keyboard shortcuts, and are associated with each master. Create additional service layers that appear in the background of all masters. Turn on nodes and/or handles in <i>Preferences › Glyph window › Inactive</i> to see them if a Mask or service layer is <i>Wireframe</i></small>",
    "inspector_layers.buttonShow": "**Make layer visible / invisible**: <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the eye in this column next to a layer to make the layer (in all glyphs) **visible** or **invisible**. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: make all layers visible / invisible. Controls how a normal (non-service, non-wireframe) layer is rendered when it is **not current**\n\n<small>‣ **Current** layer (dot in the column): always rendered using <i>View</i> settings in Glyph window editing modes. Fully **filled** in previews (Preview panel, Font window cells, inactive glyphs in Glyph window, Text mode etc.) if not Wireframe or Service<br/>‣ **Invisible** non-current (closed eye): **not rendered** in Glyph window editing modes and in previews<br/>‣ **Visible** non-current (open eye), if depending on <i>Preferences › Variations › Show inactive layers as wireframes</i> ‣ is **off**: **filled** in Glyph window editing modes and previews, best for color design ‣ if **on**: rendered as **wireframe** in Glyph window editing modes (use <i>Preferences › Glyph window › Inactive</i> to show nodes / handles), **not rendered** in previews, best for variable design<br/>Visible layers with **Wireframe** status render as wireframe in previews. Visible **Service** layers render in Glyph window but not in previews</small>",
    "inspector_layers.buttonShowMask": "**Show Mask layers**: Show / hide the mask layers **in the panel’s layers list**. Does not change the content of the Mask layers, or their visibility in the Glyph window",
    "inspector_layers.buttonWireframe": "**Set / unset Wireframe layer**: <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> in the column next to a layer to make it a **wireframe** layer in all glyphs, or to make it a filled layer. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> this button to toggle wireframe status of all layers\n\nWhen a layer is **wireframe** (has frame icon) and it is **visible**, then in Glyph window editing modes, and in previews (Preview panel, Font window cells, inactive glyphs in Glyph window, Text mode etc.) is it not filled but instead, its **outline** is rendered using the **layer preview color**\n\n<small>If <i>Preferences › Variations › Show inactive layers as wireframes</i> is on, visible non-current non-wireframe layers are rendered like wireframe layers</small>",
    "inspector_layers.buttonWireframeColor": "#### Layer preview color\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> next to a layer: set this layer’s **preview color** in all glyphs (then click <i>…</i> for more colors)\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> this: assign unique preview colors to all layers\n\n<small>Glyph window uses this color for the wireframe outlines (if a layer is visible but not active), and for the window background or color bar if <i>Preferences › Variations › Preview master color</i> is on. This color does not affect export.</small>",
    "inspector_layers.checkAuto": "#### Auto layer toggle\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: makes the current layer an **auto layer** or a manual layer<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: toggles auto layer status in all master layers of this glyph, and copies the recipe to all master layers\n\n<small>‣ When you turn Auto layer **on**: FontLab replaces all previously existing content of that layer with components placed according to a built-in or custom recipe. When you modify the source glyphs of these components, the auto layer updates ‣ automatically if <i>Font › Live Update › Live Auto Layers</i> is on, or ‣ when you choose <i>Font › Update Glyphs</i> if <i>Live Auto Layers</i> is off. Auto layers behave as if they’re locked: you cannot edit their contents except by editing the recipe<br/>‣ When you turn Auto layer **off**: the layer keeps the content placed by the auto layer recipe but becomes “manual” so you can edit it</small>",
    "inspector_layers.designAdd": "**Add layer**: Opens the dialog box allowing to add new glyph layers",
    "inspector_layers.designMatch": "@mainwindow.actionPrepolate_Masters",
    "inspector_layers.designMerge": "**Merge visible layers**: Converts all layers marked visible in the layers list into a single layer, placing their content on top of each other.",
    "inspector_layers.designRemove": "**Remove layer**: Deletes the current layer in current glyph, or also same-named layers in glyphs selected in Font window, or in all glyphs, and optionally also deletes the corresponding font master",
    "inspector_layers.frameLegend": "@inspector_layers.frameTop",
    "inspector_layers.frameTop": "@mainwindow.actionLayersPanel",
    "inspector_layers.labelLayerName": "Click to open the layers list as a popup where you can switch the current layer and change some layer properties. Expand the panel to see more.",
    "inspector_layers.labelOpacity": "@inspector_layers.valueOpacity",
    "inspector_layers.sliderOpacity": "**Opacity slider**: Drag the slider to change how transparent the layer’s fill is when the layer is rendered in the Glyph window or previews. Does not affect export.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "inspector_layers.treeWidget": "#### Layers in the current glyph\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> name: switch current layer in all glyphs. <span style=\"font-style: normal; white-space: nowrap;\"><b>Drag-drop</b></span>: reorder layers (also reorders font masters). To rename a layer: <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> name, enter a new name <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>, choose the scope of renaming.\n\n<small>See / change properties for layers with the same name in all glyphs: <i>Visibility</i>, current glyph layer thumbnail, <i>Name</i> of the layer (**bold** if corresponds to a font master, gray if Service, blue if Mask), number of elements in current glyph layer, the font-wide layer <i>Lock</i>, <i>Service</i> and <i>Wireframe</i> status, and the layer’s preview color.</small>\n\n<small>**Background color** shows how a master layer **matches** with current layer; ‣ **green**: full match, ‣ **red**: mismatch, ‣ **yellow**: auto-match with <i>Font Info › Axes</i> settings</small>",
    "inspector_layers.valueName": "**Layer name**: Layers that have the same name in different glyphs form one **font layer** (not all glyphs must have the same set of layers)\n\nWhen you change the layer name and press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span> or leave this field, choose to rename:<br/>‣ the layer in the current <i>Glyph</i> only<br/>‣ same-named layers in Font window <i>Selected Glyphs</i><br/>‣ same-named layers in <i>All Glyphs</i><br/>‣ same-named layers in all glyphs, and to rename the corresponding <i>Font Master</i>\n\n<small>If you have a font master but no corresponding layer in a glyph, add a glyph layer or rename an existing glyph layer using the same name as the font master</small>",
    "inspector_layers.valueOpacity": "**Layer preview opacity**: Set how transparent the layer’s fill is when the layer is rendered in the Glyph window or previews (0%: fully transparent, 100%: fully solid / opaque). Does not affect export.",
    "inspector_layers.valueRecipe": "#### Recipe for auto layer\n\n Recipe to build the content of the current auto layer\n\n‣ if on **gray**, auto layer uses built-in recipe; <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>Edit / Reset recipe</i>: replace the with a custom recipe, then edit and press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>; <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: also copy to all masters<br/>‣ if on **white**, auto layer uses custom recipe; <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>Edit / Reset recipe</i> to replace with built-in recipe; <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: also replace in all masters\n\n**Red** text if some components are missing\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "inspector_node.autoName": "**Update name**: Automatically names or renames the selected node based on its order in the contour",
    "inspector_node.body": "@mainwindow.actionNodesPanel",
    "inspector_node.buttonBalance": "**Balance**: Makes “unbalanced” handles (BCPs) on a contour balanced to contribute equally to each curve segment",
    "inspector_node.buttonBreak": "**Break**: : Breaks the contour, makes open contour with two overlapping nodes",
    "inspector_node.buttonCleanup": "**Clean Up**: Attempts to remove unnecessary nodes from outlines. Like <i>Simplify</i> it does that by approximating a segment of the contour with a curve but it does not add new nodes",
    "inspector_node.buttonDisconnect": "@mainwindow.actionNodeUnlink",
    "inspector_node.buttonExtremes": "**Add nodes at extremes**: Automatically inserts nodes at the extreme points of curves",
    "inspector_node.buttonHarmonize": "**Harmonize**: Makes PostScript curves ultra-smooth, or mathematically speaking, G2 curvature continuous. This means that not only will the angle (direction) of the handles on both sides of any node be the same, but also the curvature",
    "inspector_node.buttonJoin": "**Join**: Joins two overlapping nodes in one node, or joins two selected nodes with a line",
    "inspector_node.buttonMerge": "**Make overlap**: Analyzes selection within a glyph, and tries to detach glyph stems or other outline elements from one another",
    "inspector_node.buttonNext": "**Next node**: Selects the next node and shows its properties",
    "inspector_node.buttonPrevious": "**Previous node**: Selects the previous node and shows its properties",
    "inspector_node.buttonRelative": "**Handle position**: Shows the relative position of the selected Bézier Control Point (BCP) from the on-curve point where it originates. When off shows absolute position",
    "inspector_node.buttonRemoveOverlap": "@mainwindow.actionMerge_Outlines",
    "inspector_node.buttonSimplify": "**Simplify**: Removes unnecessary nodes and adds new nodes to the extrema, where required. Does that by approximating a segment of the contour with a curve",
    "inspector_node.buttonStartPoint": "**Set start point**: Makes the selected node a start point – the first node of the contour. If nothing was selected, relocates the start point to the “optimal” node in each contour of the current glyph layer.\n\nFontLab will chose the sharp node point at the end of a straight vector closest to the origin point (0,0) as the “optimal” node, or if one is not found, the sharp node closest to the origin, or otherwise the any node closest to the origin",
    "inspector_node.buttonTunni": "**Edit Tunni lines**: Activates Tunni lines editing for the selected handles or all handles if no handles were selected",
    "inspector_node.frameLegend": "@mainwindow.actionNodesPanel",
    "inspector_node.isCorner": "**Corner**: Changes the type of the selected node to corner",
    "inspector_node.isG2": "**Genius**: Changes the type of the selected node to genius. Genius node is a type of smart, PostScript node that always retains G2 continuity or ultra-smoothness",
    "inspector_node.isInterpolatedH": "**X servant**: Changes the type of the selected node to X-servant. Servant nodes are moving together with their neighbour nodes",
    "inspector_node.isInterpolatedV": "**Y servant**: Changes the type of the selected node to Y-servant. Servant nodes are moving together with their neighbour nodes",
    "inspector_node.isSmartCorner": "**Smart corner**: Converts the selected corner (not smooth) node into a Smart corner. To edit the radius of the Smart corner, type the new value in the next field",
    "inspector_node.isSmooth": "**Smooth**: Changes the type of the selected node to smooth",
    "inspector_node.labelTitle": "If more than 1 point are selected shows the number of selected points (including handles)",
    "inspector_node.valueName": "**Node name**: Usually nodes do not have names, but you may need to name nodes sometimes. To auto-generate the name for a selected node, <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the <span style=\"font-style: normal; white-space: nowrap;\"><b>↻</b></span> to the right of the field. A name will be assigned to the node based on its order in the contour",
    "inspector_node.valuePositionX": "**X coordinate**: To move the selected node horizontally, change its X coordinate in the glyph space",
    "inspector_node.valuePositionY": "**Y coordinate**: To move the selected node vertically, change its Y coordinate in the glyph space",
    "inspector_node.valueSmartCornerRadius": "**Smart corner radius**: If you would like to make a rounded corner, enter a positive value, and for an ink trap, the value will be negative",
    "inspector_node.widgetActions": "@mainwindow.actionNodesPanel",
    "kerningpanel.buttonContext": "**Show in context**: Adds context glyphs to the local pair preview",
    "kerningpanel.colorMark": "**Color flag**: Assign a color flag to the selected kerning pair, choose one of the standard colors or pick a custom color from the color flag menu. If a kerning pair comprises kerning classes that have already been assigned colors, those colors will be shown in this panel. In case you mark such a kerning class in this panel, all three colors will be shown",
    "kerningpanel.frameBottom": "@mainwindow.actionKerningPanel",
    "kerningpanel.frameLegend": "@mainwindow.actionKerningPanel",
    "kerningpanel.frameTop": "@mainwindow.actionKerningPanel",
    "kerningpanel.kerningMore": "**Kerning panel <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> menu**\n\n<small>‣ <i>Copy Kerning From</i> imports kerning from another font / master<br/>‣ <i>Remove All Pairs</i> removes all kerning pairs from the font<br/>‣ <i>Flatten Class Kerning</i> expands all class-based pairs into a longer list of “flat” glyph-to-glyph pairs<br/>‣ <i>Compress to Class Kerning</i> reverses Flatten: for each combination of defined classes, converts flat pairs into class pairs only if their value is identical; makes exceptions if value is different; _keeps unkerned combinations unkerned_<br/>‣ <i>Extend Class Kerning</i> upgrades flat kerning into class kerning: for each combination of defined classes, picks the most common value as class pair &amp; _adds unkerned combinations to the class pair_; makes exceptions if value is different<br/>‣ <i>Adjust Pairs</i> changes kerning value for selected or all pairs<br/>‣ <i>Remove Pairs</i> selectively removes pairs with small value or from mixed scripts<br/>‣ <i>Match Kerning</i> reconfigures each master’s kerning to be based on the main master’s classes<br/>‣ <i>Show All Combinations</i> shows in the Glyph window a combination of all 1st class glyphs with all 2nd class glyphs</small>",
    "kerningpanel.kerningPreview": "**Show pair preview**: Open / close the preview pane with the current kerning pair. If the kerning pair is comprised of kerning classes, the preview shows all members of the class",
    "kerningpanel.kerningRemove": "**Remove pair(s)**: Deletes selected kerning pair(s) from the font",
    "kerningpanel.pairList": "#### Kerning pairs\n\nList of kerning pairs defined in the current font. <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> or <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span>: selects kerning pair, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span> selects multiple adjacent pairs. <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span>-click: selects non-adjacent pairs. Shows selected pairs in an open Glyph window\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>←</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span> change value of selected pair(s), <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: by 10, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span>: by 100. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> value or select pair &amp; <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span> to edit value in list\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>click</b></span> shows combinations of all 1st class glyphs with key 2nd class glyph. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: key 1st class glyph with all 2nd class glyphs. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b>click</b></span> (or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> the small gray rectangle): combinations of both classes",
    "kerningpanel.preview": "**Show pair preview**: The preview pane with the current kerning pair. If the kerning pair is comprised of kerning classes, the preview shows all members of the class",
    "kerningpanel.searchClear": "**Reset filter**: Clears the filter edit box",
    "kerningpanel.searchField": "**Filter**: To search for a kerning pair, type the first letter of one of the glyph names (not class name). To see all the pairs that contain a particular glyph on the left, type the full glyph name followed by a space and then \"*\". Similarly, to see all the pairs that contain a particular glyph on the right, type the \"*\" followed by a space and then the full glyph name. Note that filter searches for glyph names but not class names",
    "kerningpanel.selectorLeft": "<i>All</i> left menu: Show only particular series of pairs.\n\n<i>All</i> shows the full list of pairs; <i>Enc</i> shows pairs that belong to the encoding, codepage, etc. currently selected in the Font window; and, <i>Sel</i> shows only pairs including glyphs that were selected in the Font window",
    "kerningpanel.selectorRight": "<i>All</i> right menu: Show only particular series of pairs.\n\n<i>All</i> shows the full list of pairs; <i>Enc</i> shows pairs that belong to the encoding, codepage, etc. currently selected in the Font window; and, <i>Sel</i> shows only pairs including glyphs that were selected in the Font window",
    "kerningpanel.valuePairCount": "Number of visible / total kerning pairs in the font",
    "locationpanel.buttonAddInstance": "**Add glyph master**: Adds the current dynamic instance as a **glyph master** in current glyph, glyphs selected in the Font window, or all glyphs\n\n<small>Glyph masters are variable glyph layers that have their variation location stored in the name (prefixed with `:`). They don’t have their own font dimensions or kerning (these are always interpolated). Use glyph masters to change interpolation in single glyphs at intermediate locations between font masters</small>",
    "locationpanel.buttonCheckGeometry": "@info_axes.checkCheckGeometry",
    "locationpanel.buttonEditorMatch": "@mainwindow.actionMatch_When_Editing",
    "locationpanel.buttonExport": "#### Add current instance as font master or create as font\n\n‣ <i>Add as Master</i>: adds the current dynamic instance for all glyphs as a new **font master** to the current font<br/>‣<i>Create as Font</i>: creates a new **single-master font** that represents the current dynamic instance",
    "locationpanel.buttonFamily": "#### Variation within static family\n\n‣**On:** If <i>Preferences › Variations › Guess weight and width</i> is also on, treats several opened static (single-master) fonts that have the same <i>Family name</i> but differ in <i>Weight</i>, <i>Width</i> or <i>Slope</i> in <i>Font Info › Names</i> as if they were variable masters\n\n<small>Use map &amp; sliders to view interpolated dynamic instances, create them as new fonts with <i>Add current instance… › Create as Font</i></small>",
    "locationpanel.buttonInstances": "**Instances**: lists predefined font instances. Click an instance to show the predefined instance as dynamic instance",
    "locationpanel.buttonList": "@locationpanel.listInstances",
    "locationpanel.buttonMap": "@locationpanel.map",
    "locationpanel.buttonMasters": "**Masters**: lists font masters. Click a master to switche current font master",
    "locationpanel.buttonResetLocation": "**Reset location**: Views the dynamic instance at the variation location of the default font master",
    "locationpanel.buttonSortContours": "@info_axes.checkSortContours",
    "locationpanel.frameTop": "@mainwindow.actionLocationPanel",
    "locationpanel.instanceAdd": "**Add font instance**: Adds current dynamic instance as a new predefined font instance",
    "locationpanel.instanceRemove": "**Remove font instance**: Deletes selected font instance from the font’s predefined instances",
    "locationpanel.label_2": "@locationpanel.selectorY",
    "locationpanel.label_4": "@locationpanel.selectorX",
    "locationpanel.listInstances": "#### Variations list\n\n‣Click a **button** below: lists font <i>Masters</i> or font <i>Instances</i>. Click an **instance**: shows selected instance as dynamic instance. Click a **master**: switches current font master. **Drag** axis sliders: shows dynamic instance\n\n<small>Use <i>Font Info</i> to relocate font masters and font instances</small>",
    "locationpanel.map": "**Variations map**: Views axes on a 2D plane and as sliders\n\n‣ Drag blue dot or click the plane: view dynamic instance in the <i>Preview</i> panel or Glyph window <i>Text</i> mode. ‣ Click above blue dot: numeric change of the dynamic instance variation location. ‣ Click an orange lozenge to choose font master. ‣ Drag interpolation vector to view a series of current glyph’s instances in Preview panel\n\nIf font has >2 axes: choose axes to be shown in the 2D plane, other axes are listed as sliders\n\n<small>To allow extrapolation: choose <i>Font Info › Axes › Axis graph</i>, change the bottom _min_ &amp; _max_ design coordinates range values, and click <i>OK › Keep › OK</i></small>",
    "locationpanel.selectorX": "Choose font axis to be shown as the **horizontal** axis of the map",
    "locationpanel.selectorY": "Choose font axis to be shown as the **vertical** axis of the map",
    "locationwidget.balanceX": "**X anisotropic tuner**: Turn the dial to **reduce** or **increase** the participation of the **X** coordinate in the interpolation of the dynamic instance along this axis\n\nHas no influence on export of instances or variable fonts. To use the result, add a glyph or font master, or create instance as font",
    "locationwidget.balanceY": "**Y anisotropic tuner**: Turn the dial to **reduce** or **increase** the participation of the **Y** coordinate in the interpolation of the dynamic instance along this axis\n\nHas no influence on export of instances or variable fonts. To use the result, add a glyph or font master, or create instance as font",
    "locationwidget.buttonAddInstance": "**Add axis instance**: Adds selected axis location to <i>Font Info › Axes › Axis Instances</i>",
    "locationwidget.buttonPlay": "**Play / Stop**: Animates the variation along the axis. See results in Preview panel or Glyph window Text mode",
    "locationwidget.label": "Choose an axis instance defined in <i>Font › Axes › Axes Instances</i> to view dynamic instance at its axis location",
    "locationwidget.slider": "Drag slider to choose the location of the dynamic instance on this axis. Make panel wider to reveal X/Y anisotropic tuners\n\n<small>To allow extrapolation: choose <i>Font Info › Axes › Axis graph</i>, change the bottom _min_ &amp; _max_ design coordinates range values, and click <i>OK › Keep › OK</i></small>",
    "locationwidget.value": "**Axis location of dynamic instance**: Enter numeric value within design range min–max\n\n<small>Change range at the bottom of <i>Font Info › Axes › Axis graph</i>, then click <i>OK › Keep › OK</i></small>",
    "locationwidgetcompact.label": "Sets the location of the font master or font instance on this axis to one of the axis instances. Axis instances are named locations on an axis, and are defined in <i>Font Info › Axes</i>",
    "locationwidgetcompact.value": "Sets the location of the font master or font instance on this axis to a numeric value. Value must be in design coordinates, within the range specified for the axis in <i>Font Info › Axes › Design range</i>",
    "lookupspanel.widgetTopActions": "@mainwindow.actionLookupsPanel",
    "lookupspanel.widgetTopLookups": "@mainwindow.actionLookupsPanel",
    "lookupspanel.widgetType": "@mainwindow.actionLookupsPanel",
    "mainwindow.actionAction": "#### Actions\n\nOpens the Actions dialog, where you can transform and modify contours, transform glyph metrics and hints, and add various effects to your contours in the **current layer**, **visible layers** or **all font masters** of the current glyph, all glyphs visible in the window, or all glyphs in the font",
    "mainwindow.actionAddNameSuffix": "#### Rename glyphs: Suffix\n\nAdd a predefined or custom suffix to current glyph or all glyphs selected in Font window, or replace existing suffix.\n\n<small>To duplicate glyphs and add a suffix, use <i>Edit › Duplicate</i> with a Font window selection.</small>",
    "mainwindow.actionAdd_Anchor": "#### Add anchor\n\nEvery time you choose it, FontLab adds an **anchor** with a predefined name in the predefined location of the current layer, one by one, if a given anchor does not exist yet.\n\nIf the Unicode or glyph name of the current glyph classifies it as a mark, adds `_top`, `_bottom`, `_left`, `_right`, `_a5`,... Otherwise, it adds the anchors without the `_` prefix, in that order.\n\n<small>To add an anchor at a specific location, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> with <i>Guides</i> tool. Manage the anchors in <i>Window › Panels › Anchors &amp; Pins</i>.</small>\n\n<small>A mark or component will attach to a base glyph if the mark has an anchor with a name prefixed with `_` e.g. `_top`, and the base glyph has an anchor with the same name without the prefix e.g. `top`.</small>",
    "mainwindow.actionAdd_Component": "#### Add component\n\nOpens the <i>Add Component</i> dialog where you can choose an existing glyph and insert it as a **component** into the current layer or into all font masters of the current glyph or of the glyph selected in Font window.\n\n<small>The component will be positioned at the location of the matching anchors: if your glyph has a `top` anchor and the component source has `_top`, they will snap. You may also specify a position explicitly. Whenever you update the content of the source glyph, its components inserted into other glyphs update automatically.</small>\n\n<small>Use **auto layers** to build glyphs for which both glyph metrics and content update automatically from components.</small>",
    "mainwindow.actionAdd_Glyphs": "#### Add glyphs\n\nOpens the <i>Add Glyphs</i> dialog where you can choose Unicode characters.\n\n<small>Select the characters you want and FontLab creates the default glyphs for them. Then use <i>Edit › Duplicate</i> and choose a predefined suffix to add alternates.</small>",
    "mainwindow.actionAdd_Guide": "#### Add guide\n\nIf you select two points (nodes, handles), adds a diagonal (vector) glyph guide. If <i>Edit › Match when Editing</i> is:\n\n‣ **Off:** the new guide goes through both points in the current layer<br/>‣ **On:** also adds corresponding guides that go through corresponding points in the other matching masters",
    "mainwindow.actionAdd_Horizontal_Hint": "#### Add horizontal hint\n\nIf you select two points (nodes, handles), adds a horizontal hint and links it to both nodes. Alternatively, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> between nodes with <i>Magnet</i> tool.\n\n<small>Add hints automatically with <i>Tools › Autohint</i> or, in many glyphs, with <i>Tools › Actions › Hinting › Autohint</i>. Customize the process in <i>Preferences › Autohinting</i> and in <i>Font Info › Other Values › PostScript Hinting</i></small>",
    "mainwindow.actionAdd_Layer": "#### Add layer or master\n\nOpens the <i>Add Layer</i> dialog where you can create a new layer in the current glyph, selected glyphs in Font window. You can also create a new font master and a corresponding layer in all glyphs.\n\nThe new layer can be blank or can be filled with content from other fonts or layers.",
    "mainwindow.actionAdd_Pin_Point": "#### New pin\n\nEvery time you choose it, FontLab adds a **pin** named `p1`, `p2`... in the center of the current layer, one by one.\n\n<small>To add a pin at a specific location, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> with <i>Guides</i> tool. Manage the pins in <i>Window › Panels › Anchors &amp; Pins</i>.</small>\n\n<small>Pins are  blue circles by default. They have a name and exist inside an element (anchors are outside of elements). You can use pins to position elements using expressions, and to attach elements to each other.</small>",
    "mainwindow.actionAdd_Variation": "#### Add variation\n\n Opens the <i>Add Variations</i> dialog where you can add a new axis and/or master. Choose the source of the new master in the <i>Layers &amp; Masters</i> panel, choose this, type a common master name in <i>Add master</i>, turn on <i>Add axes</i> to also add axes if missing, click <i>OK</i>.\n\nFontLab copies the current master if only one exists, otherwise interpolates/extrapolates the new master.\n\n<small>Use <i>Font Info</i> to edit axes and masters.</small>",
    "mainwindow.actionAdd_Vertical_Hint": "#### Add vertical hint\n\nIf you select two points (nodes, handles), adds a vertical hint and links it to both nodes. Alternatively, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> between nodes with <i>Magnet</i> tool.\n\n<small>Add hints automatically with <i>Tools › Autohint</i> or, in many glyphs, with <i>Tools › Actions › Hinting › Autohint</i>. Customize the process in <i>Preferences › Autohinting</i> and in <i>Font Info › Other Values › PostScript Hinting</i></small>",
    "mainwindow.actionAlign_Points": "#### Align points: Auto\n\n‣ If you select two or more points (nodes, handles), aligns them horizontally or vertically (whichever is closer).\n\n‣ If you select two or more complete contours, aligns these contours.\n\n‣ If you select one contour, centers it within the advance width.",
    "mainwindow.actionAll_Nodes": "#### Show / hide all nodes\n\n‣ **on:** makes all nodes visible<br/>‣ **off:** only shows nodes which are at the <i>Preferences › Distances › Node highlight distance</i> from mouse pointer\n\n<small>Customize appearance in <i>Preferences › Glyph Window › Nodes</i></small>",
    "mainwindow.actionAnchors": "#### Show / hide node links\n\n Show / hide green arrows that link nodes to Power Guides",
    "mainwindow.actionApply_Transformation": "#### Expand transformation\n\nApplies element transformations to the contours, and resets element transformations",
    "mainwindow.actionAuditPanel": "#### FontAudit panel\n\nView FontAudit problems for the current glyph and layer.\n\nThe list shows the problem name and its x,y coordinate in the glyph layer. Click <i>Fix</i> to try fixing the problem automatically.\n\n<small>Turn on <i>View › Show › FontAudit</i> to also view the problems in the Glyph window.</small>",
    "mainwindow.actionBucket": "@toolbarpanel.buttonBucket",
    "mainwindow.actionCanvasView1": "#### Show basic / alternative view\n\nEach Glyph window mode that can show details (<i>Metrics</i>, <i>Kerning</i>, editing) stores two **view sets** that separately remember which view details (items you can turn on/off in the <i>View</i> menu) are visible, and which are hidden.:\n\n‣ **Off:** _Basic view set_ is active<br/>‣ **On:** _Alternative view set_ is active\n\n<small>Press <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>/</b></span> to toggle between the view sets. Customize them separately to easily switch between seeing less or seeing more details.</small>",
    "mainwindow.actionCenter_Glyph_or_Pair": "#### Center glyph or pair\n\nIf multiple glyphs are visible in the Glyph window at the current zoom level, and you switch between the glyphs, the window:<br/>‣ **on**: scrolls so that the current glyph (or kerning pair in <i>Kerning</i> mode) is at the center<br/>‣ **off**: does not scroll if the current glyph / pair fits into the current view",
    "mainwindow.actionClean_Up": "#### Clean up contour\n\nAttempts to remove unnecessary nodes from outlines. Like <i>Simplify</i> it does that by approximating a segment of the contour with a curve but it does not add new nodes",
    "mainwindow.actionColorsPanel": "#### Color panel\n\nApply solid color or gradient, with opacity, to the element fill or stroke.\n\nSpecify colors in a wheel, sliders, a box or numerically. Use named colors. Pick color from your custom image or with the system color picker. Choose from swatches palettes.",
    "mainwindow.actionComponentAttached": "#### Attach / detach component\n\n‣ **On**: Attach the component so it’s automatically positioned (aligned) using corresponding anchors.\n\n<small>An **attached component** automatically snaps to the location determined by the corresponding anchors.<br/>‣ The app searches for mark anchors (prefixed with `_`) in the source glyph of the attached component, and searches for corresponding base anchors (same name, without the prefix) in the source glyphs of other components, or in the current glyph layer.<br/>‣ The position of the attached component is determined by the earliest found correspondence.<br/>‣ To move an attached component manually, detach it.</small>",
    "mainwindow.actionContourHarmonize": "#### Harmonize contour\n\nMakes PostScript curves ultra-smooth, or mathematically speaking, G2 curvature continuous. This means that not only will the angle (direction) of the handles on both sides of any node be the same, but also the curvature",
    "mainwindow.actionContourImprove": "#### Balance contour\n\nMakes “unbalanced” handles (BCPs) on a contour balanced to contribute equally to each curve segment",
    "mainwindow.actionContour_Round": "#### Apply coordinates rounding\n\nRounds fractional coordinates to integers in contours selected in Glyph window or in the current layer in selected Font window cells.\n\nUse <i>Actions › Contour › Apply rounding</i> to round coordinates in many glyphs and layers.\n\n<small>When you export to TrueType-based formats, FontLab will round the coordinates on export.</small>",
    "mainwindow.actionCreate_SCV": "#### Edit Tunni lines\n\nActivates Tunni lines editing for the selected handles or all handles if no handles were selected",
    "mainwindow.actionDecompose": "#### Unlink references / decompose in selection or layer\n\n‣ In Font window, or in Glyph window if there is no selection: replace any element references and components in the current layer of current glyph or selected Font window glyph cells with their content (actual contours), and combine to a single contour element if they have the same appearance (stroke and fill).\n\n‣ In Glyph window if any element references or components are selected: replace them with their content, and combine to a single contour element if they have the same appearance.\n\n<small>If you decompose a component that points to a glyph that has anchors, FontLab copies the anchors into the current glyph if same-named anchors don’t exist in the current glyph layer.</small>",
    "mainwindow.actionDecomposite": "#### Expand filters\n\nApplies element filters (glue, fill, smart brush) to element contours and removes the filter",
    "mainwindow.actionDeep_clone": "#### Unlink element reference\n\n‣ In Font window, or in Glyph window if there is no selection: replace all element references in the current layer of current glyph or selected Font window glyph cells with standalone elements.\n\n‣ In Glyph window if any elements are selected and they are references: replace them with standalone elements.",
    "mainwindow.actionDisconnect_Stems": "#### Create overlaps\n\n Tries to automatically reconstruct some overlaps (e.g. after <i>Remove Overlap</i>) in the current layer of current glyph or glyphs selected in Font window.\n\n<small>To apply to all layers, use <i>Tools › Actions › Contour › Make overlap</i></small>\n\n<small>To reconstruct more overlaps, select two or four sharp nodes and use <i>Contour › Make Overlap</i> or marquee-selection over nodes with <i>Scissors</i> tool. To reconstruct overlaps between two smooth nodes, drag between them with <i>Scissors</i>.</small>",
    "mainwindow.actionDraw": "@toolbarpanel.buttonPencil",
    "mainwindow.actionDrawPen": "@toolbarpanel.buttonPen",
    "mainwindow.actionEcho_Text": "#### Echo text\n\nIf you turn this **on** while in one Glyph window, and you switch to another Glyph or Font window, the first window will automatically show the glyphs that are shown in the active window.",
    "mainwindow.actionEdit": "@toolbarpanel.buttonShapes",
    "mainwindow.actionEditingLayersPanel": "#### View panel\n\nToggle visibility and snapping behavior of various details of the Glyph window. Lock view details to prevent manual editing.\n\nSwitch between two separately customizable view sets: Basic and Alternative.",
    "mainwindow.actionEllipse": "@toolbarpanel.buttonEllipse",
    "mainwindow.actionFeaturesPanel": "#### Features panel\n\nView, manage and edit OpenType feature definitions. Write feature definitions in the industry-standard Adobe FEA syntax. Create features automatically based on your glyph names.",
    "mainwindow.actionFiltersPanel": "#### Image panel\n\nClick a bitmap and apply filters like crop, remove background, sharpen or blur.",
    "mainwindow.actionFlatten_Glyph": "#### Flatten glyph\n\nDecomposes all components, unlinks element references, removes filters, and combines the elements into a single element. Works in all glyph masters.",
    "mainwindow.actionFlatten_Layer": "#### Flatten layer\n\nDecomposes all components, unlinks element references, removes filters, and combines the elements into a single element. Works in the current layer.\n\n<small>To apply to all layers, use <i>Tools › Actions › Basics › Flatten glyph</i></small>",
    "mainwindow.actionFlip_Horizontal": "If <i>Contour</i> tool is active:\n\n**Flip** contour selection or all contours in the element **horizontally**. This modifies the contours.\n\nIf <i>Element</i> tool or a component is active:\n\n#### Live horizontal flip\n\nFlip selected component / element **horizontally** by setting a live negative horizontal scale transformation.\n\n<small>‣ Element scale is “non-destructive” and does not change contours inside the element.<br/>‣ Click <i>Reset scale</i> in <i>Elements</i> panel to unflip scale the element back to 100%: the original size determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "mainwindow.actionFlip_Vertical": "If <i>Contour</i> tool is active:\n\n**Flip** contour selection or all contours in the element **vertically**. This modifies the contours.\n\nIf <i>Element</i> tool or a component is active:\n\n#### Live vertical flip\n\nFlip selected component / element **vertically** by setting a live negative vertical scale transformation.\n\n<small>‣ Element scale is “non-destructive” and does not change contours inside the element.<br/>‣ Click <i>Reset scale</i> in the <i>Elements</i> panel to unflip and scale the element back to 100%: the original size determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "mainwindow.actionFollow_Italic_Angle": "#### Follow italic angle\n\nVertical <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-drag or the <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> keys moves nodes, selections, anchors, components and elements:\n\n‣ **On:** diagonally along the y-axis slanted by <i>Font Info › Font Dimensions › Italic Angle</i><br/>‣ **Off:** vertically",
    "mainwindow.actionFont_Audit": "#### Show / hide FontAudit\n\nVisualizes FontAudit problems in Glyph window: odd points and suspicious curves or technical errors\n\n<small>Open <i>Window › Panels › FontAudit</i> for more detailed problem reports. Use <i>Preferences › FontAudit</i> to turn tests on/off tests and show / hide problem names in Glyph window</small>\n\n<small>To fix problems in the **current layer** of multiple glyphs, select glyphs in Font window, choose <i>Glyph › FontAudit Glyphs</i>, then <i>Glyph › Fix FontAudit Problems</i></small>",
    "mainwindow.actionFont_Browser_Panel": "#### Font Map panel\n\nCompact, dockable alternative to the Font window.\n\nMulti-select fonts in the <i>Fonts</i> panel to compare glyph sets.",
    "mainwindow.actionFont_Info": "#### Font Info\n\nOpens <i>File › Font Info</i> dialog:\n\n‣ change font names, dimensions, creator &amp; legal info<br/>‣ add / remove variation axes, font masters and predefined font instances<br/>‣ change per-master info such as zones, stems and font guides<br/>‣ copy-paste font info between fonts",
    "mainwindow.actionFont_Info_Panel": "#### Font Info panel\n\nCompact, non-modal alternative to the Font Info dialog. View and edit most important font properties.",
    "mainwindow.actionFonts_Panel": "#### Fonts panel\n\nSee all open fonts grouped by families.\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> font to show it in the Glyph window and other panels like Preview, Font Map or Font Info.\n\nMulti-select fonts to perform commands from the <i>Font</i> menu: <i>Merge Fonts to Masters</i>, <i>Compare Fonts</i>, <i>Overlay Fonts</i>.",
    "mainwindow.actionGalleryPanel": "#### Gallery panel\n\nView all named elements in current font master. Place element references into glyphs.\n\n<small>**Element reference**: piece of design that has the same content (contours, image) as other elements in the font. Each element reference can have its own transformation, color, stroke. Element which has a name appears in the <i>Gallery</i> panel. If locked, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> to edit content. See <i>Element › Element Reference</i> for more commands.</small>",
    "mainwindow.actionGlyphPanel": "#### Glyph panel\n\nView and change the name &amp; Unicode codepoints of current glyph.\n\nFor current glyph or (in Font window) for multiple glyphs: change advance width &amp; sidebearings, kerning classes, color flag. Auto space &amp; bind sidebearings. Assign &amp; edit tags. Set OT glyph definition class &amp; exclude glyph(s) from export. Edit glyph note.",
    "mainwindow.actionGroupsPanel": "#### Classes panel\n\nDefine, view and edit the OpenType classes, kerning classes, tags and virtual tags",
    "mainwindow.actionGuideline": "@toolbarpanel.buttonMeter",
    "mainwindow.actionGuidesPanel": "#### Guide panel\n\nChange properties of a font guide, glyph guide, element guide, font dimension, alignment zone or hint.\n\nChange name, lock, assign custom color. Set position explicitly of with an expression. Set thickness.\n\nConvert between types of guides. Assign tags to guides and zones.",
    "mainwindow.actionHints": "#### Show / hide hints\n\n Show / hide hints",
    "mainwindow.actionHistoryPanel": "#### History panel\n\nView, navigate &amp; forget undo history.\n\nRecord the current snapshot of the glyph content, perform changes, then interpolate between the two stages.",
    "mainwindow.actionInsert_Shape": "#### Add element reference\n\n Adds contours from a chosen glyph or named element to the current layer or to all layers",
    "mainwindow.actionInterpolate_Nodes": "@widgetnodes.buttonPowerNudge",
    "mainwindow.actionItalicAngleMetrics": "#### Apply italic angle to glyph metrics\n\n If <i>Font Info › Font Dimensions › Italic angle</i> is other than `0`:\n\n‣ visually slant the sidebearing lines (spacing controls) in the Glyph window by the master italic angle, and shift them by <i>Font Info › Font Dimensions › Caret offset</i><br/>‣ adjust the numerical sidebearing values by the caret offset\n\n<small>If <i>View › Metrics Line</i> in on, show the sidebearing values based on the intersections of the metrics line with the sidebearing lines that are slanted and offset.</small>",
    "mainwindow.actionItalicAngleMetricsGrid": "#### Apply italic angle to glyph metrics and grid\n\n If <i>Font Info › Font Dimensions › Italic angle</i> is other than `0`:\n\n‣ visually slant the sidebearing lines (spacing controls) in the Glyph window by the master italic angle, and shift them by <i>Font Info › Font Dimensions › Caret offset</i><br/>‣ adjust the numerical sidebearing values by the caret offset<br/>‣ slant the grid if it’s visible and <i>Preferences › Grid › Follow italic angle</i> is on\n\n<small>If <i>View › Metrics Line</i> in on, show the sidebearing values based on the intersections of the metrics line with the sidebearing lines that are slanted and offset.</small>",
    "mainwindow.actionItalicAngleNone": "#### Do not apply italic angle\n\nShow the sidebearing lines and the grid as upright.",
    "mainwindow.actionKerning": "@toolbarpanel.buttonKerning",
    "mainwindow.actionKerningPanel": "#### Kerning panel\n\nView list of kerning pairs defined in the current font master. Preview and change kerning.",
    "mainwindow.actionKnife": "@toolbarpanel.buttonKnife",
    "mainwindow.actionLayersPanel": "#### Layers & Masters panel\n\nSwitch current layer in all glyphs, add, remove layers, edit layer properties. Each glyph has one or more layers, not all glyphs have the same layers. Same-named glyph layers are a font layer\n\n<small>‣ **Font master layer** (bold name): corresponds to (has same name as) a **font master** defined in <i>Font Info</i>. Uses the font master’s variation location. To add **a font master** along with font master layers, use <i>Font Info › +</i> or <i>Variations panel › Add current instance as font master</i><br/>‣ **Font-less master layer**: variable glyph layer with variation location string prefixed by `:` in the name. Has no corresponding font master so kerning &amp; font dimensions are interpolated<br/>‣ **Mask layer** (blue name `mask.` + parent layer name): for visual references or temporary drawings<br/>‣ **Bitmap layer** (named `ppm.` + pixel-per-em value): for color fonts<br/>‣ `#instance`: automatic if glyph is variable and <i>Preferences › Variations › Show #instance layer</i> is on</small>",
    "mainwindow.actionLocationPanel": "#### Variations panel\n\nTest and animate variation (interpolation) between masters or between separate fonts. Choose dynamic instance and preview it in the Preview panel or the Glyph window Text mode. Add that instance as a font or glyph master, or create as a new font.\n\n<small>Make the <i>Variations</i> panel wider to reveal additional controls</small>",
    "mainwindow.actionLockFontGuidelines": "#### Lock font guides\n\n If locked, you cannot select or drag **font guides** in the window if they are set to visible.\n\nYou can still snap to them. You can edit them in <i>Font Info › Guides</i>, and create them with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> from <i>Rulers</i>.",
    "mainwindow.actionLockFontMetrics": "#### Lock font dimension lines\n\n If locked, you cannot select or drag **font dimension lines** in the window if they are set to visible.\n\nYou can still snap to them. You can edit font dimensions (Descender, x-Height, Caps Height, Ascender) in <i>Font Info</i>.",
    "mainwindow.actionLockGlyphMetrics": "#### Lock glyph metrics\n\n If locked, you cannot select or drag the **sidebearing lines** in the window if <i>Spacing Controls</i> are set to visible.\n\nYou can still edit the glyph metrics with <i>Metrics</i> tool. Hold <span style=\"font-style: normal; white-space: nowrap;\"><b>M</b></span> to temporarily activate <i>Metrics</i>, drag sidebearings, release <span style=\"font-style: normal; white-space: nowrap;\"><b>M</b></span>",
    "mainwindow.actionLockGuidelines": "#### Lock glyph guides\n\n If locked, you cannot select or edit **glyph guides** in the window if they are set to visible.\n\nYou still snap to them, and create them by dragging from <i>Rulers</i>.",
    "mainwindow.actionLockHints": "#### Lock hints\n\n If locked, you cannot select or edit **hints** in the window if they are set to visible.\n\nYou still snap to them, and create them.",
    "mainwindow.actionLockMask": "#### Lock mask\n\n If locked, you cannot select or edit the content of the <i>Mask</i>.\n\nYou can also lock / unlock individual `mask.` layers in <i>Layers & Masters</i> panel.",
    "mainwindow.actionLockOutline": "#### Lock outline\n\n If you lock the outline, you cannot move the nodes, handles, segments or elements in the Glyph window, and you cannot perform contour-editing operations from the <i>Contour</i> menu.\n\nWhen the outline is locked, you can still work with guides, anchors, hints, etc., and you can modify the contours using <i>Tools › Actions</i>.\n\n<small>Use  <i>Layers &amp; Masters</i> panel to lock all content of individual layers.</small>",
    "mainwindow.actionLockPins": "#### Lock anchors and pins\n\n If locked, you cannot select or drag **anchors or pins** in the window if they are set to visible.\n\nYou can still snap to them, and create them. You can also edit them in <i>Anchors & Pins</i> panel.",
    "mainwindow.actionLockZones": "#### Lock zones\n\n If locked, you cannot select or drag **alignment zones** in the window if they are set to visible.\n\nYou can still snap to them. You can edit them in <i>Font Info › Zones</i>.",
    "mainwindow.actionLookupsPanel": "#### Lookups panel\n\nPerformed detailed proofing &amp; analysis of your OpenType feature definitions in a view compatible with Microsoft VOLT. Visually check all substitutions and positioning rules.",
    "mainwindow.actionMaskClearGlobal": "#### Clear global mask\n\n Removes the content of **global mask**\n\n<small>**Global mask**: special layer that is not directly editable but can appear in the background of all glyphs in the current layer.<br/>‣ <i>View › Show › Global Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Global Mask</i>: snap to it (if visible)<br/>‣ <i>Tools › Copy to Global Mask</i>: copy current selection into the global mask<br/>‣ <i>Tools › Clear Global Mask</i>: remove the contents of the global mask<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "mainwindow.actionMaskCopyGlobal": "#### Copy to global mask\n\n Copy current selection to the **global mask**\n\n<small>**Global mask**: special layer that is not directly editable but can appear in the background of all glyphs in the current layer.<br/>‣ <i>View › Show › Global Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Global Mask</i>: snap to it (if visible)<br/>‣ <i>Tools › Copy to Global Mask</i>: copy current selection into the global mask<br/>‣ <i>Tools › Clear Global Mask</i>: remove the contents of the global mask<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "mainwindow.actionMatch_When_Editing": "#### Match when editing\n\n‣ **On:** executes the operations that you perform on the current master and that you’ve enabled in **Preferences > Variations > Synchronize in matching masters** on all matching masters. When you turn off **Match when Editing**, FontLab will execute those operations on the current master only. The drawing tools only draw in the current master, even if **Match when Editing** is on.\n\n<small>This setting is not saved in your VFC/VFJ</small>",
    "mainwindow.actionMeasurePanel": "#### Measurements panel\n\nTrack most important numerical properties &amp; proportions for each master: thickness of common stems &amp; serifs, contrast, counter sizes, slant, tension, vertical dimensions.\n\n<small>Rows are predefined measurements. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> cell: enter value, select cells and click <span style=\"font-style: normal; white-space: nowrap;\"><b>♥</b></span>: calculate. First column shows current master. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> heading: switch master. Click <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span>: show / hide measurements</small>\n\n<small>The values are for your reference only. They don’t influence the design or the exported fonts.</small>",
    "mainwindow.actionMerge_Outlines": "#### Remove overlap\n\nMerges overlapping closed and opened contours, removes filled inner loops and unfilled looped corners in the current layer.\n\nIf you select some contours, removes overlaps only in these contours. If all or no contours are selected, removes overlaps in all contours.\n\n<small>To remove overlaps in another element, first switch to that element. To apply to all layers, use <i>Tools › Actions › Basics › Remove overlap</i></small>",
    "mainwindow.actionMetrics": "@toolbarpanel.buttonMetrics",
    "mainwindow.actionMetricsDataPanel": "#### Metrics panel\n\nView and edit the advance width, the left sidebearing and the right sidebearing of each glyph in the current font master.",
    "mainwindow.actionNewShape": "#### New element\n\nCreate a new blank element in the glyph layer.\n\n<small>If you have contours in the glyph layer, create a new element if you wish to draw or paste more contours, and then you plan to apply a different fill color, different stroke thickness or color, different filter or filter parameter (like different Power Brush rotation), or if you plan to re-use the new contours as element references.</small>",
    "mainwindow.actionNewSticker": "#### New Text sticker\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> or press <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CTRL</small></b>·<b>T</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b><small>SHIFT</small></b>·<b>T</b></span>: add new **Text** sticker in the current glyph layer, with default text set in <i>Preferences › Default Texts</i>.\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> sticker on the canvas: activate. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move, <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> unfilled handle: resize. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> filled handle: pull out arrow, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> filled handle: remove arrow. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> arrow: move, <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> gray arrow handle: change curve.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> text box: edit text. Change text box color in <i>Color</i> panel. Change text and arrow color in the last column of <i>Elements</i> panel.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>–</i> in the panel or tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span> to remove sticker.</small>",
    "mainwindow.actionNewSticker_Arrow": "#### New Arrow sticker\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add new **Arrow** sticker in the current glyph layer, with the last-used size.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> icon in <i>Guides</i> tool property bar: new sticker with default size (5% UPM).\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the sticker on the canvas: activate. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> its handle: scale & rotate, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: scale & rotate by 45°.<br/>‣ Change sticker outline color in the last column of <i>Elements</i> panel.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>–</i> in the panel or tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span> to remove sticker.</small>",
    "mainwindow.actionNewSticker_Circle": "#### New Circle sticker\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add new **Circle** sticker in the current glyph layer, with the last-used size.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> icon in <i>Guides</i> tool property bar: new sticker with default size (5% UPM).\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the sticker on the canvas: activate. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> its handle: scale & rotate, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: scale & rotate by 45°.<br/>‣ Change sticker fill color in <i>Color</i> panel. Change sticker outline color in the last column of <i>Elements</i> panel.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>–</i> in the panel or tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span> to remove sticker.</small>",
    "mainwindow.actionNewSticker_Line": "#### New Line sticker\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add new **Line** sticker in the current glyph layer, with the last-used size.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> icon in <i>Guides</i> tool property bar: new sticker with default size (5% UPM).\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the sticker on the canvas: activate. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> its handle: scale & rotate, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: scale & rotate by 45°.<br/>‣ Change sticker outline color in the last column of <i>Elements</i> panel.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>–</i> in the panel or tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span> to remove sticker.</small>",
    "mainwindow.actionNewSticker_Plus": "#### New Plus sticker\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add new **Plus** (cross) sticker in the current glyph layer, with the last-used size.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> icon in <i>Guides</i> tool property bar: new sticker with default size (5% UPM).\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the sticker on the canvas: activate. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> its handle: scale & rotate, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: scale & rotate by 45°.<br/>‣ Change sticker outline color in the last column of <i>Elements</i> panel.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>–</i> in the panel or tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span> to remove sticker.</small>",
    "mainwindow.actionNewSticker_Rectangle": "#### New Square sticker\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add new **Square** sticker in the current glyph layer, with the last-used size.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> icon in <i>Guides</i> tool property bar: new sticker with default size (5% UPM).\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the sticker on the canvas: activate. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> its handle: scale & rotate, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: scale & rotate by 45°.<br/>‣ Change sticker fill color in <i>Color</i> panel. Change sticker outline color in the last column of <i>Elements</i> panel.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>–</i> in the panel or tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span> to remove sticker.</small>",
    "mainwindow.actionNewSticker_Star": "#### New Star sticker\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add new **Star** sticker in the current glyph layer, with the last-used size.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> icon in <i>Guides</i> tool property bar: new sticker with default size (5% UPM).\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> the sticker on the canvas: activate. <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> its handle: scale & rotate, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: scale & rotate by 45°.<br/>‣ Change sticker fill color in <i>Color</i> panel. Change sticker outline color in the last column of <i>Elements</i> panel.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>–</i> in the panel or tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span> to remove sticker.</small>",
    "mainwindow.actionNext_Node": "#### Go to next node\n\nSelects the next node and shows its properties",
    "mainwindow.actionNodeBreak": "#### Break contours\n\nBreaks the contour at the selected nodes(s). The node splits into two nodes, a start node and and end node of a new contour. Both nodes have the same position (are on top of each other).\n\n‣ Breaking a closed contour at one node creates an open contour, which is unfilled.<br/>‣ Breaking at multiple nodes creates multiple open contours.",
    "mainwindow.actionNodeDisconnect": "#### Unlink corners\n\nBreaks a **sharp** node, splitting the contours into shorter open contours. Then extends each end of the new contours to create intersections.\n\nFinally, applies a <i>Fill</i> filter so that the same area between the intersecting open contours is filled as was inside the former closed contours.",
    "mainwindow.actionNodeJoin": "#### Join contours\n\n If you select two end nodes of one or more open contours:\n\n‣ If they are on top of each other, replaces them with one node.<br/>‣ Otherwise, adds a line segment between them.\n\nCloses and fills the contour if the joined nodes were the end points of the same open contour.",
    "mainwindow.actionNodeReconnect": "#### Make overlap\n\n Tries to automatically reconstruct overlaps (e.g. after <i>Remove Overlap</i>) in a small selection within the same contour:\n\n‣ If you select **two sharp** nodes, splits the contour into two, elongates the segments at the split and closes both segments with a line or single node<br/>‣ If you select **four sharp** nodes, tries to reconstruct an “x”-shaped overlap\n\n<small>Same as marquee-selection over nodes with <i>Scissors</i> tool. To reconstruct overlaps between two smooth nodes, drag between them with <i>Scissors</i>. To automatically reconstruct overlaps in the current layer: <i>Glyph › Create Overlaps</i>, in many glyphs / layers: <i>Action › Contour › Make overlap</i>.</small>",
    "mainwindow.actionNodeSetStart": "#### Set start point\n\n‣ If node is selected: makes it the start point (first node of the contour).\n\n‣ If no selection: makes the optimal node as the start point of each contour of the current layer.<br/><small>Uses sharp node on a line segment closest to the origin point (0,0), or sharp node closest to the origin, or any node closest to the origin.</small>",
    "mainwindow.actionNodeUnlink": "#### Unlink corners\n\nBreaks the contour at **sharp** nodes, splitting the contours into shorter open contours. Then extends each end of the new contours to create intersections.\n\nFinally, applies a <i>Fill</i> filter so that the same area between the intersecting open contours is filled as was inside the former closed contours.",
    "mainwindow.actionNodesPanel": "#### Node panel\n\nView and edit properties of the node that is active in the Glyph window: x,y coordinates, node type, curve segment tension, Smart Corner radius, stroke thickness and location on the node.\n\nPerform common operations on selected nodes: <i>Break</i>, <i>Join</i>, <i>Simplify</i>, <i>Harmonize</i> etc.",
    "mainwindow.actionNodes_at_Extremes": "#### Add nodes at extremes\n\nAutomatically inserts nodes at the extreme points of curves",
    "mainwindow.actionNodes_tool": "@toolbarpanel.buttonNodes",
    "mainwindow.actionNon_Spacing": "#### Nonspacing\n\nTurn on/off the nonspacing property for element / component.\n\n<small>**Nonspacing**: a nonspacing element / component is visible and exports, but it’s “invisible” to the metrics engine. The app ignores a nonspacing component when you specify a sidebearing value, when you use linked metrics, or when you paste metrics with <i>Paste Special</i>.</small>",
    "mainwindow.actionNonspacing_Clear": "Turn off nonspacing for elements / components",
    "mainwindow.actionNonspacing_Make": "#### Detect nonspacing elements\n\nAutomatically turns on the Nonspacing property for components that are marks.\n\n<small>**Nonspacing**: a nonspacing element / component is visible and exports, but it’s “invisible” to the metrics engine. The app ignores a nonspacing component when you specify a sidebearing value, when you use linked metrics, or when you paste metrics with <i>Paste Special</i>.</small>",
    "mainwindow.actionOptimizer": "@toolbarpanel.buttonEraser",
    "mainwindow.actionOrdinat_smarts": "#### Suggest nodes\n\n**On:** When you have a drawing tool active, or when you drag a point or selection, the window shows red dotted lines that lead to other nodes / handles.\n\nThe snapping will happen when you hold pointer or the selection snap point at the line.\n\n<small>Turn on <i>Edit › Edit Across...</i> and the window will also suggest nodes in other elements, layers, or in other glyphs in the window text.<br/>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>",
    "mainwindow.actionOutputPanel": "#### Output panel\n\nView text messages printed by Python scripts, or errors and warnings shown when you open a font or compile features.\n\nRight-click in the text and choose from context menu: <i>Select All</i>, <i>Copy</i>,  or <i>Clear</i> the text.",
    "mainwindow.actionPaint": "@toolbarpanel.buttonBrush",
    "mainwindow.actionPairsPanel": "#### Pairs & Phrases panel\n\nChoose a Glyph window text from a predefined list of phrases, primarily for spacing. Edit the predefined texts.\n\nChoose a kerning word from a predefined list.",
    "mainwindow.actionParametrization": "@toolbarpanel.buttonMagnet",
    "mainwindow.actionPen": "@toolbarpanel.buttonSmartPen",
    "mainwindow.actionPinsPanel": "#### Anchors & Pins panel\n\nView and manage anchors and pins in the current glyph layer. Choose <i>Anchors</i>, which position and attach glyphs in auto layers, composites and via OpenType mark attachment, or <i>Pins</i>, which position and attach elements.\n\nAdd / remove. Rename. Set position numerically or with an expression. Copy to all masters.\n\nSee all glyphs that have an anchor with a certain name.",
    "mainwindow.actionPreferences": "Open Preferences",
    "mainwindow.actionPrepolate": "@toolbarpanel.buttonPrepolate",
    "mainwindow.actionPrepolate_Masters": "#### Match masters\n\nTries to make all master layers in the glyph interpolation-compatible so that variation is possible.\n\nApplies the auto-matching corrections that are turned on in <i>Font Info › Axes</i> to all master layers. If the glyph has only two master layers, additionally “blends” them by adding extra nodes, which increases the effectiveness of matching.",
    "mainwindow.actionPreviewPanel": "#### Preview panel\n\nPreview text in the current master or all masters of the current font, in the current master of multiple fonts selected in the <i>Fonts</i> panel, in the current instance. View interpolation. View text or glyph waterfall. View composites or mark attachment for the current glyph.\n\n<small>‣ Click the top-right <i>Show / hide Sidebar</i> button to change panel content, font size, alignment, to apply features, to change the color and stroke, to simulate tracking, flip, stretch or slant, to view the spacing rhythm with x-ray, to simulate viewing distance with blur.<br/>‣ Click to type your custom text<br/>‣ Toggle the bottom-right <i>Echo / Custom text</i> button to show the Glyph / Font window glyphs or your custom text<br/>‣ Pinch or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>-scroll to change font size<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>2×click</b></span> a glyph to open it in the Glyph window<br/>‣ Right-click / <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span>-click to select, copy text, paste text, or export the preview as PDF</small>",
    "mainwindow.actionPreview_Inactive_Glyphs": "#### Show / hide details across glyphs\n\n Switch between two ways of rendering the non-current glyphs in the window:\n\n‣ **On:** non-current glyphs are shown as inactive view, with some structural details, depending on the View menu / panel settings<br/>‣ **Off:** non-current glyphs are shown as preview. They are fully filled and without any structural details. Other visible masters and layers, Mask etc. are hidden.\n\n<small>When <i>Edit › Edit Across Glyphs</i> is on, all glyphs are shown with details, and this setting is not available.</small>",
    "mainwindow.actionPrevious_Node": "#### Go to previous node\n\nSelects the previous node and shows its properties",
    "mainwindow.actionPropertyPanel": "#### Brush panel\n\nChange shape and size the brush for the Simple brush or Power Brush tool. Change global thickness, rotation and compression of the brush for each element. Control pressure sensitivity with tablets.\n\nChoose a brush preset. Apply brush to glyphs or elements.\n\n<small>Use <i>Thickness</i> tool to customize the local brush thickness on a node.</small>",
    "mainwindow.actionPythonPanel": "#### Scripting panel\n\nCreate, edit and run Python scripts. Live Python scripting in the Python console.",
    "mainwindow.actionQuickTipsPanel": "#### Справочная панель\n\nОзнакомьтесь с кратким описанием панелей, окон, диалогов и инструментов.\n\nНа панели отображается текст справки в зависимости от того, что в данный момент активно.",
    "mainwindow.actionQuick_Measurement": "#### Show / hide quick measurement\n\n<small>**Quick measurement**: visual measurements that appear automatically in the <i>Glyph window</i> if you move your pointer on fill (inside a filled area), on outline (near the outline) or everywhere. The basic Quick measurement shows the distance between two closest paths. In <i>Preferences › Glyph Window › Quick measurement</i>, you can show additional measurements between opposite segments inside a filled area:<br/>‣ **End lines**: distances near both ends of the segments.<br/>‣ **Center line**: center line between the segments.<br/>‣ **Thickness rainbow**: colorful fill that changes with the distance, towards **blue** with smaller, towards **red** with larger distance. **Uniform blue**: parallel lines or curves with distance that matches <i>Measurements panel</i> contrast.</small>",
    "mainwindow.actionRectangle": "@toolbarpanel.buttonRectangle",
    "mainwindow.actionRedo": "#### Redo\n\nCancels the last <i>Undo</i> operation",
    "mainwindow.actionRemove_Filter": "#### Remove element filter\n\nRemoves element filter",
    "mainwindow.actionRotate": "@toolbarpanel.buttonRotate",
    "mainwindow.actionRound_Coordinates": "#### Preview coordinates rounding\n\nIf <i>Font Info › Family Dimensions › Round coordinates</i> is **off**, all contour editing and transformation is in fractional precision, and is lossless.\n\n Then, if <i>Preview rounding</i> is:\n\n‣ **On:** You can edit in fractional coordinates but the Glyph window shows coordinates dynamically rounded to integers.<br/>‣ **Off:** The window shows the true fractional coordinates.\n\n<small>If <i>Round coordinates</i> is off, this has no effect.</small>",
    "mainwindow.actionRulers": "#### Show / hide rulers\n\nThe horizontal and vertical rulers at the edges of the Glyph window show the UPM coordinates of the current glyph. On the horizontal ruler, the advance width is shown on a lighter background. On the vertical ruler, 0 is on the baseline, positive coordinates are above.\n\nDrag from the horizontal or vertical ruler to add a guide:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: glyph guide, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: with auto-measurement markers<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: font guide, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>ALT</small></b>·<b>drag</b></span>: with auto markers\n\nDrag from ruler origin (with optional modifiers): add a horizontal and a vertical guide.",
    "mainwindow.actionScale": "@toolbarpanel.buttonScale",
    "mainwindow.actionSelectionsPanel": "#### Selections panel\n\nStore contour selections within a glyph. Perform stored selections (re-select in Glyph window).\n\n‣ to **store** selection: select segments in the Glyph window, <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>+ Add</i>, type a name, press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>.<br/>‣ to **perform** selection:  <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> item. The item shows the number of points in the selection.<br/>‣ to **rename** item: <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span><br/>‣ to **update** an item: click, select segments in Glyph window, click <i>Update</i>",
    "mainwindow.actionShapeDown": "#### Send element / component backward\n\nMoves the selected element down by one position in the list (towards start of the stacking order).",
    "mainwindow.actionShapeToBack": "#### Send element component to back (make first)\n\nMoves the selected element or component to the **bottom** of the list (makes it **first** in stacking order): all other elements will overlap it.",
    "mainwindow.actionShapeToFront": "#### Bring element / component to front\n\nMoves the selected element to the **top** of the list (makes it **last** in stacking order): it will overlap all other elements.",
    "mainwindow.actionShapeUp": "#### Bring element / component forward\n\nMoves the selected element up by one position in the list (towards the end of the stacking order).",
    "mainwindow.actionShape_Is_Locked": "#### Lock / unlock content of element\n\n‣ If the element content is **locked**, you cannot edit the contours inside the element, but you can move and transform the element.<br/>‣ If the element content is **unlocked**, you can edit the contours wherever that element appears.\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> a locked element reference to find and edit an unlocked ocurrence of the reference.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> a component to edit its source glyph.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> other locked elements to unlock them and edit their content.<br/>‣ Lock is used mostly with element references.</small>",
    "mainwindow.actionShape_using": "#### Show / hide element references\n\n Shows red arrows that visualize connections between element references in all glyphs shown in the Glyph window.\n\n<small>**Element reference**: piece of design that has the same content (contours, image) as other elements in the font. Each element reference can have its own transformation, color, stroke. Element which has a name appears in the <i>Gallery</i> panel. If locked, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> to edit content. See <i>Element › Element Reference</i> for more commands.</small>",
    "mainwindow.actionShapesPanel": "#### Elements panel\n\n<small>Navigate through elements, components and filters in the glyph layer. View and edit properties, change name, lock. Set live transformation: shift, scale, rotation, slant. Set fill and stroke color &amp; opacity. Attach component, set it as nonspacing, choose variable component instance.</small>\n\n<small>**Element**: basic piece of design inside a glyph layer.<br/>‣ In single-master **monochrome fonts**: glyph layer usually has one contour element with contours, or from one or more components that dynamically “import” contours from other glyphs<br/>‣ In fonts with **multiple masters**: each layer has its own elements, which must match in number, sequence and content<br/>‣ In **color fonts**: layer may have image / SVG elments, components, and also contour elements; each has its own fill color and/or stroke color and thickness<br/>‣ **Group**: also an element<br/>‣ **Compound element**: contour element with a contour filter applied (Smart Fill, Smart Corner, Glue, Power Brush, Power Stroke, Delta, Skin, CLipping Group)<br/>‣ Element **reference**: element that appears multiple times in the same or different glyphs, has the same content but different transformation, color, stroke.</small>",
    "mainwindow.actionShowCharacterBackground": "#### Show / hide character placeholders\n\n Show / hide the light gray template image showing what character could go in that glyph cell",
    "mainwindow.actionShowCoordinates": "#### Show / hide coordinates for selected, all or key points\n\n‣ **On:** shows coordinates for **selected**, **all** or **key** points (nodes / handles), depending on the <i>Preferences › Glyph Window › Coordinates › Show for</i> dropdown\n\n<small>In the lower part of the <i>View</i> panel or in <i>Preferences › Glyph Window</i>, you can also show / hide coordinates:<br/>‣ of the node or handle under pointer<br/>‣ of your pointer (cursor) on canvas</small>\n\n<small>Turn on <i>View › Scoreboard</i> to show the coordinates in a large font.</small>",
    "mainwindow.actionShowCurvature": "#### Show / hide curvature comb\n\nShows curvature comb, with size &amp; transparency defined in <i>Preferences › Glyph Window</i>\n\n<small><i>Harmonize</i> or make a <i>Genius</i> node to get equal curvature (G2 continuity) on both both sides of a smooth node. <i>Harmonize Handles</i> in the context menu of a Smooth or Genius node to get equal curvature change (G3 continuity).</small>",
    "mainwindow.actionShowDisplay": "#### Show / hide Scoreboard\n\n**Scoreboard**: a floating area that displays the coordinates which you have enabled in the lower part of the <i>View</i> panel:<br/>‣ for selected or all points<br/>‣ over node or handle<br/>‣ on canvas\n\nIf **on**, drag the Scoreboard to position it in the Glyph window, drag its corner to resize it and change the font size.",
    "mainwindow.actionShowFontGuidelines": "#### Show / hide font guides\n\n Show / hide font guides",
    "mainwindow.actionShowFontMetrics": "#### Show / hide font dimensions\n\n Show / hide font dimension lines (line metrics for horizontal text: Descender, Baseline, x-Height, Caps height, Ascender)",
    "mainwindow.actionShowGhosts": "#### Show / hide metrics & hinting shadows\n\n Shows a non-intrusive visualization of font dimensions, hints, and alignment zones as light gray lines and rectangles\n\n<small>Even if <i>View › Snap</i> is on, visible metrics & hinting shadows don’t activate snapping. To activate snapping, turn on font dimensions, hints or zones in <i>View</i> or <i>View › Show</i>, and change their visibility in <i>Preferences › Grid & Guides</i>, or turn on <i>View › Suggest › Guides</i></small>",
    "mainwindow.actionShowGlobalMask": "#### Show / hide global mask\n\n Show / hide outlines on **global mask**.\n\n<small>**Global mask**: special layer that is not directly editable but can appear in the background of all glyphs in the current layer.<br/>‣ <i>View › Show › Global Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Global Mask</i>: snap to it (if visible)<br/>‣ <i>Tools › Copy to Global Mask</i>: copy current selection into the global mask<br/>‣ <i>Tools › Clear Global Mask</i>: remove the contents of the global mask<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "mainwindow.actionShowGlyphBar": "#### Show / hide glyphs bar\n\n Opens a single-row mini-map of glyph cells at the bottom of the Glyph window",
    "mainwindow.actionShowGrid": "#### Show / hide grid\n\n Show / hide grid dots and lines\n\nIf grid is visible, you can snap to it if <i>View › Snap › Grid</i> is on\n\n<small>Customize grid density, slant and appearance in <i>Preferences › Grid</i>. Slant grid in <i>View › Italic Angle</i>.</small>",
    "mainwindow.actionShowGroups": "#### Show / hide cousins\n\n Show / hide visually related glyphs or other masters of the current glyph\n\n<small>Customize cousins in <i>Preferences › Cousins</i></small>",
    "mainwindow.actionShowGuidelines": "#### Show / hide glyph guides\n\n Show / hide glyph guides",
    "mainwindow.actionShowHandles": "#### Show / hide all handles\n\n‣ **on:** makes all handles visible<br/>‣ **off:** only shows handles which are at the <i>Preferences › Distances › Node highlight distance</i> from mouse pointer\n\n<small>If <i>View › Show › Nodes</i> is off, handles are always shown near pointer</small>\n\n<small>Customize appearance of handles in <i>Preferences › Glyph Window › Nodes</i></small>",
    "mainwindow.actionShowMask": "#### Show / hide mask\n\n Show / hide the content of the mask layer associated with current layer.\n\n<small>**Mask**: a special snappable layer in which you can keep contours or images for reference, and show its content in the background of the current layer. A mask is associated with a main layer using the `mask.` name prefix.<br/>‣ <i>View › Show › Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Mask</i>: snap to it (if visible)<br/>‣ <i>Tools</i> menu: switch or swap content between the current layer and its associated mask, copy selections to mask and paste from it<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "mainwindow.actionShowMaster_Relations": "#### Show / hide master relations\n\n If multiple masters are visible, shows lines connecting corresponding nodes of different masters",
    "mainwindow.actionShowMeasurementLine": "#### Show / hide metrics line\n\n Shows a special horizontal line used for calculating sidebearings.\n\n‣ **On:**  Sidebearing values are shown as calculated at the intersection between the line and the glyph content<br/>‣ **Off:** Sidebearing values are shown as calculated at the left and right extrema (bounds) of the glyph content",
    "mainwindow.actionShowMetricsTable": "#### Show / hide metrics table\n\n Show / hide the Metrics table where you can edit sidebearing, advance width and kerning values and expressions",
    "mainwindow.actionShowPreview": "#### Show / hide true fill\n\nShows the glyph fill:\n\n‣ **On**: as 100% opaque,<br/>‣ **Off**: with opacity defined in <i>Preferences › Glyph Window › Fill preview</i>.\n\nAlso shows other visible view details like nodes, handles, guides, curvature, etc.\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span> or switch to <i>Text</i> tool to only see fully filled contours.</small>",
    "mainwindow.actionShowPropertyBar": "#### Show / hide property bar\n\nShow / hide the property bar for the Font window or the Glyph window.\n\nIn the Font window property bar, you can:\n\n‣ show / hide the sidebar, the table of glyph cells and the glyphs list<br/>‣ apply filters and search within the window, plus show / hide the unfiltered glyphs<br/>‣ switch between layers<br/>‣ apply color flags to the glyphs\n\nThe Glyph window property bar shows contextual UI items depending on the active tool and on the currently selected type of element. Position the property bar on top or bottom of the Glyph window in <i>Preferences › Glyph Window</i>.",
    "mainwindow.actionShowSelectionFrame": "#### Show / hide selection frame\n\n Shows a rectangle around the selected contours and handles that you can instantly drag to scale. This is a simplified and instantly accessible version of the <i>Free Transform</i> tool.",
    "mainwindow.actionShowShapeFrame": "#### Show / hide element frame\n\n ‣ **On:** Shows a gray rectangle around each element.\n\nThe top of the frame shows: ‣ element name (if assigned) ‣ how many times the element is used as reference in the current font layer ‣ <i>Lock</i>/<i>Unlock</i> toggle ‣ <i>Element note</i> icon\n\nThe bottom-right shows ‣ the X/Y shift of the element (if not 0,0) ‣ a blue square you can use to drag the element\n\n<small>You can edit other properties of the element in the property bar or <i>Elements</i> panel</small>",
    "mainwindow.actionShowSidebar": "#### Show / hide Font window sidebar\n\nIn the sidebar of the Font window and in the Font Map panel, you can apply filters to the Font window cell table using built-in categories, search history and stored bookmarks.\n\n#### Show / hide Content sidebar\n\nIn the content sidebar of the Glyph window, you can edit the window text, apply basic font formatting, and apply OpenType features.",
    "mainwindow.actionShowSmooth_Outline": "#### Show outline as smooth / sharp\n\nRenders glyph outlines:<br/>‣ **On**: with antialiasing, smoothly but slightly blurrier<br/>‣ **Off**: without antialiasing, sharply, so lines that are nearly-horizontal or nearly-vertical are more clearly recognizable",
    "mainwindow.actionShowStickers": "#### Show / hide stickers\n\n Show / hide Stickers",
    "mainwindow.actionShowTextLine": "#### Show / hide text bar\n\nIn the text bar, you can edit the glyphtext representation of the Glyph window text\n\n<small>**Glyphtext**: Unicode text notation mixed with special “escaped” strings that you can use to input glyphs. Enter a series of plain characters like `Ж`. Follow an escaped string or series of strings with a space to enter a plain Unicode character.<br/>‣ `/glyphname`: glyph name or synonym like `Zhe-cy.sc` or `Zhecyr.sc`<br/>‣ `/character.suffix`: variant of a Unicode character like `Ж.sc`<br/>‣ `\\uXXXX`: The Unicode codepoint of a character like `\\u0416`</small>",
    "mainwindow.actionShow_Glyphs_Metrics": "#### Show / hide spacing controls\n\nIf **on**:\n\n‣ In **Metrics** mode, or (if <i>Preferences › Spacing › Spacing controls show sidebearing values in editing modes</i> is on) also in **editing** modes, shows the numerical values next to the sidebearing handles\n\n‣ In **Kerning** mode, shows vertical lines and handles for changing the kerning value\n\n‣ In **other** modes except Text, shows the advance width box, as well as the vertical lines and triangular handles for the left and right sidebearing\n\n<small>Customize colors in <i>Preferences › Spacing › Metrics lines</i></small>",
    "mainwindow.actionShow_Kerning_Groups": "#### Show / hide kerning classes cloud\n\n In <i>Kerning</i> mode, show / hide the cloud of all glyphs belonging to the same kerning class",
    "mainwindow.actionShow_Pin_Cloud": "#### Show / hide anchor cloud\n\n‣ **On:** shows semitransparent overlays of mark glyphs over the selected anchors (if <i>Preferences › Glyph window › Anchor cloud</i> is on) or over all anchors (if the preference is off).\n\nThose mark glyphs have anchors with names that are prefixed with `_` and correspond to anchors in the current glyph.\n\n<small>‣ If you export the font with mark attachment features, the marks will snap to the base glyphs if typed separately.<br/>‣ If you generate a glyph as a composite or auto layer from the current glyph and one of those marks, the mark will also attach to this anchor.</small>",
    "mainwindow.actionShow_Pin_Points": "#### Show / hide anchors & pins\n\n‣ **On**: snap to them if <i>View › Snap › Anchors and Pins</i> is on\n\n<small>**Anchor**: special named point inside the glyph layer. Attach a mark / component to a base glyph via auto layers or attached components if the base glyph has an anchor named e.g. `top`, and the mark has an anchor with the same name prefixed with `_` e.g. `_top`.<br/>**Pin**: special named point inside an element. Use pins to position elements using expressions, and to attach elements to each other.<br/>‣ Add them with <i>Guides</i> tool. Edit in <i>Anchors & Pins panel</i>. Customize appearance in <i>Preferences › Glyph Window</i>.</small>",
    "mainwindow.actionSimplify_Path": "#### Simplify contour\n\nRemoves unnecessary nodes and adds new nodes to the extrema, where required. Does that by approximating a segment of the contour with a curve",
    "mainwindow.actionSlant": "@toolbarpanel.buttonSlant",
    "mainwindow.actionSnapFontGuidelines": "#### Snap to font guides\n\n **On:** When you have a drawing tool active, or when you drag a node / handle, the pointer can snap to **font guides**. When you drag a selection, its snap point can snap. \n\nThe snapping will happen: ‣ if <i>View › Font Guides</i> is on ‣ or if <i>View › Suggest › Guides</i> is on\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping. To create font guides, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> from the <i>Ruler</i> or use <i>Font Info › Guides</i>.</small>\n\n<small>With <i>Suggest guides</i> on, font guides pop out when you drag near them. With <i>View › Font Guides</i> on, they also pop out when you hover near them if the opacity in <i>Preferences › Grid & Guides</i> is reduced.</small>",
    "mainwindow.actionSnapFontMetrics": "#### Snap to font dimensions\n\n**On:** When you have a drawing tool active, or when you drag a node / handle, the pointer can snap to **font dimension lines**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Font Dimensions</i> is on ‣ or if <i>View › Suggest › Guides</i> is on\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping. To edit font dimensions (line metrics for horizontal text: Descender, Baseline, x-Height, Caps Height and Descender), use <i>Font Info</i>.</small>\n\n<small>With <i>Suggest › Guides</i> on, font dimension lines pop out when you drag near them. With <i>View › Font Dimensions</i> on, they also pop out when you hover near them if their opacity in <i>Preferences › Grid & Guides</i> is reduced.</small>",
    "mainwindow.actionSnapGlobalMask": "#### Snap to global mask\n\n‣ **On:** When you drag a node / handle, the pointer can snap to the points and counters in the **global mask**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Show › Global Mask</i> is on. The content of the global mask appears in all glyphs and layers.\n\n<small>‣ Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>\n\n<small>**Global mask**: special layer that is not directly editable but can appear in the background of all glyphs in the current layer.<br/>‣ <i>View › Show › Global Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Global Mask</i>: snap to it (if visible)<br/>‣ <i>Tools › Copy to Global Mask</i>: copy current selection into the global mask<br/>‣ <i>Tools › Clear Global Mask</i>: remove the contents of the global mask<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "mainwindow.actionSnapGlyphMetrics": "#### Snap to glyph metrics\n\n‣ **On:** When you drag a node / handle, the pointer can snap to the **sidebearing lines**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Show › Spacing Controls</i> is on\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>",
    "mainwindow.actionSnapGrid": "#### Snap to grid\n\n **On:** When you drag a node / handle, the pointer can snap to the **grid**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Show › Grid</i> is on\n\n<small>Use <i>Preferences › Grid & Guides</i> to change the grid size, angle, and the opacity of the grid lines and dots when the grid visible. Turn on the <i>Rounding</i> setting there for “hard snapping”, turn it off for “soft delayed snapping”.</small>\n\n<small>Use <i>View › Italic Angle</i> to refine how grid is slanted.</small>",
    "mainwindow.actionSnapGuidelines": "#### Snap to glyph & element guides\n\n **On:** When you have a drawing tool active, or when you drag a node / handle, the pointer can snap to **glyph or element guides**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Glyph Guides</i> is on ‣ or if <i>View › Suggest › Guides</i> is on\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping. To create glyph guides, <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> from the <i>Ruler</i>. To create element guides, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span> with <i>Guides</i> tool.</small>\n\n<small>With <i>Suggest guides</i> on, guides pop out when you drag near them. With <i>View › Glyph Guides</i> on, they also pop out when you hover near them if their opacity in <i>Preferences › Grid & Guides</i> is reduced.</small>",
    "mainwindow.actionSnapHints": "#### Snap to hints\n\n **On:** When you have a drawing tool active, or when you drag a node / handle, the pointer can snap to **hints**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Show › Hints</i> is on ‣ or if <i>View › Suggest › Guides</i> is on\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping. To create hints, use <i>Tools › Autohint</i> or the <i>Autohint</i> action or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> with <i>Magnet</i>. When you drag nodes, hints that linked to them follow. Drag the hint to unlink it.</small>\n\n<small>With <i>Suggest › Guides</i> on, hints pop out when you drag near them. With <i>View › Show › Hints</i> on, they also pop out when you hover near them if the opacity in <i>Preferences › Grid & Guides › Glyph guide</i> is reduced.</small>",
    "mainwindow.actionSnapMask": "#### Snap to mask\n\n **On:** When you have a drawing tool active, or when you drag a node / handle, the pointer can snap to the points and contours in the current layer’s **mask**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Show › Mask</i> is on\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping. To create a mask, select some points or segments and choose <i>Tools › Copy to Mask</i> or choose <i>Tools › Edit Mask</i> and draw / paste there.</small>",
    "mainwindow.actionSnapOutline": "#### Snap to outline\n\n **On:** When you have a drawing tool active, or when you drag a node / handle, the pointer snaps to **the contours** (not just nodes and handles) of the **current layer**. When you drag a selection, its snap point snaps.\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>",
    "mainwindow.actionSnapPins": "#### Snap to anchors & pins\n\n‣ **On:** When you have a drawing tool active, or when you drag a node / handle, the pointer can snap to **anchors and pins**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Show › Anchors & Pins</i> is on\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping. To create anchors, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> with <i>Guides</i> tool or use <i>Glyph › Add Anchor</i>.</small>",
    "mainwindow.actionSnapZones": "#### Snap to zones\n\n **On:** When you have a drawing tool active, or when you drag a node / handle, the pointer can snap to **alignment zones**. When you drag a selection, its snap point can snap.\n\nThe snapping will happen: ‣ if <i>View › Show › Zones</i> is on ‣ or if <i>View › Suggest › Guides</i> is on\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping. To create alignment zones, use <i>Font Info › Zones</i>.</small>\n\n<small>With <i>Suggest › Guides</i> on, zones pop out when you drag near them. With <i>View › Show › Zones</i> on, they also pop out when you hover near them if the opacity in <i>Preferences › Grid & Guides › Font guide</i> is reduced.</small>",
    "mainwindow.actionSnap_to_Guides": "#### Snap selection to guides\n\n If selected nodes / handles are within the <i>Preferences › Distances › Snap distance</i> to a guide (font dimension line, font guide, glyph guide, element guide, hint or zone), moves the selected nodes / handles to that guide.",
    "mainwindow.actionSnap_to_bounds": "#### Suggest element bounds\n\n**On:** When you have a drawing tool active, or when you drag a point or selection, the window shows snapping suggestions at the **edges** and **centers** of **elements** and **components**.\n\nThe snapping will happen when you hold pointer or the selection snap point at the suggestion.\n\n<small>Turn on <i>Edit › Edit Across...</i> and the window will make the suggestions across elements, layers, or other glyphs in the window text.<br/>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>",
    "mainwindow.actionSnap_to_stems": "#### Suggest stems\n\n**On:** When you have a drawing tool active, or when you drag a point or selection, the window shows snapping suggestions at **stem distances** from **existing contours** if you have defined vertical stems (distances along the X axis) or horizontal stems (distances along the Y axis) in <i>Font Info › Stems</i>.\n\nThe snapping will happen when you hold pointer or the selection snap point at the suggestion.\n\n<small>This helps you achieve consistency in your design.<br/>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>",
    "mainwindow.actionSourcePanel": "#### Source panel\n\nView &amp; edit the JSON source representation of the current glyph, layer or element.\n\nChoose what to show using the top toggles. Select and copy-paste the code from one glyph to another, one layer to another layer etc.\n\nCode is compatible with VFJ. Does not include the enclosing JSON braces (opening `{` and closing `}`).\n\n<small>‣ If <i>Preferences › Editing › Live preview</i> is on, Source panel updates as you edit the glyph in window<br/>‣ Set font size in <i>Preferences › Code editors</i></small>",
    "mainwindow.actionStapler": "@toolbarpanel.buttonScissors",
    "mainwindow.actionStrokePanel": "#### Stroke panel\n\nEdit stroke attributes for the selected elements: thickness, color, thickness, location, vertical compression, caps and joins.\n\nCopy, expand, remove stroke, apply stroke to multiple Font window glyph cells.\n\n<small>Use the <i>Thickness</i> tool to change the local stroke thickness and location on a node.</small>",
    "mainwindow.actionStrokeTool": "@toolbarpanel.buttonStroke",
    "mainwindow.actionSuggest_Centers": "#### Suggest lines\n\n**On:** When you have a drawing tool active, or when you drag a point or selection, the window shows snapping suggestions as:<br/>‣ dotted green lines, which are the **continuation** of line segments or of control vectors of handles (this works for lines at any angle),<br/>‣ gray dotted line, which is a **center line** that is in the middle of a horizontal or vertical stem.\n\nThe snapping will happen when you hold pointer or the selection snap point at the suggestion.\n\n<small>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>",
    "mainwindow.actionSuggest_Distance": "#### Suggest distance\n\n**On:** When you have a drawing tool active, or when you drag a point or selection, the window draws a temporary outline suggestion a **distance** from existing contours.\n\nThe snapping will happen when you hold pointer or the selection snap point at the suggestion.\n\n<small>Define the distances for each master, separately for X/Y, in <i>Font Info › Other Values › Contour properties › Suggest distance</i>. If the distance is a positive number, the suggestion appears outside of closed contours, and to the right of open contours.<br/>Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>",
    "mainwindow.actionSuggest_Guides": "#### Suggest guides\n\n When you drag a point or selection, the window show snapping suggestions near glyph / element **guides**, **font guides**, **hints**, **font dimensions** or **hints** if you turn on snapping to them in <i>View › Snap</i> and:\n\n‣ either if their visibility is turned on in <i>View</i> or <i>View › Show</i>; if you reduce their transparency in <i>Preferences › Grid & Guides</i>, they will “pop out” visually when you drag near them or when you just hover over them<br/>‣ or if their visibility is off but <i>Suggest guides</i> is **on**; they will “pop out” only when you drag near them",
    "mainwindow.actionTTH": "@toolbarpanel.buttonTTH",
    "mainwindow.actionTTHPanel": "#### TrueType Hinting panel\n\nPreview the font using Windows® ClearType® screen rendering.\n\nView the FontLab TTH program. When the <i>TrueType Hinting</i> tool is active, activate the TTH visual commands.",
    "mainwindow.actionTablesPanel": "#### Tables panel\n\nAdd &amp; edit TTX definitions for custom OpenType table definitions.\n\nOverride the tables that FontLab exports by default or add tables that FontLab does not support.",
    "mainwindow.actionTangents": "#### Suggest tangents\n\n **On:** When you drag a node / handle / selection, the window shows a green arrow that extends along the tangent (angle) of the line segment that was adjacent to the point which you dragged.\n\nThe snapping will happen when you hold pointer or the selection snap point at the arrow.\n\n<small>Most useful for italic and slanted glyphs, and to align points along a common diagonal. Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> to suppress snapping.</small>",
    "mainwindow.actionText": "@toolbarpanel.buttonText",
    "mainwindow.actionTransformPanel": "#### Transform panel\n\nApply geometric transformations to contour selections or the whole glyph layer in Glyph window, or to current layer of multiple glyphs in Font window.",
    "mainwindow.actionTunni_Lines": "#### Show / hide Tunni lines\n\n‣ **On:** When you move your pointer between two handles of a curve segment, a blue dotted **Tunni line** appears.\n\n<small><span style=\"font-style: normal; white-space: nowrap;\"><b>Click</b></span> a Tunni line and <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> or use arrow keys: change the segment tension; <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: balance segment; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> blue Tunni control point: change tension and proportion of handles.</small>\n\n<small><i>Contour › Edit Tunni Lines</i> activates all Tunni lines of a selection.</small>",
    "mainwindow.actionUndo": "#### Undo\n\nCancels the last operation",
    "mainwindow.actionZones": "#### Show / hide zones\n\n Show / hide font alignment zones",
    "mainwindow.menuTools": "Opens the <i>Tools</i> menu",
    "measurepanel.buttonAuto": "To auto-calculate some measurements, select the cells in the panel and click the <i>Recalculate</i> button at the bottom. This is useful if you’ve added more glyphs to your font or have entered some custom values that you no longer need. Note: auto-calculation uses Latin glyphs from your font.",
    "measurepanel.buttonSettings": "Click to show / hide some measurements",
    "measurepanel.sizeDecrease": "Decreases the font size in the panel",
    "measurepanel.sizeIncrease": "Increases the font size in the panel",
    "measurepanel.table": "@mainwindow.actionMeasurePanel",
    "metricsdatapanel.buttonContext": "**Show in context**: <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>ing the glyph name adds additional characters surrounding glyph in the Glyph window",
    "metricsdatapanel.frameBottom": "@mainwindow.actionMetricsDataPanel",
    "metricsdatapanel.frameLegend": "@mainwindow.actionMetricsDataPanel",
    "metricsdatapanel.frameTop": "@mainwindow.actionMetricsDataPanel",
    "metricsdatapanel.kerningPreview": "**Show preview**: Opens / closes the local preview pane with the current glyph",
    "metricsdatapanel.pairList": "#### Glyph Metrics: The list of glyph names with their metrics: the width, and left and right sidebearings.\n\nTo edit a glyph’s width or sidebearings directly in the table, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> the value. To link the sidebearing(s) of a glyph with another one, put the second glyph’s name in the sidebearing field instead of a numerical value. To bind a glyph’s sidebearing(s), add an equal sign before the numerical value.\n\nTo add a glyph to the Glyph window, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> its name in the panel. If you select the <i>HOH</i> toggle before <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>ing the glyph name, it will open in the Glyph window with additional characters surrounding it for reference",
    "metricsdatapanel.preview": "**Metrics preview**: The preview pane with the current glyph",
    "metricsdatapanel.searchClear": "**Reset filter**: Clears the filter edit box",
    "metricsdatapanel.searchField": "**Filter**: To search for a glyph, enter its name in the filter field",
    "outputpanel.actionClearOutput": "**Clear**: Clears the <i>Output</i> panel",
    "outputpanel.textOutput": "@mainwindow.actionOutputPanel",
    "pairspanel.buttonAuto": "**Autokern selected pairs**: Automatically creates kerning for pairs selected in the list",
    "pairspanel.buttonFilter": "**Compress kerning classes**: Shows pairs with kerning classes applied if classes are defined in the font",
    "pairspanel.buttonImport": "**Open pairs file**: Opens the standard Open File dialog and loads texts (pairs and phrases) from the custom external text file",
    "pairspanel.buttonSamples": "**Edit Pairs & Phrases**: Opens the Texts modal dialog, where you can edit the sample texts – pairs or phrases",
    "pairspanel.frameBottom": "@mainwindow.actionPairsPanel",
    "pairspanel.frameLegend": "@mainwindow.actionPairsPanel",
    "pairspanel.frameTop": "@mainwindow.actionPairsPanel",
    "pairspanel.pairList": "The list of glyph pairs: Pairs may be kerned or not.\n\nTo show a pair from the list in the Glyph window, select it in the panel. To browse through the list of the pairs in the Glyph window with the Kerning tool selected, use <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span>, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b><small>PG</small>U<small>P</small></b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b><small>PG</small>D<small>N</small></b></span> (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b><small>FN</small></b>·<b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b><small>FN</small></b>·<b>↓</b></span>).\n\nTo see text phrases used for metrics editing, select <i>Texts</i> below the list. To edit pairs, click the <i>Edit pairs and phrases</i> button. To load a custom text file, click the <i>Open Pairs file</i> button",
    "pairspanel.searchClear": "**Reset filter**: Clears the filter and shows all phrases or pairs",
    "pairspanel.searchField": "**Filter**: Enter a character to show only phrases containing that character or type a glyph name to show only pairs with that glyph",
    "pairspanel.selectorLeft": "**Left context**: Adds context at the left of the pair. <i>Uc</i> adds uppercase \"OH\" string, <i>Lc</i> adds lowercase \"on\" string, <i>Sc</i> adds smallcaps \"OH\", <i>Digit</i> adds \"30\"",
    "pairspanel.selectorMode": "**Mode**: To see pair phrases used for editing kerning, select <i>Pairs</i>. To see text phrases used for metrics editing, select <i>Texts</i>. To let the application toggle between the two based on the active tool, select <i>Auto</i>",
    "pairspanel.selectorRight": "**Right context**: Adds context at the right of the pair. <i>Uc</i> adds uppercase \"HOH\" string, <i>Lc</i> adds lowercase \"non\" string, <i>Sc</i> adds smallcaps \"HOH\", <i>Digit</i> adds \"105\"",
    "pairspanel.stringList": "#### The list of phrases: Phrases are used for metrics or kerning editing.\n\nTo show a phrase from the list in the Glyph window, select it in the panel. To browse through the list of phrases in the Glyph window with the Metrics tool selected, use <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span>, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b><small>PG</small>U<small>P</small></b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b><small>PG</small>D<small>N</small></b></span> (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b><small>FN</small></b>·<b>↑</b></span> and <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b><small>FN</small></b>·<b>↓</b></span>).\n\nTo see pairs used for kerning editing, select <i>Pairs</i> below the list. To edit phrases, click the <i>Edit pairs and phrases</i> button. To load a custom text file, click the <i>Open Pairs file</i> button",
    "panelspanel.buttonAnchors": "@mainwindow.actionPinsPanel",
    "panelspanel.buttonBrush": "@mainwindow.actionPropertyPanel",
    "panelspanel.buttonColors": "@mainwindow.actionColorsPanel",
    "panelspanel.buttonFeatures": "@mainwindow.actionFeaturesPanel",
    "panelspanel.buttonFontAudit": "@mainwindow.actionAuditPanel",
    "panelspanel.buttonFontInfo": "@mainwindow.actionFont_Info_Panel",
    "panelspanel.buttonFontMap": "@mainwindow.actionFont_Browser_Panel",
    "panelspanel.buttonFonts": "@mainwindow.actionFonts_Panel",
    "panelspanel.buttonGallery": "@mainwindow.actionGalleryPanel",
    "panelspanel.buttonGlyphInfo": "@mainwindow.actionGlyphPanel",
    "panelspanel.buttonGroups": "@mainwindow.actionGroupsPanel",
    "panelspanel.buttonGuide": "@mainwindow.actionGuidesPanel",
    "panelspanel.buttonHistory": "@mainwindow.actionHistoryPanel",
    "panelspanel.buttonImage": "@mainwindow.actionFiltersPanel",
    "panelspanel.buttonKerning": "@mainwindow.actionKerningPanel",
    "panelspanel.buttonLayers": "@mainwindow.actionLayersPanel",
    "panelspanel.buttonLookups": "@mainwindow.actionLookupsPanel",
    "panelspanel.buttonMeasure": "@mainwindow.actionMeasurePanel",
    "panelspanel.buttonMetrics": "@mainwindow.actionMetricsDataPanel",
    "panelspanel.buttonNode": "@mainwindow.actionNodesPanel",
    "panelspanel.buttonOutput": "@mainwindow.actionOutputPanel",
    "panelspanel.buttonPairs": "@mainwindow.actionPairsPanel",
    "panelspanel.buttonPreview": "@mainwindow.actionPreviewPanel",
    "panelspanel.buttonQuickTips": "@mainwindow.actionQuickTipsPanel",
    "panelspanel.buttonScripting": "@mainwindow.actionPythonPanel",
    "panelspanel.buttonSelections": "@mainwindow.actionSelectionsPanel",
    "panelspanel.buttonSettings": "#### Select panels\n\nChoose which buttons this Panels list shows",
    "panelspanel.buttonShapes": "@mainwindow.actionShapesPanel",
    "panelspanel.buttonSource": "@mainwindow.actionSourcePanel",
    "panelspanel.buttonStroke": "@mainwindow.actionStrokePanel",
    "panelspanel.buttonTTH": "@mainwindow.actionTTHPanel",
    "panelspanel.buttonTables": "@mainwindow.actionTablesPanel",
    "panelspanel.buttonTransformation": "@mainwindow.actionTransformPanel",
    "panelspanel.buttonVariations": "@mainwindow.actionLocationPanel",
    "panelspanel.buttonView": "@mainwindow.actionEditingLayersPanel",
    "paneltransform.PanelTransform": "@mainwindow.actionTransformPanel",
    "paneltransform.angleRotate": "**Rotation angle**: Click and drag the rotation handle to change the rotation angle",
    "paneltransform.angleSlant": "**Slant angle**: Click and drag the slant handle to change the slant angle",
    "paneltransform.applyButton": "**Apply**: Applies all the transformations you have prepared simultaneously. The values for transformation are preserved after the operation for further transformations. You may need to reset them using the <i>Reset</i> button",
    "paneltransform.buttonAlignBottom": "**Align bottom**: Aligns selected objects by their bottom edges",
    "paneltransform.buttonAlignCenter": "**Align center**: Aligns selected objects by their centers horizontally",
    "paneltransform.buttonAlignCollapse": "**Collapse**: Aligns selected objects by their centers both horizontally and vertically. Aligning selected nodes this way moves them into one point",
    "paneltransform.buttonAlignLeft": "**Align left**: Aligns selected objects by their left edges",
    "paneltransform.buttonAlignRight": "**Align right**: Aligns selected objects by their right edges",
    "paneltransform.buttonAlignTop": "**Align top**: Aligns selected objects by their top edges",
    "paneltransform.buttonAlignVCenter": "**Align vertical center**: Aligns selected objects by their centers vertically",
    "paneltransform.buttonLink": "**Proportional scale**: Sets the mode to proportional scale or non-proportional. Click to toggle",
    "paneltransform.content": "@mainwindow.actionTransformPanel",
    "paneltransform.frameBottom": "@mainwindow.actionTransformPanel",
    "paneltransform.frameTop": "@mainwindow.actionTransformPanel",
    "paneltransform.resetButton": "**Reset**: Changes all fields back to their original default values",
    "paneltransform.selectionMirrorH": "**Horizontal flip**: Mirrors the layer or selection horizontally",
    "paneltransform.selectionMirrorV": "**Vertical flip**: Mirrors the layer or selection vertically",
    "paneltransform.selectionRotate": "**Rotation angle**: Rotates the layer or the selection. Enter the rotation angle in degrees. Positive values will rotate counter-clockwise and negative values rotate clockwise",
    "paneltransform.selectionScaleH": "**Vertical scale**: Values for scaling can be added in either percentage (displayed as %) or absolute units (displayed as u). Select % or u next to this field. Set 100% to not scale vertically",
    "paneltransform.selectionScaleW": "**Horizontal scale**: Values for scaling can be added in either percentage (displayed as %) or absolute units (displayed as u). Select % or u next to this field. Set 100% to not scale horizontally",
    "paneltransform.selectionShiftRelative": "**Offset mode**: The offset (shift) transformation offers two modes: location icon means you can offset to the absolute position defined by the values you enter for X and Y co-ordinates; the offset move icon means you can move by the designated distance based on the values you enter for X and Y co-ordinates",
    "paneltransform.selectionShiftX": "**Horizontal distance**: The distance to move horizontally. Positive values move the layer or selection right, and negative values move them left",
    "paneltransform.selectionShiftY": "**Vertical distance**: The distance to move vertically. Positive values move the layer or selection up, and negative values move them down",
    "paneltransform.selectionSlantH": "**Slant angle**: Slants the layer or the selection. Enter the slant angle in degrees in the range from -45 to 45. Positive values slant to the right and negative values slant to the left",
    "paneltransform.selectorCenter": "**Reference point**: Allows you to set the transformation origin using the nine-point reference locator",
    "paneltransform.unitsH": "Set scaling by percentage or absolute units",
    "paneltransform.unitsW": "Set scaling by percentage or absolute units",
    "pinspanel.buttonAdd": "**Add anchor**: Adds new anchor to the current glyph\n\nAnchors are added in the following order: Top, Bottom, Left, Right, a5, a6 etc. To add new pins, use the <i>Element › New Pin</i> menu command",
    "pinspanel.buttonAnchors": "**Anchors**: Shows the list of anchors in the current glyph layer",
    "pinspanel.buttonAppearance": "**Appearance**: Customize how the anchor or pin is displayed in the Glyph window. Default is rhombus for anchor and circle for pin. Choose from a circle, square, rhombus, star or triangle\n\n<small>Anchors added via <i>Glyph › Add Anchor</i> are displayed as triangles</small>",
    "pinspanel.buttonChart": "**Table**: Show / hide the list of glyphs or elements linked to the selected anchor or pin",
    "pinspanel.buttonMasters": "**Copy to masters**: Copies the expressions or coordinates of the selected anchor to same-named anchors in other masters, or creates these anchors if they don’t exist",
    "pinspanel.buttonMore": "Local menu",
    "pinspanel.buttonPins": "**Pins**: Shows the list of pins in the current glyph",
    "pinspanel.buttonRemove": "**Remove**: Removes the selected anchor or pin from the current glyph",
    "pinspanel.buttonSelectAll": "**Activate all**: Activates all anchors or pins in the list. Non-active anchors do not participate in building Anchor Clouds or 'mark' and 'mkmk' features",
    "pinspanel.buttonUnselect": "**Deactivate all**: Deactivates all anchors or pins in the list. Non-active anchors do not participate in building Anchor Clouds or 'mark' and 'mkmk' features",
    "pinspanel.chartClass": "The list of glyphs or elements that are linked to the selected anchor or pin. If the Font window is active, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> the glyph in the list selects this glyph cell in the font. If the Glyph window is active, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> the glyph in the list adds this glyph to the window for edit",
    "pinspanel.frameLegend": "@mainwindow.actionPinsPanel",
    "pinspanel.frameTop": "@mainwindow.actionPinsPanel",
    "pinspanel.list": "#### List of anchors or pins\n\nTo make an anchor or pin active / inactive, click the icon before its name in the list (diamond-shaped for anchors, circular for pins). If the icon is filled, it means the anchor or pin is activated; if it is only an outline, it means deactivated",
    "pinspanel.valueLocationX": "**Expression X**: The expression for horizontal coordinate. Positions the anchor or pin dynamically in relation to other named guides, font parameters, anchors and pins. Basic math operations are allowed. For example, 'width/2' will position the anchor in the middle of the glyph advance width, 'center' will position in the middle of the layer width",
    "pinspanel.valueLocationY": "**Expression Y**: The expression for vertical coordinate. Positions the anchor or pin dynamically in relation to other named guides, font parameters, anchors and pins. Basic math operations are allowed. For example, 'ascender/2' will position the anchor in the middle between the ascender and the baseline",
    "pinspanel.valueName": "**Anchor / pin name**: Enter new name for the selected anchor or pin here. Note that names are used to match anchors and pins. E.g. anchor \"top\" in base glyph is matched with anchor \"_top\" in accent glyph when building a composite glyph or 'mark' OpenType feature",
    "pinspanel.valuePosition1": "**Horizontal position**: X coordinate of the anchor or pin in the glyph",
    "pinspanel.valuePosition2": "**Vertical position**: Y coordinate of the anchor or pin in the glyph",
    "pref_audit.Pref_Audit": "Contour quality tests to run in Glyph window when <i>View › Show › FontAudit</i> is turned on, or when you choose <i>Tools › FontAudit › Check › Glyphs</i>.",
    "pref_audit.buttonSelectAll": "**Activate all FontAudit tests**: If you use FontAudit, it will perform all tests and show their results",
    "pref_audit.buttonUnselect": "**Deactivate FontAudit tests off**: If you use FontAudit, it will perform no tests and show no results",
    "pref_audit.label": "@pref_audit.valueStemTolerance",
    "pref_audit.treeWidget": "Activate the tests that FontLab should perform when you use FontAudit",
    "pref_audit.valueStemTolerance": "The <i>Irregular stem</i> and <i>Uncommon stem</i> tests will report stems that differ in thickness by no more than this many font units from the reference stem values",
    "pref_autohint.Pref_Autohint": "Automatic generation of PostScript hints and FontLab TTH hinting commands.",
    "pref_autohint.checkBox0": "‣ **On:** Builds TrueType commands that simulate PostScript triple hints for glyphs like “m” where the distance between stems must be kept the same at all PPMs",
    "pref_autohint.checkBox1": "‣ **On:** Builds links from the left sidebearing towards the right<br/>‣ **Off:** Builds links from both sidebearings towards the center",
    "pref_autohint.checkBox2": "‣ **On:** Builds an Interpolate command that link a cusp point to one of the links\n\n<small>A cusp is a point where the contour sharply changes direction</small>",
    "pref_autohint.checkBox3": "‣ **On:** Builds small middle delta commands at the end of links that connect round parts of the glyph",
    "pref_autohint.checkBox4": "‣ **On:** Builds a single, distance-rounded link that will go from the rightmost hinted point to the right sidebearing point. This guarantees at least one pixel distance between glyphs on all PPMs",
    "pref_autohint.checkBox5": "‣ **On:** Hints the first stem in a letter like B, which has overlapping stems. Then interpolates the position of the second stem using the interpolation command with the final point aligned to the grid",
    "pref_autohint.checkRemoveHints": "When you run <i>Tools › Autohint</i> or if FontLab generates hints on export:<br/>‣ **On**: removes the existing glyph hints before adding new hints\n\n‣ **Off**: adds new hints to pre-existing hints",
    "pref_autohint.checkToLinks": "When you run <i>Tools › Autohint</i>:<br/>‣ **On**: adds new hints and links them to nodes if possible, so when you move the nodes, the hints will follow (move / resize)<br/>‣ **Off**: adds new hints but will not link them to any nodes",
    "pref_autohint.label": "@pref_autohint.spinBox",
    "pref_autohint.label_2": "Details of how FontLab generates TrueType hinting commands for all fonts that use the **FontLab TTH** TrueType hinter engine:<br/>‣ When you use <i>TTH Autohint</i> in the <i>TrueType Hinting mode</i><br/>‣ When <i>Font Info › Other Values › Use TrueType hinting</i> is <i>Use FontLab TTH and TrueType Hinting tool</i><br/>‣ When <i>Profiles › Hinting › TrueType hinter</i> is <i>FontLab TTH</i><br/><small>**TTFAutohint** TrueType hinter engine settings are in <i>Font Info › Other Values</i>, and are font-specific.</small>",
    "pref_autohint.label_3": "Details of how FontLab generates PostScript hints (or h.tip: hints), when you run <i>Tools › Autohint</i> or when FontLab generates hints on export\n\n<small>If the font has multiple masters, FontLab will use the hints of the main master when it exports variable fonts or instances</small>",
    "pref_autohint.selector0": "@pref_autohint.checkBox0",
    "pref_autohint.selector1": "@pref_autohint.checkBox1",
    "pref_autohint.selector2": "@pref_autohint.checkBox2",
    "pref_autohint.selector3": "@pref_autohint.checkBox3",
    "pref_autohint.selector4": "@pref_autohint.checkBox4",
    "pref_autohint.selector5": "@pref_autohint.checkBox5",
    "pref_autohint.selectorRemoveHints": "@pref_autohint.checkRemoveHints",
    "pref_autohint.selectorToLinks": "@pref_autohint.checkToLinks",
    "pref_autohint.spinBox": "The tolerance in font units that decides when points are located along a line. Default is `7`. Set to `0` or `1` to only align truly straight lines",
    "pref_convert.Pref_Convert": "Tolerance for the <i>Convert to PS/TT</i> commands and conversion between curve systems on export.",
    "pref_convert.checkShortCurves": "When converting from PostScript to TrueType curves (esp. with small tolerance): \n\n‣ **On:** Adds TrueType nodes, i.e. on-curve points. The resulting TT segments will have no more than two off-curve points.\n\n<small>You may prefer this if you manually edit TT curves, but this makes a larger file, will change the resulting TT curves slightly, as the additional nodes will be inserted at integer coordinates, and autohinting may add unnecessary hints</small>\n\n‣ **Off:** Only adds TrueType off-curve points (smaller file).\n\n<small>This is recommended for most users, and helps the autohinter achieve optimal results. The resulting TT segments may have series of on-curve points, which you may find slightly cumbersome if you manually edit TT curves</small>",
    "pref_convert.doubleConvertPS": "Defines how much the resulting curve may deviate from the original curve when app converts from TrueType to PostScript curves, using <i>Contour › Convert</i>, on <i>Shift+Alt</i>-clicking a curve segment, or during export.\n\n‣ **Smaller** values: maintains the shape closely, but add more nodes. This makes a larger file, and autohinting may add unnecessary hints\n\n‣ **Larger** values: deviates from the original shape but do not add nodes. This makes a smaller file, and helps the autohinter achieve optimal results\n\n<small>Default is `2.0`. In export profiles, <i>Outlines › Conversion tolerance</i>, you can use the values set here, or use presets: <i>Precise</i> (`1.5`), <i>Medium</i> (`5.5`) or <i>Loose</i> (`64.5`)</small>",
    "pref_convert.doubleConvertTT": "Defines how much the resulting curve may deviate from the original curve when app converts from PostScript to TrueType curves, using <i>Contour › Convert</i>, on <i>Shift+Alt</i>-clicking a curve segment, or during export.\n\n‣ **Smaller** values: maintains the shape closely but create more off-curve points. This makes a larger file, and autohinting may add unnecessary hints\n\n‣ **Larger** values: deviates from the original shape but create few off-curve points. This makes a smaller file, and helps the autohinter achieve optimal results\n\n<small>Default is `2.0`. In export profiles, <i>Outlines › Conversion tolerance</i>, you can use the values set here, or use presets: <i>Precise</i> (`1.5`), <i>Medium</i> (`5.5`) or <i>Loose</i> (`64.5`)</small>",
    "pref_convert.label": "@pref_convert.doubleConvertPS",
    "pref_convert.label_2": "@pref_convert.doubleConvertTT",
    "pref_convert.label_3": "Defines how much the resulting curve may deviate from the original curve when app converts between PostScript and TrueType curves, using <i>Contour › Convert</i>, on <i>Shift+Alt</i>-clicking a curve segment, or during export.\n\n‣**Smaller** values: maintains the shape closely but create more points. This makes a larger file, and autohinting may add unnecessary hints\n\n‣ **Larger** values: deviates from the original shape but create few points. This makes a smaller file, and helps the autohinter achieve optimal results\n\n<small>Default is `2.0`. In export profiles, <i>Outlines › Conversion tolerance</i>, you can use the values set here, or use presets: <i>Precise</i> (`1.5`), <i>Medium</i> (`5.5`) or <i>Loose</i> (`64.5`)</small>",
    "pref_convert.restoreConvertPS": "Restore default Convert to PostScript tolerance: Resets the tolerance to default `2.0`",
    "pref_convert.restoreConvertTT": "Restore default Convert to TrueType tolerance: Resets the tolerance to default `2.0`",
    "pref_developer.Pref_Developer": "Behavior of windows, tabs, panels, Sketchboard. Color theme of the user interface. Custom data file locations. Auto-update. Advanced settings.",
    "pref_developer.buttonBrowseDataPath": "**Choose custom location of user data folder**: When you relocate your user data folder, FontLab does not copy any files from the old location, you need to copy them yourself. You need to restart FontLab after changing the user data folder location",
    "pref_developer.buttonResetDataPath": "<small>The default location is<br/>‣ `~/Library/Application Support/FontLab/FontLab 8` on macOS, where `~` is your user folder<br/>‣ `%userprofile%\\AppData\\Roaming\\Fontlab\\FontLab 8` on Windows, where `%userprofile%` is your user folder</small>",
    "pref_developer.buttonShowDataPath": "Shows the user data folder in Finder / File Explorer, so you can place custom encodings, mapping tables or scripts inside",
    "pref_developer.buttonTabsTabs": "#### All fonts and glyphs open in tabs\n\nWhen you open multiple fonts, all Font and Glyph windows are tabs within one window\n\nYou can undock tabs to make windows, dock windows as tabs inside other windows\n\nYou can dock toolbar and panels inside windows, or outside windows to the screen edge\n\nUseful mainly if you have a single monitor",
    "pref_developer.buttonThemeDark": "**Dark theme**: FontLab user interface (panels, toolbars, dialog boxes) uses the dark color theme: the text is white and the backgrounds are dark.\n\n<small>Restart FontLab after changing this setting.</small>\n\n<small>Font window cells use dark theme if <i>Preferences › Font Window › Allow dark theme</i> is also **on**, otherwise they’re light.</small>\n\n<small>Glyph window background is dark and content is light if <i>Preferences › Glyph window › Allow dark theme</i> is also **on**. Quick preview (<span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span>) uses dark theme if <i>Also on preview</i> is **on**.</small>\n\n<small>Use <i>Preferences › Font Window</i>, <i>› Glyph Window</i>, <i>› Spacing</i>, <i>› Variations</i>, <i>› Grid, Guides and Hints</i> to customize the color and opacity of specific user interface details.</small>",
    "pref_developer.buttonThemeLight": "**Light theme**: FontLab user interface (panels, toolbars, dialog boxes) uses the **light** color theme: the text is black and the backgrounds are light.\n\n<small>Restart FontLab after changing this setting.</small>\n\n<small>Use <i>Preferences › Font Window</i>, <i>› Glyph Window</i>, <i>› Spacing</i>, <i>› Variations</i>, <i>› Grid, Guides and Hints</i> to customize the color and opacity of specific user interface details.</small>",
    "pref_developer.buttonThemeSystem": "**System theme**: FontLab user interface uses the **light** or **dark** color theme depending on your system setting:<br/><small>‣ macOS: <i>System Preferences › General › Appearance</i>,<br/>‣ Windows: <i>Settings › Personalization › Colors › Choose your color</i>.</small><br/><small>Restart FontLab after changing the system setting.</small>\n\n<small>In the **light** theme, the UI text is black and the backgrounds are light.</small>\n\n<small>In the **dark** theme, the UI text is white and the backgrounds are dark. Use <i>Preferences › Font window</i> and <i>› Glyph window</i> to additionally turn on dark theme for Font window glyph cells, for Glyph window canvas and Quick preview.</small>\n\n<small>Use <i>Preferences › Font Window</i>, <i>› Glyph Window</i>, <i>› Spacing</i>, <i>› Variations</i>, <i>› Grid, Guides and Hints</i> to customize the color and opacity of specific user interface details.</small>",
    "pref_developer.buttonWindowsTabs": "#### Fonts open in windows, glyphs open in tabs\n\nWhen you open multiple fonts, each font is a window, with Glyph tabs inside\n\nYou can undock tabs to make windows, dock windows as tabs inside other windows\n\nYou can dock toolbar and panels outside windows to the screen edge\n\nSketchboard opens if <i>Open Sketchboard on startup</i> is on, or on <i>Window › Open Sketchboard</i>\n\nUseful for both single- and multi-monitor setups",
    "pref_developer.buttonWindowsWindows": "#### Fonts and glyphs open in windows\n\n When you open multiple fonts, each font is a window, and each Glyph window in an additional window\n\nYou can undock tabs to make windows, dock windows as tabs inside other windows\n\nYou can dock toolbar and panels outside windows to the screen edge\n\nSketchboard opens if <i>Open Sketchboard on startup</i> is on, or on <i>Window › Open Sketchboard</i>\n\nUseful mainly if you have multiple monitors",
    "pref_developer.checkActivatePanels": "‣ **On:** if you have multiple gouped panels, and you select a particular object in the Glyph Window, the corresponding panel will appear in front of the group. The panel is activated only if it was opened through _Window > Panels_.",
    "pref_developer.checkBackLightingUpdate": "Activates debugging mode for screen redraw (developer-only)",
    "pref_developer.checkBeta": "When FontLab checks for updates:\n\n‣ **On:** Checks if there is a beta version available. Download and install beta versions to get hotfixes and experimental functionality, which may not be thoroughly tested<br/>‣ **Off:** Check if you’re using the latest stable version, and notify if a newer stable version is available. Recommended for most users",
    "pref_developer.checkClosePanels": "Pressing <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>W</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>W</b></span> closes:\n\n‣ **On:** the current window or the currently active panel<br/>‣ **Off:** the current window\n\n<small>You can always click × in the panel corner to close it.</small>",
    "pref_developer.checkForUpdates": "‣ **On:** When you start FontLab, checks if you’re using the latest version, and will notify you if FontLab.com has published an update.\n\n‣ **Off:** FontLab will not check for updates on startup. To check manually, click <i>Check for updates now</i>",
    "pref_developer.checkLargeQuickHelp": "‣ **On:** When you tap or hold <span style=\"font-style: normal; white-space: nowrap;\"><b>F1</b></span> to display Quick Help, FontLab will show the help tips in larger font size",
    "pref_developer.checkOpenGL": "Choose the software library, which FontLab uses to render Glyph window content:\n\n‣ **On:** OpenGL library that uses **GPU hardware acceleration**. Faster drawing, slower opening of windows, some artefacts may appear. On Windows, you should install OpenGL drivers for your graphics card.\n\n‣ **Off:** standard library. Slower drawing, faster opening of windows, works on any device.\n\n<small>Turn this setting on to try the faster rendering. Turn it off if you experience unwanted screen rendering arterfacts in the Glyph window.</small>",
    "pref_developer.checkRightMargin": "Leave margin at the right of the screen for panels",
    "pref_developer.checkShowKeys": "‣ **On:** When you press a key or a keyboard shortcut, FontLab will display the keystrokes on screen near your pointer\n\nThis is useful when you present FontLab in a class or record the screen actions to make a tutorial or to report a problem\n\n<small>Sometimes, when this is on and you switch to another app, the keystroke display sticks on screen. To get rid of it, switch back to FontLab and tap a key such as <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>, or turn off this setting</small>",
    "pref_developer.checkSidebarTime": "When you open the <i>Glyph window sidebar</i>:<br/>‣ **On:** the sidebar will automatically close after _n_ minutes if you don’t make any changes in it<br/>‣ **Off:** the sidebar stays open until you close it",
    "pref_developer.checkSketchboard": "‣ **On:** opens Sketchboard when FontLab starts<br/>‣ **Off:** does not open Sketchboard when FontLab starts — you can open it with <i>Window › Open Sketchboard</i>",
    "pref_developer.checkTabsPreview": "‣ **On:** renders glyph images on Glyph tabs' title bars<br/>‣ **Off:** title bars show only Unicode text of the Glyph tab content",
    "pref_developer.checkVirtualKeys": "#### Non-English shortcuts\n\n‣ **On:** FontLab interprets single-key keystrokes as if your active keyboard layout was English even if it actually is something else.\n\nFontLab lets you use some functionality via single-key keystrokes, for example to activate tools. Turn this setting if you use a non-English keyboard layout (e.g. Russian, Arabic or German), and the keys for accessing this functionality will mimic the U.S. English keyboard layout.\n\n<small>For example, if this is turned on, FontLab will interpret the key to the right of the <span style=\"font-style: normal; white-space: nowrap;\"><b>P</b></span> key as <span style=\"font-style: normal; white-space: nowrap;\"><b>[</b></span>, and will interpret the top-left letter key as <span style=\"font-style: normal; white-space: nowrap;\"><b>Q</b></span>.</small>\n\n<small>This does not affect text input, only keyboard shortcuts.</small>",
    "pref_developer.label": "Special functionality intended for advanced users",
    "pref_developer.label_10": "@pref_developer.checkSidebarTime",
    "pref_developer.label_11": "@pref_developer.valueAutosaveSketchboard",
    "pref_developer.label_12": "Folder where you can put your own Scripts, Encodings, `alias.dat` and other data files. If a data file is present in this folder, FontLab uses it instead of its own built-in file",
    "pref_developer.label_15": "@pref_developer.valueAutosaveSketchboard",
    "pref_developer.label_18": "@pref_developer.buttonTabsTabs",
    "pref_developer.label_19": "@pref_developer.buttonWindowsTabs",
    "pref_developer.label_2": "@pref_developer.checkSidebarTime",
    "pref_developer.label_20": "@pref_developer.buttonWindowsWindows",
    "pref_developer.label_21": "@pref_developer.selectorDrawFocus",
    "pref_developer.label_22": "Check for updates for your FontLab app",
    "pref_developer.label_26": "@pref_developer.selectorDrawFocus",
    "pref_developer.label_27": "Choose the behavior of Sketchboard",
    "pref_developer.label_3": "Choose whether the Font and Glyph windows are separate floating windows, or tabs within a common window. This controls if you can dock / undock windows, and where you can dock panels and the toolbar",
    "pref_developer.label_4": "Choose if FontLab always creates a Font window per font, or if you can use the Font Map panel and Fonts panel to control the glyph repertoire of the open font(s)",
    "pref_developer.label_5": "Choose how panels behave with Glyph window",
    "pref_developer.label_6": "Choose how sidebars in Glyph window and Preview panel behave",
    "pref_developer.label_7": "Choose if FontLab uses the **light** or the **dark** user interface theme. If you change this, restart FontLab to see the effect.",
    "pref_developer.radioFonts1": "When you make a new font or open a font, a Font window appears.\n\nWhen you close all Font windows of a font, FontLab also closes the font.\n\nThis is the default behavior.",
    "pref_developer.radioFonts2": "When you make a new font or open a font, no Font window appears. Use the <i>Font Map panel</i> instead, and use the <i>Fonts</i> panel to switch the active font. You can still open a Font window with <i>Window › New Font Window</i>.\n\nWhen you close all Font windows of a font, FontLab does not close the font.\n\nUseful if you want to open very many fonts and have limited screen space.",
    "pref_developer.selectorDrawFocus": "A user interface item that _has focus_ is selected to receive (keyboard) input. In <i>General › Focus</i>, choose whether FontLab should draw a thin blue highlight:\n\n‣ <i>minimal</i>: only around small UI items like the text editing fields<br/>‣ <i>controls</i>: also around larger UI items like the layers list in the <i>Layers & Masters</i> panel<br/>‣ <i>always</i>: also around the canvas of the Glyph and Font window\n\n<small>This does not change the way the focus works, just reduces the visual feedback</small>",
    "pref_developer.selectorFonts1_1": "@pref_developer.radioFonts1",
    "pref_developer.selectorFonts2_1": "@pref_developer.radioFonts2",
    "pref_developer.selectorFonts2_2": "@pref_developer.radioFonts2",
    "pref_developer.selectorSketchboard": "@pref_developer.checkSketchboard",
    "pref_developer.selectorThemeDark": "@pref_developer.buttonThemeDark",
    "pref_developer.selectorThemeLight": "@pref_developer.buttonThemeLight",
    "pref_developer.selectorThemeSystem": "@pref_developer.buttonThemeSystem",
    "pref_developer.toolButton": "Check if you’re using the latest version of FontLab and notify if FontLab.com has published an update\n\n<small>If <i>Get beta versions</i> is on, FontLab also checks if a pre-release version is available</small>",
    "pref_developer.valueAutosaveSketchboard": "Set the interval of saving the Sketchboard in minutes, e.g. `0.1`. FontLab always saves the Sketchboard when it quits.\n\n<small>FontLab saves the Sketchboard as `sketchboard.vfc` in the **local data folder**, which is always `~/Library/Application Support/FontLab/FontLab 8` on macOS and `%userprofile%\\AppData\\Local\\Fontlab\\FontLab 8` on Windows</small>",
    "pref_developer.valueDataPath": "Folder where you can put your own Scripts (in `Scripts`), Encodings (`Encoding`), `alias.dat` (in `Data`) and other data files. If a data file is present in this folder, FontLab uses it instead of its own built-in file\n\n<small>The default location is<br/>‣ `~/Library/Application Support/FontLab/FontLab 8` on macOS, where `~` is your user folder<br/>‣ `%userprofile%\\AppData\\Roaming\\Fontlab\\FontLab 8` on Windows, where `%userprofile%` is your user folder</small>",
    "pref_developer.valueSidebarTime": "@pref_developer.checkSidebarTime",
    "pref_dimensions.Pref_Dimensions": "Zoom, snapping, dragging and keyboard behavior in Glyph window.",
    "pref_dimensions.checkForcedSnap": "#### Force snap to guides\n\nIf <i>View › Snap</i> is on for a given type of guide (glyph and element <i>Guides</i>, <i>Font Guides</i>, <i>Hints</i>, <i>Font Dimensions</i>) and you drag an object near that guide, it snaps to the guide:\n\n‣ **On:** immediately<br/>‣ **Off:** after a brief delay when you stop moving your pointer",
    "pref_dimensions.checkGesture": "#### Zoom with pinch gesture\n\n‣ **On:** Lets you zoom in / out in the Font and Glyph window using pinching gestures. Use <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b></span>-wheel to change the current glyph on Windows using mouse<br/>‣ **Off:** Zooming using pinch is not possible. Use <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span>-wheel to change the current glyph on Windows using mouse",
    "pref_dimensions.label": "@pref_dimensions.radioZoomLines",
    "pref_dimensions.labelGlyphwindowDefZoomLevel": "Settings for the default Glyph window zoom level and the speed of zooming in / out with keyboard or wheel",
    "pref_dimensions.label_10": "@pref_dimensions.valueDistSnap",
    "pref_dimensions.label_11": "@pref_dimensions.valueEditorNudge1",
    "pref_dimensions.label_12": "@pref_dimensions.valueEditorNudge10",
    "pref_dimensions.label_13": "@pref_dimensions.valueMetricsNudge1",
    "pref_dimensions.label_14": "@pref_dimensions.valueMinHandle",
    "pref_dimensions.label_15": "@pref_dimensions.valueZoomWheel",
    "pref_dimensions.label_16": "@pref_dimensions.valuePantograph",
    "pref_dimensions.label_17": "@pref_dimensions.valueMetricsNudge10",
    "pref_dimensions.label_18": "@pref_dimensions.valuePantograph",
    "pref_dimensions.label_19": "@pref_dimensions.valuePantograph",
    "pref_dimensions.label_20": "@pref_dimensions.valueZoomKeyboard",
    "pref_dimensions.label_21": "Choose how FontLab interprets **100% zoom** (<i>View › Zoom › Zoom 100%</i> or <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>3</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>3</b></span>)",
    "pref_dimensions.label_22": "@pref_dimensions.valuePantographNode",
    "pref_dimensions.label_23": "@pref_dimensions.valuePantographNode",
    "pref_dimensions.label_24": "@pref_dimensions.valuePantographNode",
    "pref_dimensions.label_25": "@pref_dimensions.valueDistHighlight",
    "pref_dimensions.label_3": "@pref_dimensions.radioZoomLines",
    "pref_dimensions.label_7": "@pref_dimensions.valueDistNode",
    "pref_dimensions.label_8": "@pref_dimensions.valueDistGuideline",
    "pref_dimensions.label_9": "@pref_dimensions.valueDistClose",
    "pref_dimensions.radioZoomLines": "#### Fit between % of UPM\n\nFits the specified bottom value in % of the font’s UPM to the bottom of the window, and the top value to the window top.\n\nIf you resize the window, the glyphs will also change size.",
    "pref_dimensions.radioZoomMetrics": "#### Fit to line height\n\nFits the vertical distance of your Font Info Ascender − Descender + Line gap to the current window height.\n\nIf you resize the window, the glyphs will also change size.",
    "pref_dimensions.radioZoomSafe": "#### Fit to safe metrics\n\nFits the vertical distance between your Font Info Safe Top and Safe Bottom to the current window height.\n\nIf you resize the window, the glyphs will also change size.",
    "pref_dimensions.radioZoomSize": "#### Fit to font size\n\nShows the glyphs at the specified font size in points (default: `600`).\n\nIf you resize the window, the glyphs will keep their size.",
    "pref_dimensions.selectorForcedSnap": "@pref_dimensions.checkForcedSnap",
    "pref_dimensions.selectorGesture": "@pref_dimensions.checkGesture",
    "pref_dimensions.valueDistClose": "#### Join distance\n\nMaximum **pixel** distance from where your pointer must be when you drag an end node of an open contour to the other end node, so that the contour will be joined.\n\n`0`: only join when the end nodes are precisely on top of each other.",
    "pref_dimensions.valueDistGuideline": "#### Hit to guide\n\nMaximum **pixel** distance between the screen location of where you must click, and the screen location of the nearest **guide**, **hint** or **zone**, so that it will be selected.",
    "pref_dimensions.valueDistHighlight": "#### Node highlight distance\n\nMaximum **pixel** distance between the screen location of your pointer, and the screen location of:<br/>‣ the **node** (if <i>View › Show › Nodes</i> is turned off)<br/>‣ the **handle** or its control vector (if <i>View › Show › Handles</i> is turned off)<br/>so that the point will be displayed.\n\nThis setting has no effect if both <i>Nodes</i> and <i>Handles</i> are turned on in <i>View › Show</i>.",
    "pref_dimensions.valueDistNode": "#### Hit to node\n\nMaximum **pixel** distance between the screen location of where you must click, and the screen location of the nearest **node**, **handle** or contour **segment**, so that it will be selected.",
    "pref_dimensions.valueDistSnap": "#### Snap distance\n\nMaximum distance in pixels at which your dragged object will snap to the objects that have <i>View › Snap</i> on",
    "pref_dimensions.valueEditorNudge1": "#### <i>Contour</i> / <i>Element</i> arrow key moves\n\n<i>Contour</i> and <i>Element</i> tools move an object by this distance in font units when you press the <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>←</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span> keys.\n\nDefault: `1`",
    "pref_dimensions.valueEditorNudge10": "#### <i>Contour</i> / <i>Element</i> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-arrow key moves\n\n<i>Contour</i> and <i>Element</i> tools move an object by this distance in font units when you press the <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>↑</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>←</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span> keys.\n\nDefault: `10`",
    "pref_dimensions.valueMetricsNudge1": "#### <i>Metrics</i> / <i>Kerning</i> arrow key moves\n\n<i>Metrics</i> and <i>Kerning</i> modes move a sidebearing or a kerning pair by this distance in font units when you press the <span style=\"font-style: normal; white-space: nowrap;\"><b>←</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span> keys with appropriate modifiers.\n\nDefault: `1`",
    "pref_dimensions.valueMetricsNudge10": "#### <i>Metrics</i> / <i>Kerning</i> <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-arrow key moves\n\n<i>Metrics</i> and <i>Kerning</i> modes move a sidebearing or a kerning pair by this distance in font units when you press the <span style=\"font-style: normal; white-space: nowrap;\"><b>←</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span> keys with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span> and appropriate modifiers.\n\nDefault: `10`",
    "pref_dimensions.valueMinHandle": "#### Minimal length of curve handle\n\nHides handles that are closer on screen to the node than this pixel distance. Mostly affects “far” zoom levels.\n\n`0`: shows all handles",
    "pref_dimensions.valuePantograph": "#### Precision factor of Non-node editing lever\n\nIf you drag or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>-drag a segment for a short distance, the contour change will be this fraction of the pointer movement, so you can make precise adjustments without zooming in.\n\nDrag further and the change will gradually match your pointer movement. Release mouse and drag again to start precision move again.\n\n<small>Default is `5`. Constant dragging speed is `1`. Highest precision at short drags is `10`.</small>",
    "pref_dimensions.valuePantographNode": "#### Precision factor of Contour lever\n\nIf you hold <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span> or if <i>Contour lever</i> is turned on in the <i>Contour</i> toolbox, and you drag a node, handle or selection reference point for a short distance, that point moves by this fraction of the pointer movement. This way, you can make precise adjustments without zooming in.\n\nDrag further, and the change will gradually match your pointer movement. Release mouse and drag again to start lever move again.\n\n<small>Default is `6`. Constant movement is `1`. Highest precision at short drags is `10`.</small>",
    "pref_dimensions.valueZoomAscender": "@pref_dimensions.radioZoomLines",
    "pref_dimensions.valueZoomDescender": "@pref_dimensions.radioZoomLines",
    "pref_dimensions.valueZoomKeyboard": "#### Keyboard zooming speed\n\nSets how much the next zoom level differs in % from previous when you press:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>Z</b></span> or <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>-</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>-</b></span> to zoom in<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>X</b></span> or <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>=</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>=</b></span> to zoom out\n\nDefault is `133`. Small value above `100`: minimal zoom change. Larger value: faster zooming",
    "pref_dimensions.valueZoomSize": "@pref_dimensions.radioZoomSize",
    "pref_dimensions.valueZoomWheel": "#### Alt+wheel zooming speed\n\nSets how much the next zoom level differs in % from previous when you hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span> and use the mouse wheel.<br/>‣ Small value above `100`: minimal zoom change.<br/>‣ Larger value: faster zooming",
    "pref_dsig.Pref_Dsig": "For developers who wish to add the OpenType `DSIG` table",
    "pref_dsig.buttonFolderCertificate": "Choose the certificate file you have received from your certification authority",
    "pref_dsig.buttonFolderPrivateKey": "Choose the private key file you have received from your certification authority.",
    "pref_dsig.checkHidePassword": "‣ **On:** Shows the password\n\nFontLab stores the password in clear text, not encrypted. It will write the unencrypted password if you use <i><span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span> › Export Preferences...</i>",
    "pref_dsig.checkTimestamp": "‣ **On:** Adds a time stamp to the digital signature if you have entered a valid URL that points to a service that generates time stamps for digital signatures<br/>‣ **Off:** Does not add a time stamp to the digital signature",
    "pref_dsig.checkWrite": "‣ **On:** Adds a real `DSIG` table to exported OpenType fonts that includes a digital signature, with the settings below<br/>‣ **Off:** Adds a minimal `DSIG` table to exported OpenType fonts without a digital signature",
    "pref_dsig.editCertificatePath": "Enter the location of the certificate file you have received from your certification authority",
    "pref_dsig.editPassword": "@pref_dsig.radioPasswordUse",
    "pref_dsig.editPrivateKeyPath": "Enter the location of the private key file you have received from your certification authority.",
    "pref_dsig.editTimeStampUrl": "Enter a valid URL that points to a service that generates time stamps for digital signatures",
    "pref_dsig.editVendor": "Enter the font vendor URL exactly as is given in your certificate file",
    "pref_dsig.label": "@pref_dsig.selectorAlgorithm",
    "pref_dsig.labelTitle1_2": "@pref_dsig.buttonFolderCertificate",
    "pref_dsig.labelTitle1_3": "@pref_dsig.buttonFolderPrivateKey",
    "pref_dsig.labelTitle1_4": "@pref_dsig.editVendor",
    "pref_dsig.radioPasswordAsk": "‣ **On:** FontLab will ask you for the password for your private key every time you export a font",
    "pref_dsig.radioPasswordUse": "‣ **On:** FontLab can remember the password for your private key in the preferences\n\nFontLab stores the password in clear text, not encrypted. It will write the unencrypted password if you use <i><span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> › Export Preferences...</i>",
    "pref_dsig.selectorAlgorithm": "Choose the `MD5` or `SHA1` algorithm that is used to build the font data hash. Default: `MD5`",
    "pref_editor.Pref_Editor": "Various tweaks, mostly for editing modes of the Glyph window. Preview. Options for Rapid, Pen &amp; Pencil tools. Selection. Copy-paste.",
    "pref_editor.checkClickSelectsCurve": "#### Select segment on outline click\n\n‣ **On:** Selects it so you can move the entire selection with cursor keys<br/>‣ **Off:** Activates it so you can perform non-node editing (change the shape of a curve segment) with cursor keys. If this is off, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-click to select the segment",
    "pref_editor.checkCommandSelector": "#### Activate Contour tool on <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span> hold\n\nWhen another tools ia active, hold <span style=\"font-style: normal; white-space: nowrap;\"><b>A</b></span> to temporarily activate the <i>Contour</i> tool\n\n‣ **On:** You can also hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span> to temporarily activate Contour tool (Mac-only)\n\n",
    "pref_editor.checkCopyJson": "#### Copy FontLab JSON data as plain text\n\nWhen you copy glyph content from the Font or Glyph window, or content from the Kerning panel, Classes panel or Font Info, FontLab copies the data in human-readable JSON format:\n\n‣ **On:** as plain text, so you can paste it into FontLab, but also into a text editor. If you’re a technical developer, you can then edit this JSON and paste it back into FontLab<br/>‣ **Off:** as its own special clipboard format, so you can still paste it into FontLab, but not into a text editor\n\n<small>When you copy from any text field, from <i>Font Info › Overview</i>, or use <i>Text › Copy Text As</i>, FontLab always copies plain text that you can paste into a text editor.</small>",
    "pref_editor.checkCross": "#### Show cross on point drag\n\n‣ **On:** shows a crosshair cursor in the Glyph window when you drag a node or handle",
    "pref_editor.checkFastPreview": "#### Live preview\n\nWhen you edit a contour, your edits are reflected in the Preview panel and other windows:\n\n‣ **On:** Instantly, as you drag the pointer. This may slow down FontLab<br/>‣ **Off:** After a brief delay, and when you release the mouse. Turn off if you experience high CPU consumption by FontLab",
    "pref_editor.checkFixedBCP": "#### Fix handle direction on curve drag\n\nWhen you drag any point on a curve segment (not the node):\n\n‣ **On:** The direction of the handles stays fixed, so you only change the current curve segment in limited way, and neighboring segments stay intact<br/>‣ **Off:** The direction of the handles changes, so you can freely change the shape of the curve segment, but you will also change the shape of neighboring curve segments if they connect via a smooth node",
    "pref_editor.checkFrameSelectsOnCurve": "#### Ignore handles on node marquee selection\n\nWhen you use the <i>Contour</i> tool to drag a rectangular marquee from the canvas over **both nodes and handles**:\n\n‣ **On:** Selects the marqueed nodes, and the handles between those nodes; does not select other marqueed handles<br/>‣ **Off:** Selects all marqueed nodes and handles\n\n<small>Drag a rectangular marquee over only handles to always select these handles. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>-drag a freeform marquee over any nodes and handles to always select them all</small>",
    "pref_editor.checkHidePlaceholders": "#### Show Character placeholders in empty layers only\n\nWhen <i>View › Character Placeholders</i> is on, a light gray glyph from the <i>Preferences › Font Window › Placeholder font</i> will be shown in the Glyph window:\n\n‣ **On:** Only for blank glyphs, i.e. when the current glyph layer does not have any content. When you’ve drawn something, the placeholder disappears.\n\n‣ **Off:** For all glyphs, even if the current glyph layer has content.",
    "pref_editor.checkKeyboardJoin": "#### Join contours while moving selection with keyboard\n\nIf you <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> a start/end node (or a selection that includes a start/end node) to the <i>Preferences › Distances › Join distance</i> from another start/end node, FontLab joins the contour.\n\n‣ **On:** also joins the contour if you use the <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>←</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span> keys to move a start/end node onto another start/end node .",
    "pref_editor.checkLayerDoubleClick": "#### Activate layer on double-click\n\nIf multiple layers are set as visible in the Layers & Masters panel, and you <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> the outline of an inactive layer in the Glyph window:\n\n‣ **On:** switches to that layer, i.e. makes that layer active instead of the current layer<br/>‣ **Off:** does nothing, i.e. keeps the current layer active",
    "pref_editor.checkMissingGlyphs": "#### Show missing glyph placeholders\n\nWhen you enter text into Glyph window that uses characters which do not have corresponding glyphs in your font:\n\n‣ **On:** For each missing glyph, a semi-light bluish glyph from the Placeholder font will be shown.\n\n‣ **Off:** Only glyphs that are in your font will be shown. The missing glyphs will be skipped.\n\n<small>Missing glyph placeholders occupy some width, but are skipped when you navigate the Glyph window using <span style=\"font-style: normal; white-space: nowrap;\"><b>[</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>]</b></span>. Double-click a placeholder to create a blank glyph</small>",
    "pref_editor.checkModalPen": "#### Rapid tool remembers last state\n\nWhen you draw with <i>Rapid</i> tool:\n\n‣ **On:** **Click** adds a node of the same type (sharp or smooth) as the node you added previously, **Double-click** or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span>-click adds the node of the opposite type, subsequent clicks add nodes of the last type<br/>‣ **Off:** **Click** adds a sharp node, **Double-click** or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span>-click adds a smooth node",
    "pref_editor.checkPenCorrection": "#### Pen and Pencil can modify contour\n\nWhen you draw using the <i>Pen</i> or <i>Pencil</i> tool:\n\n‣ **On:** You can add to pre-existing contours and modify them<br/>‣ **Off:** You can only draw new contours and modify them",
    "pref_editor.checkShiftConstrain": "#### Free Transform Shift-scaling is non-proportional\n\nWhen you use <i>Tools › Free Transform</i>:\n\n‣ **On:** Drag scales proportionally, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-drag scales non-proportionally\n\n‣ **Off:** Drag scales non-proportionally, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-drag scales proportionally (like in most apps)",
    "pref_editor.checkShiftExtendsSelection": "#### Add node to selection on Shift-drag\n\nWhen you have one or more nodes or handles selected, and you <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> an non-selected node or handle: \n\n‣ **On**: when you hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>, then hold the mouse button and start dragging the point, that point is added to the selection. To deselect the previous selection, first hold down the mouse button, **then** hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span> and then start dragging.<br/>‣ **Off**: the previous selection is deselected regardless of whether you hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span> before or after your hold the mouse button and start dragging. To add to the previous selection, <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> the point first, then <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> it.",
    "pref_editor.selectorClickSelectsCurve": "@pref_editor.checkClickSelectsCurve",
    "pref_editor.selectorCommandSelector": "@pref_editor.checkCommandSelector",
    "pref_editor.selectorCopyJson": "@pref_editor.checkCopyJson",
    "pref_editor.selectorCross": "@pref_editor.checkCross",
    "pref_editor.selectorFastPreview": "@pref_editor.checkFastPreview",
    "pref_editor.selectorFixedBCP": "@pref_editor.checkFixedBCP",
    "pref_editor.selectorFrameSelectsOnCurve": "@pref_editor.checkFrameSelectsOnCurve",
    "pref_editor.selectorHidePlaceholders": "@pref_editor.checkHidePlaceholders",
    "pref_editor.selectorLayerDoubleClick": "@pref_editor.checkLayerDoubleClick",
    "pref_editor.selectorMissingGlyphs": "@pref_editor.checkMissingGlyphs",
    "pref_editor.selectorModalPen": "@pref_editor.checkModalPen",
    "pref_editor.selectorPenCorrection": "@pref_editor.checkPenCorrection",
    "pref_editor.selectorShiftConstrain": "@pref_editor.checkShiftConstrain",
    "pref_editor.selectorShiftExtendsSelection": "@pref_editor.checkShiftExtendsSelection",
    "pref_export.actionDestinationAsk": "Ask",
    "pref_export.actionDestinationDesktop": "Desktop",
    "pref_export.actionDestinationSelectFolder": "Selected folder",
    "pref_export.actionDestinationSource": "Same as source",
    "pref_export.actionOrganizeNone": "No subfolders",
    "pref_export.actionOrganizePSN": "Subfolders by PostScript name",
    "pref_export.actionOrganizeSGN": "Subfolders by styling group",
    "pref_export.buttonFolder": "...",
    "pref_export.checkGroup": "Group fonts by:",
    "pref_export.editFolder": "Save folder",
    "pref_export.label": "Export non-variable fonts using:",
    "pref_export.label_7": "Destination:",
    "pref_export.selectorAsk": "Ask at export",
    "pref_export.selectorFlatten": "and flattened",
    "pref_export.selectorGroupFamily": "Family name",
    "pref_export.selectorGroupGroup": "Style group name",
    "pref_export.selectorInstances": "Instances",
    "pref_export.selectorLayer": "Current layer",
    "pref_export.selectorMasters": "Masters",
    "pref_export.selectorSource": "Same as source",
    "pref_export.selectorVisible": "Visible layers, merged",
    "pref_fonts.Pref_Fonts": "Fonts and indentation in technical panels: Scripting, Features, Source, Output, TT Hinting, Tables",
    "pref_fonts.checkWrap": "Wrap the text in the <i>Features</i>, <i>Source</i> and <i>Tables</i> panels\n\nRestart FontLab to apply the changes",
    "pref_fonts.label": "@pref_fonts.valuePanelFontSize",
    "pref_fonts.label_3": "@pref_fonts.valueTabWidth",
    "pref_fonts.radioUseSpaces": "Indent code using **spaces** in <i>Scripting</i>, <i>Features</i>, <i>Source</i>, <i>Output</i>, <i>TrueType Hinting</i> and <i>Tables</i> panels\n\nRestart FontLab to apply the changes",
    "pref_fonts.radioUseTabs": "Indent code using **tabs** of specified width in <i>Scripting</i>, <i>Features</i>, <i>Source</i>, <i>Output</i>, <i>TrueType Hinting</i> and <i>Tables</i> panels\n\nRestart FontLab to apply the changes",
    "pref_fonts.valuePanelFontSize": "Font size in <i>Scripting</i>, <i>Features</i>, <i>Source</i>, <i>Output</i>, <i>TrueType Hinting</i> and <i>Tables</i> panels\n\nRestart FontLab to apply the changes",
    "pref_fonts.valueTabWidth": "Tab width if <i>Use tabs</i> is on",
    "pref_fontwindow.Pref_FontWindow": "Default font filters applied in Font window. Look &amp; feel of glyph cells and captions. Scrolling behavior.",
    "pref_fontwindow.actionCaptionFont": "Caption Font",
    "pref_fontwindow.actionEncoding": "Encoding",
    "pref_fontwindow.actionTemplateFont": "Template Font",
    "pref_fontwindow.buttonAbsentGray": "Show missing glyph placeholders in Font window cells with light gray **fill**",
    "pref_fontwindow.buttonAbsentShadow": "Show missing glyph placeholders in Font window cells unfilled, with a dark **glow**",
    "pref_fontwindow.buttonCaptionBottom": "The caption of the Font window cell will be positioned below the glyph thumbnail",
    "pref_fontwindow.buttonCaptionTop": "The caption of the Font window cell will be positioned above the glyph thumbnail",
    "pref_fontwindow.buttonResetCaptionFont": "Reset the font used to render Font window cell captions",
    "pref_fontwindow.buttonResetTemplateFont": "Reset the placeholder font to default",
    "pref_fontwindow.checkCaptionEditable": "‣ **On:** You can click the caption directly in a Font window cell, and edit the glyph property shown in the caption. E.g. if the caption shows the glyph name, you can rename the glyph directly in the glyph cell, and if it shows the width, you can change the advance width of the current glyph layer. Useful only if you use large caption cells<br/>‣ **Off:** The Font window cell caption is not directly editable",
    "pref_fontwindow.checkColoredCaptions": "‣ **On:** Cell captions with numeric information will be automatically colorized. Numeric captions are those showing glyph width, LSB, RSB, top or bottom of the glyph bounding box, number of elements, script or age. Cells in the Font window side List will also be colorized.",
    "pref_fontwindow.checkDark": "#### Allow Dark theme in Font window cells\n\nFont window cells:<br/>‣ **On:** use the dark theme if  <i>Preferences › General › Dark theme</i> is turned **on**<br/>‣ **Off:** always use the light theme",
    "pref_fontwindow.checkExtraIcons": "‣ **On:** Shows a small `T` icon in the bottom-left cell corner if the glyph layer has visual TrueType hinting commands (yellow icon) or has binary TrueType hinting instructions (blue icon)",
    "pref_fontwindow.checkFontSpaceScroll": "**Scroll by Space+drag**:  controls what happens when you hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span> on a Font window cell, or on a Glyphs bar cell in Glyph window with <i>View › Control Bars › Glyphs Bar</i> on\n\n‣ **on**: you can drag to scroll the Font window or Glyphs bar<br/>‣ **off**: a quick preview of the chosen glyph appears, with the current name, synonyms, a preview, metrics, Unicode codepoint and Unicode name",
    "pref_fontwindow.checkFontWheelBrowse": "#### Browse glyphs with Cmd+scroll\n\n‣ **On**: In the Font or Glyph window, when you hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span> and scroll (using the trackpad or the mouse wheel), FontLab goes to the previous or next glyph (same as using the <span style=\"font-style: normal; white-space: nowrap;\"><b>,</b></span> and <span style=\"font-style: normal; white-space: nowrap;\"><b>.</b></span> keys)",
    "pref_fontwindow.checkFontWheelScroll": "**Precise Font window scrolling**:  When you scroll (with the trackpad or mouse wheel) in the Font window:\n\n‣ **On:** Optimizes the scrolling for a mouse with a **precision wheel** that emulates a trackpad and allows both X and Y scrolling. One tick of the wheel scrolls by one cell row. Scrolling with the _trackpad_ may be “jumpy”<br/>‣ **Off:** Optimizes the scrolling for a **trackpad**. You need to turn the _precision mouse wheel_ more than one tick to scroll by one cell row\n\n<small>Does not affect scrolling with a _simple_ mouse wheel</small>",
    "pref_fontwindow.checkGlyphMetrics": "#### Show glyph metrics if cell is larger than n pixels\n\n‣ **On:** Indicates the advance width with a lighter cell background if the Normal cell height is larger the specified _n_ pixels<br/>‣ **Off:** Display uniform cell background",
    "pref_fontwindow.checkGridLines": "‣ **On:** Shows thin gray lines between glyph cells",
    "pref_fontwindow.checkNameUnicode": "When you choose an **Encoding** filter in the Font window, glyphs with names that are **synonyms** to the names used in the Encoding `.enc` file will be:\n\n‣ **On:** _inside_ the filter\n\n‣ **Off:** _outside_ the filter. This makes the name matching strict like in older FontLab.com apps. If <i>Preferences › Operations › and when adding glyphs in empty Encoding cells</i> is **on** and you create a new glyph in an empty Encoding cell, the new glyph shows up outside the filter if the new name is a synonym.\n\n<small>Glyphs with names identical to those specified in the Encoding `.enc` file are always _inside_ the filter.</small>",
    "pref_fontwindow.checkNewWindow": "When you open a single glyph from the Font window, the glyph will open in:\n\n‣ **On:** an existing Glyph window, replacing the window’s text like in older FontLab.com apps<br/>‣ **Off:** a new Glyph window\n\n<small><span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>2×click</b></span> a glyph cell to open a new Glyph window regardless of this setting</small>",
    "pref_fontwindow.checkNoteIcon": "‣ **On:** Shows a note icon if the glyph has a glyph note",
    "pref_fontwindow.checkNoteText": "‣ **On:** Shows the text of the glyph note text if the cell is large enough",
    "pref_fontwindow.checkPropertyIcon": "If **on,** shows a small icon in the cell corner that indicates how the glyph layer is built. The icon can be a “shogi piece” shape that is:\n\n‣ upwards-pointing bright **blue**: auto layer<br/>‣ downwards-pointing light **gray**: full composite, only has components<br/>‣ downwards-pointing dark **rouge**: partial composite, has both components and simple contours or other non-component elements",
    "pref_fontwindow.checkRedBar": "#### Unicode-name mismatch\n\n Show / hide indicators (horizontal lines) below the cell caption if there is a conflict between the glyph name and a Unicode codepoint assigned to the glyph. The line is:\n\n‣ **red** if the current Unicode-name mapping table lists the name but the glyph does not have the Unicode codepoint that the mapping table assigns to that name<br/>‣ **yellow** if the mapping table does not assign the name to any of the glyph’s Unicode codepoints\n\n<small>Use a custom Unicode-name mapping table in <i>Preferences › Operations</i></small>",
    "pref_fontwindow.checkUnicodeName": "When you use a Unicode-based Font window filter such as <i>Category</i> or <i>Script</i> in the sidebar, or when you search for <i>Category</i>, <i>Script</i> or a <i>Unicode Name</i>:\n\n‣ **On:** The filter also uses glyph names to match the Unicode properties, and also matches glyph variants (with a suffix)",
    "pref_fontwindow.colorEncoding": "Choose a custom color for the **caption** of filtered cells in the Font window. Click <i>…</i> to also choose opacity. When a Font window filter is active:\n\n‣ If <i>Hide unfiltered glyphs</i> is **off**, cells that match the filter will be shown at the beginning of the Font window table, and their captions will use this color. Cells that don’t match the filter will appear later, and their captions will have the background color of the cells\n\n‣ If <i>Hide unfiltered glyphs</i> is **on**, only cells that match the filter will be shown in the Font window, and the captions will have the background color of the cells",
    "pref_fontwindow.colorFontCell": "Choose a custom color for the **background** of Font window cells that show existing glyphs. Default: white\n\nIf **Allow Dark theme** is **On** and the <i>Preferences › General › Dark theme</i> is selected, cells background color follows the dark theme\n\nWhen you assign a color flag to a glyph, the flag color will be added to this cell background color",
    "pref_fontwindow.label": "Placement of the Font window cell caption",
    "pref_fontwindow.label_10": "Choose how Font window cells should render missing glyph placeholders for glyphs that match a filter but don’t exist in the font",
    "pref_fontwindow.label_12": "Customize the details shown in the Font window cells",
    "pref_fontwindow.label_13": "@pref_fontwindow.selectorSorting",
    "pref_fontwindow.label_14": "@pref_fontwindow.opacityMark",
    "pref_fontwindow.label_16": "Display Unicode codepoints in FontLab using uppercase or lowercase hex digits. Shows Unicode codepoints using:\n\n‣ uppercase hex digits (e.g. `B4ED`), which is more traditional<br/>‣ lowercase hex digits (`b4ed`), which is more legible\n\nDoes not affect glyph names or exported fonts in any way",
    "pref_fontwindow.label_17": "@pref_fontwindow.selectorMode",
    "pref_fontwindow.label_18": "@pref_fontwindow.colorEncoding",
    "pref_fontwindow.label_19": "Customize the scrolling behavior in the Font and Glyph windows",
    "pref_fontwindow.label_2": "@pref_fontwindow.selectorCaptionHeight",
    "pref_fontwindow.label_21": "Customize the captions of the Font window cells",
    "pref_fontwindow.label_22": "Change the font used for the captions of the Font window cells",
    "pref_fontwindow.label_3": "\"@pref_fontwindow.checkGlyphMetrics\"",
    "pref_fontwindow.label_4": "@pref_fontwindow.selectorEncoding",
    "pref_fontwindow.label_5": "@pref_fontwindow.selectorCaption",
    "pref_fontwindow.label_6": "Choose the default filter applied to the Font window, and customize the behavior of Font window filters",
    "pref_fontwindow.label_7": "@pref_fontwindow.selectorTemplate",
    "pref_fontwindow.label_8": "Customize the appearance and behavior of glyph cells in the Font window",
    "pref_fontwindow.label_9": "@pref_fontwindow.colorFontCell",
    "pref_fontwindow.opacityMark": "Color flag brightness: When you assign a color flag to a glyph, the flag color will be added to the cell background color. Drag this slider to choose how bright flag color should be.",
    "pref_fontwindow.radioUnicodeLowercase": "Display Unicode codepoints using lowercase hex digits, e.g. `b4ed`",
    "pref_fontwindow.radioUnicodeUppercase": "Display Unicode codepoints using uppercase hex digits, e.g. `B4ED`",
    "pref_fontwindow.selectorCaption": "Font used to render Font window cell captions: Click the underlined selector to choose a custom placeholder font\n\nClick <i>Reset</i> to choose the default placeholder font",
    "pref_fontwindow.selectorCaptionEditable": "@pref_fontwindow.checkCaptionEditable",
    "pref_fontwindow.selectorCaptionHeight": "Font size used to render Font window cell captions: Choose <i>auto</i> and the caption font size will adjust with zoom, or choose <i>small</i>, <i>medium</i> or <i>large</i>",
    "pref_fontwindow.selectorColoredCaptions": "@pref_fontwindow.checkColoredCaptions",
    "pref_fontwindow.selectorDark": "@pref_fontwindow.checkDark",
    "pref_fontwindow.selectorEncoding": "Default Font window Encoding filter: When you create a font, or open font in a non-FontLab format, and <i>Default mode</i> is <i>Encodings</i>, Font window will use this encoding\n\nChoose between a variety of encodings (glyph name lists) to filter glyphs in the Font window and the Font Map panel",
    "pref_fontwindow.selectorFontSpaceScroll": "@pref_fontwindow.checkFontSpaceScroll",
    "pref_fontwindow.selectorFontWheelBrowse": "@Browse glyphs with Cmd+scroll",
    "pref_fontwindow.selectorFontWheelScroll": "@pref_fontwindow.checkFontWheelScroll",
    "pref_fontwindow.selectorMode": "Default Font window filter type: When you create a font, or open font in a non-FontLab format, the Font window will use this filter type by default: <i>Encodings</i> (default), <i>Unicode</i>, <i>Codepage</i>, <i>Category</i>, <i>Script</i> or <i>Index</i> mode.",
    "pref_fontwindow.selectorNewWindow": "@pref_fontwindow.checkNewWindow",
    "pref_fontwindow.selectorSorting": "Default Font window cell sorting: Choose how glyph cells should be sorted in the Font window by default. The default value is <i>Unicode</i>.",
    "pref_fontwindow.selectorTemplate": "The placeholder font is used:\n\n‣ in the Font window cells for missing glyphs i.e. glyphs that match a filter but don’t exist in the font<br/>‣ in the Glyph window for existing glyphs, if <i>View › Character Placeholders</i> are on, depending on <i>Preferences › Editing › Hide character placeholders if layer is not empty</i><br/>‣ in the Glyph window for missing glyphs if <i>Preferences › Editing › Show missing glyph placeholders</i> is on\n\nClick the underlined selector to choose a custom placeholder font\n\nClick <i>Reset</i> to choose the default placeholder font.",
    "pref_fontwindow.valueMetricsLimit": "@pref_fontwindow.checkGlyphMetrics",
    "pref_glyphwindow.Pref_GlyphWindow": "Look &amp; feel of the Glyph window. Detailed behavior if various <i>View</i> menu items are turned on or off.",
    "pref_glyphwindow.buttonColorColor": "#### Intense colors of nodes and handles\n\n‣ red square: corner<br/>‣ green circle: smooth<br/>‣ violet triangle: tangent<br/>‣ yellow rhombus: handle<br/>‣ blue: start point\n\n<small>Selected nodes and handles are always bright red.</small>",
    "pref_glyphwindow.buttonColorNone": "#### Monochrome colors of nodes and handles\n\n‣ square: corner<br/>‣ circle: smooth<br/>‣ triangle: tangent<br/>‣ rhombus: handle\n\n<small>Selected nodes and handles are always bright red.</small>",
    "pref_glyphwindow.buttonColorSome": "#### Muted colors of nodes and handles\n\n‣ red square: corner<br/>‣ green circle: smooth<br/>‣ violet triangle: tangent<br/>‣ yellow rhombus: handle<br/>‣ blue: start point\n\n<small>Selected nodes and handles are always bright red.</small>",
    "pref_glyphwindow.buttonInactiveHandles": "#### Show handles in inactive layers\n\nIf <i>View › Show › Handles</i> is on, shows handles:<br/>‣ in Mask layer<br/>‣ in visible layers if <i>Preferences › Variations › Show inactive layers as wireframes</i> is turned on",
    "pref_glyphwindow.buttonInactiveNone": "Hides nodes in <i>Element</i> tool, in inactive elements, in Mask, in visible layers shown as wireframes, and nodes not under pointer if <i>View › Show › Nodes</i> is off.",
    "pref_glyphwindow.buttonInactiveNormal": "Shows nodes medium and monochrome in <i>Element</i> tool, in inactive elements, in Mask, in visible layers shown as wireframes, and nodes not under pointer if <i>View › Show › Nodes</i> is off.",
    "pref_glyphwindow.buttonInactiveSmall": "Shows nodes tiny and monochrome in <i>Element</i> tool, in inactive elements, in Mask, in visible layers shown as wireframes, and nodes not under pointer if <i>View › Show › Nodes</i> is off.",
    "pref_glyphwindow.buttonOpenEmpty": "Show open contours as unfilled areas",
    "pref_glyphwindow.buttonOpenFill": "Show open contours as filled areas, the same way as closed contours",
    "pref_glyphwindow.buttonSizeBig": "Show large nodes and handles",
    "pref_glyphwindow.buttonSizeHuge": "Show huge nodes and handles",
    "pref_glyphwindow.buttonSizeNormal": "Show medium nodes and handles",
    "pref_glyphwindow.buttonSizeSmall": "Show small nodes and handles",
    "pref_glyphwindow.buttonSizeTiny": "Show tiny nodes and handles",
    "pref_glyphwindow.buttonStyleAuto": "Uses dark color only for nodes and handles that are on extrema, and on corner nodes where an adjacent line segment is horizontal or vertical\n\nOtherwise uses light color",
    "pref_glyphwindow.buttonStyleFlat": "Uses dark color for all nodes and handles",
    "pref_glyphwindow.buttonStyleOutline": "Uses light color for all nodes and handles",
    "pref_glyphwindow.buttonTopBottom": "Show property bar at the bottom of Glyph window",
    "pref_glyphwindow.buttonTopTop": "Show property bar at the top of Glyph window",
    "pref_glyphwindow.checkContrast": "#### High-contrast rendering\n\nShows spacing controls, guides, grid and other details in Glyph window with:<br/>‣ **on:** more contrast<br/>‣ **off:** slightly muted",
    "pref_glyphwindow.checkCoordinatesEditable": "#### Coordinates are editable\n\n‣ **On:** you can click the coordinates and numerical values displayed in the Glyph window and edit their value ‣ for coordinates or nodes, handles, anchors, pins: if <i>View › Show › Coordinates</i> is on, ‣ for thickness control points: if <i>Thickness</i> tool is active\n\n‣ **Off:** you can only edit the coordinates in the property bar or <i>Node</i> panel",
    "pref_glyphwindow.checkDark": "#### Allow Dark theme in Glyph window\n\nGlyph window canvas:<br/>‣ **On:** uses the dark theme if <i>Preferences › General › Dark theme</i> is turned **on**<br/>‣ **Off:** always uses the light theme",
    "pref_glyphwindow.checkDarkPreview": "#### Allow Dark theme in Quick preview\n\nWhen you hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span> in Glyph window, the content:<br/>‣ **On:** uses the dark theme if <i>Preferences › General › Dark theme</i> and <i>Allow Dark theme</i> are turned **on**<br/>‣ **Off:** always uses the light theme",
    "pref_glyphwindow.checkEmptyCoordinates": "#### Show coordinates on canvas\n\n ‣ **On:** Shows coordinates of your pointer (cursor) in UPM units as you move around the Glyph window canvas.\n\n<small>Toggle this setting in the lower part of the <i>View</i> panel or in <i>Preferences › Glyph window</i>.</small>\n\n<small>Use <i>View › Show › Coordinates</i> to show / hide coordinates for **selected**, **all** or **key** points, depending on the <i>Preferences › Glyph Window › Coordinates › Show for</i> dropdown.</small>\n\n<small>Use the lower part of the <i>View</i> panel or <i>Preferences › Glyph Window</i> to show / hide coordinates of of the node or handle under pointer.</small>\n\n<small>Turn on <i>View › Scoreboard</i> to show the coordinates in a large font.</small>",
    "pref_glyphwindow.checkFocus": "#### Pixel-perfect rendering\n\nShows nodes, guides, and outlines:<br/>‣ **On:** more sharply, always rounded to screen pixels<br/>‣ **Off:** or more precisely placed, but slightly blurrier",
    "pref_glyphwindow.checkHoveredCoordinates": "#### Show coordinates over node / handle\n\n ‣ **On:** Shows coordinates for the point (node / handle) that is under your mouse pointer.\n\n<small>Toggle this setting in the lower part of the <i>View</i> panel or in <i>Preferences › Glyph window</i>.</small>\n\n<small>Use <i>View › Show › Coordinates</i> to show / hide coordinates for **selected**, **all** or **key** points, depending on the <i>Preferences › Glyph Window › Coordinates › Show for</i> dropdown.</small>\n\n<small>Use the lower part of the <i>View</i> panel or <i>Preferences › Glyph Window</i> to show / hide coordinates of your pointer (cursor) on canvas.</small>\n\n<small>Turn on <i>View › Scoreboard</i> to show the coordinates in a large font.</small>",
    "pref_glyphwindow.checkOutlineNormal": "**Outline normal**: Set the standard visual thickness of the contour line",
    "pref_glyphwindow.checkOutlineThick": "**Outline thick**: Make the contour line visually more thick",
    "pref_glyphwindow.checkOutlineThin": "**Outline thin**: Make the contour line visually more thin",
    "pref_glyphwindow.checkPowerNudge": "#### Show Power Nudge status\n\nIf <i>Power Nudge</i> is turned on, the Glyph window shows a gray indicator on each node:<br/>‣ **vertical line**: the node will move (nudge) horizontally like an X-Servant node when you move other nodes<br/>‣ **horizontal line**: the node will move (nudge) vertically like a Y-Servant node when you move other nodes<br/>‣ **rectangle**: the node is static: it will not move when you move other nodes\n\n<small>‣ To permanently turn <i>Power Nudge</i> on or off, tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>C</b></span> or click its icon in the <i>Contour</i> toolbox.<br/>‣ To temporarily turn on <i>Power Nudge</i>, hold <span style=\"font-style: normal; white-space: nowrap;\"><b>C</b></span> while in <i>Contour</i> tool.</small>",
    "pref_glyphwindow.checkRainbowCenter": "#### Show Quick measurement center line\n\n ‣ **On:** In addition to basic Quick measurement, temporarily shows a green center line between two opposing segments inside a filled area. Useful for positioning guides or anchors in the center of a stem.",
    "pref_glyphwindow.checkRainbowEdge": "#### Show Quick measurement end lines\n\n ‣ **On:** In addition to basic Quick measurement (the distance between two opposite segments near your pointer), also shows distances near both ends of opposite segments inside a filled area.",
    "pref_glyphwindow.checkRainbowRainbow": "#### Show Thickness rainbow\n\n ‣ **On:** In addition to basic Quick measurement, also shows a **Thickness rainbow** between opposite segments inside a filled area, with transparency (color intensity) defined in the <i>Curvature</i> preference\n\nRainbow changes towards **blue** with smaller, towards **red** with larger distance. **Uniform blue**: parallel lines or curves with distance that matches <i>Measurements panel</i> contrast",
    "pref_glyphwindow.checkScrollBars": "#### Show scroll bars\n\n‣ **On:** Shows scroll bars in Glyph window<br/>‣ **Off:** Hides scroll bars in Glyph window\n\n<small>You can also scroll with mouse wheel or trackpad. Pan by holding <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SPACE</small></b></span></small>",
    "pref_glyphwindow.checkSelectionGlow": "#### Glow contour selection\n\nHighlights a selected a contour or segment:\n\n‣ **On:** in bright red with an additional glowing effect<br/>‣ **Off:** just in bright red color",
    "pref_glyphwindow.checkShowAnchorCloudSelected": "#### Show cloud only for selected anchors\n\nIf <i>View › Anchor Cloud</i> is on, shows the anchor cloud for selected (on) or all (off) anchors",
    "pref_glyphwindow.checkShowAnchorName": "#### Always show anchor names\n\nIf <i>View › Show › Anchors</i> is on, shows anchor names\n\n‣ **On:** for all anchors<br/>‣ **Off:** for anchors that are selected or under pointer",
    "pref_glyphwindow.checkShowAngles": "#### Show lengths and non-H/V angles of handles and line segments\n\n‣ **On:** When you hover or select a **handle** on a curve segment, or when you select a **line segment**, Glyph window shows:<br/>‣ the length of the handle or line segment in font units<br/>‣ the angle of the handle or line segment in degrees if not horizontal or vertical\n\n<small>Glyph window shows this:<br/>‣ if the <i>Lengths & angles</i> toggle in the <i>View panel</i> is turned on<br/>‣ or if <i>Preferences › Glyph window › Lengths & angles</i> is turned on<br/>‣ or if the <i>Guides</i> tool is active</small>",
    "pref_glyphwindow.checkShowCorners": "#### Show auto-meter for corner angles\n\n‣ **On:** If the zoom level is close enough, Glyph window shows **angles** between line segments or curve handles adjacent to a sharp node.\n\n<small>Glyph window shows this:<br/>‣ if the <i>Corner angles</i> and <i>Stem widths</i> toggles in the <i>View panel</i> are both turned on<br/>‣ or if <i>Stem widths</i> and <i>and corner angles</i> are turned on in <i>Preferences › Glyph window</i><br/>‣ or if the <i>Guides</i> tool is active</small>",
    "pref_glyphwindow.checkShowLengths": "#### Show auto-meter for stem widths\n\n‣ **On:** Glyph window shows **important stem widths**: horizontal and vertical distances within the filled area between opposing segments.\n\n<small>Auto-meter automatically determines at which locations it measures the stem widths. If <i>Preferences › Glyph Window › Coordinates editable</i> is turned on, click the numerical value of the auto-meter stem width to change the thickness of the stem.</small>\n\n<small>Glyph window shows this:<br/>‣ if the <i>Stem widths</i> toggle in the <i>View panel</i> is turned on<br/>‣ or if <i>Stem widths</i> is turned on in <i>Preferences › Glyph window</i><br/>‣ or if the <i>Guides</i> tool is active</small>",
    "pref_glyphwindow.checkShowStemThickness": "#### Thickness measurement\n\n‣ **On:** shows Thickness measurement rainbows together with <i>Quick measurement</i>\n\nThe rainbow uses color to indicate the change of the distance between two segments",
    "pref_glyphwindow.checkShowTension": "#### Show tension of curve segments\n\n‣ **On:** When you hover or select a **handle** on a curve segment, Glyph window shows the curve segment tension as a percentage of the handle length towards the point where the handles intersect.\n\nThis is the same percentage as is shown when you edit a Tunni line.\n\n<small>Glyph window shows this:<br/>‣ if the <i>Curve tension</i> and <i>Lengths & angles</i> toggles in the <i>View panel</i> are turned on<br/>‣ or if <i>and tension</i> and <i>Lengths & angles</i> are turned on in <i>Preferences › Glyph window</i> is turned on<br/>‣ or if the <i>Guides</i> tool is active</small>",
    "pref_glyphwindow.checkTabsPreview": "#### Tab title shows preview\n\nGlyph tab title shows the content (text) of the window:\n\n‣ **On:** as a miniature preview rendered in the current font.<br/><small>If the Glyph tab text contains just one encoded glyph, the title also renders it in system font. If the tab text contains just one unencoded glyph, the title shows the glyph name.</small>\n\n‣ **Off:** as Unicode characters or glyph names, rendered in system font.",
    "pref_glyphwindow.checkZoneNodes": "#### Highlight nodes on zones\n\n‣ **On:** Draws a gray square around a node if it is located within an alignment zone",
    "pref_glyphwindow.colorMask": "#### Glyph window Mask background color\n\nSet the background color of the Glyph window if <i>Tools › Edit Mask</i> is **on**.\n\nIf  <i>Preferences › General › Dark theme</i> and <i>Allow Dark theme</i> are **on**, the mask background color follows the dark theme.\n\n<small>**Mask**: a special snappable layer in which you can keep contours or images for reference, and show its content in the background of the current layer. A mask is associated with a main layer using the `mask.` name prefix.<br/>‣ <i>View › Show › Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Mask</i>: snap to it (if visible)<br/>‣ <i>Tools</i> menu: switch or swap content between the current layer and its associated mask, copy selections to mask and paste from it<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "pref_glyphwindow.colorMaskGlobal": "Set the color in which the Glyph window shows the outlines of the contours in the **global mask** if <i>View › Show › Global Mask</i> is turned on.\n\n<small>**Global mask**: special layer that is not directly editable but can appear in the background of all glyphs in the current layer.<br/>‣ <i>View › Show › Global Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Global Mask</i>: snap to it (if visible)<br/>‣ <i>Tools › Copy to Global Mask</i>: copy current selection into the global mask<br/>‣ <i>Tools › Clear Global Mask</i>: remove the contents of the global mask<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "pref_glyphwindow.colorMaskLocal": "Set the color in which the Glyph window shows the outlines of the contours in the **Mask** layer if <i>View › Show › Mask</i> is turned on and the Mask layer is not current.\n\n<small>**Mask**: a special snappable layer in which you can keep contours or images for reference, and show its content in the background of the current layer. A mask is associated with a main layer using the `mask.` name prefix.<br/>‣ <i>View › Show › Mask</i>: show / hide its contents<br/>‣ <i>View › Snap › Mask</i>: snap to it (if visible)<br/>‣ <i>Tools</i> menu: switch or swap content between the current layer and its associated mask, copy selections to mask and paste from it<br/>‣ Customize appearance in <i>Preferences › Glyph Window</i></small>",
    "pref_glyphwindow.colorWorkspace": "#### Glyph window background color\n\nSet the background color of the Glyph window for the editing modes and Text mode.\n\nIf  <i>Preferences › General › Dark theme</i> and <i>Allow Dark theme</i> are **on**, the background color follows the dark theme.\n\n<small>If <i>Preferences › Variations › Preview master color</i> is on and <i>Background</i> is selected, the master color assigned in the <i>Layers &amp; Masters</i> panel will be used instead</small>",
    "pref_glyphwindow.label": "@pref_glyphwindow.valueFontSizeHovered",
    "pref_glyphwindow.labelTrackingH": "#### Quick measurement\n\n Basic **Quick measurement** is the distance between two closest paths.\n\nOptionally turn on extra Quick measurement details (**end lines**, **center line** and **thickness rainbow**). Then choose when all Quick measurement info is shown",
    "pref_glyphwindow.labelTrackingH_3": "@pref_glyphwindow.selectorThickness",
    "pref_glyphwindow.label_10": "@pref_glyphwindow.colorMaskGlobal",
    "pref_glyphwindow.label_11": "@pref_glyphwindow.colorMaskLocal",
    "pref_glyphwindow.label_12": "Choose if Glyph window shows nodes and handles in monochrome, in muted colors or in intense colors",
    "pref_glyphwindow.label_13": "Choose how Glyph window shows nodes in Element tool, in inactive elements, in Mask if it’s not active, in visible layers shown as wireframe, and nodes not under pointer if <i>View › Show › Nodes</i> is turned off.",
    "pref_glyphwindow.label_14": "**Quick measurement** displays the distance between two closest paths near your pointer.\n\nTurn on extra Quick measurement details (**end lines**, **center line** and **thickness rainbow**) and choose **where** you need to move your pointer to see the visualization.\n\nThen, show or hide the visualization with <i>View › Show › Quick Measurement</i>.",
    "pref_glyphwindow.label_15": "Customize:<br/>‣ the opacity and size of the Curvature comb<br/>‣ the opacity of the Quick measurement Rainbow",
    "pref_glyphwindow.label_17": "Customize the appearance of contours",
    "pref_glyphwindow.label_18": "Non-editable nodes are nodes in <i>Element</i> tool, in inactive elements, in Mask, in visible layers shown as wireframes, and nodes not under pointer if <i>View › Show › Nodes</i> is off",
    "pref_glyphwindow.label_19": "<small>**Quick measurement**: visual measurements that appear automatically in the <i>Glyph window</i> if you move your pointer on fill (inside a filled area), on outline (near the outline) or everywhere. The basic Quick measurement shows the distance between two closest paths. In <i>Preferences › Glyph Window › Quick measurement</i>, you can show additional measurements between opposite segments inside a filled area:<br/>‣ **End lines**: distances near both ends of the segments.<br/>‣ **Center line**: center line between the segments.<br/>‣ **Thickness rainbow**: colorful fill that changes with the distance, towards **blue** with smaller, towards **red** with larger distance. **Uniform blue**: parallel lines or curves with distance that matches <i>Measurements panel</i> contrast.</small>",
    "pref_glyphwindow.label_2": "@pref_glyphwindow.selectorCoordinates",
    "pref_glyphwindow.label_20": "@pref_glyphwindow.selectorThickness",
    "pref_glyphwindow.label_21": "Customize the opacity of the fill when <i>True Fill</i> is off, and the fill of open contours",
    "pref_glyphwindow.label_22": "Customize the opacity at which Glyph window shows Curvature and Quick measurement Rainbow, the size of the Curvature comb and the details of Quick measurement",
    "pref_glyphwindow.label_23": "Customize the background colors of the Glyph window, including when Mask layer is shown",
    "pref_glyphwindow.label_24": "Customize the rendering of the Glyph window\n\n<small>Also see <i>General › Other</i></small>",
    "pref_glyphwindow.label_25": "For export of open contours into final fonts see <i>Export open contours</i> in <i>Profiles</i>",
    "pref_glyphwindow.label_26": "Customize the user interface items of the Glyph window",
    "pref_glyphwindow.label_27": "@pref_glyphwindow.selectorNodeName",
    "pref_glyphwindow.label_3": "Choose where to show the Glyph window property bar if <i>View › Control Bars › Property Bar</i> is on",
    "pref_glyphwindow.label_4": "@pref_glyphwindow.opacityCurvature",
    "pref_glyphwindow.label_5": "Set the **size** of nodes and handles in the Glyph window",
    "pref_glyphwindow.label_6": "Customize how Glyph window shows coordinates of nodes and handles, and names of nodes. Set font size for displaying coordinates, lengths, angles and Quick measurement",
    "pref_glyphwindow.label_7": "@pref_glyphwindow.colorMask",
    "pref_glyphwindow.label_8": "Differentiate key nodes from other nodes in Glyph window using **color**",
    "pref_glyphwindow.label_9": "Customize how Glyph window shows names of anchors and the anchor cloud",
    "pref_glyphwindow.opacityCurvature": "Uses this opacity to show the curvature comb if <i>View › Show › Curvature</i> is on, and to show the thickness rainbow if its preference and <i>View › Show › Quick Measurement</i> are on.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.\n\n<small><i>Harmonize</i> or make a <i>Genius</i> node to get equal curvature (G2 continuity) on both both sides or a smooth node</small>",
    "pref_glyphwindow.opacityFill": "Shows filled areas in editing modes with this transparency if <i>True Fill</i> is off.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "pref_glyphwindow.selectorCheckCoordinates": "@pref_glyphwindow.checkHoveredCoordinates",
    "pref_glyphwindow.selectorContrast": "@pref_glyphwindow.checkContrast",
    "pref_glyphwindow.selectorCoordinates": "#### Show coordinates for selected, all or key nodes\n\nIf <i>View › Show › Coordinates</i> is on, Glyph window shows coordinates for points (nodes / handles).<br/>‣ **selected**: points that are selected in the Glyph window<br/>‣ **all**: all points in the current glyph layer<br/>‣ **key** nodes: automatically determined points; only shows X / Y for curved extrema; hides coordinates inside longer paths\n\n<small>In the lower part of the <i>View</i> panel or in <i>Preferences › Glyph Window</i>, you can also show / hide coordinates:<br/>‣ of the node or handle under pointer<br/>‣ of your pointer (cursor) on canvas</small>\n\n<small>Turn on <i>View › Scoreboard</i> to show the coordinates in a large font.</small>",
    "pref_glyphwindow.selectorCoordinatesEditable": "@pref_glyphwindow.checkCoordinatesEditable",
    "pref_glyphwindow.selectorCurvatureSize": "Size of the curvature comb drawn near curves if <i>Show › View › Curvature</i> is on:<br/>‣ **small**: default<br/>‣ **medium**: 2× default<br/>‣ **large** 3× default<br/>‣ **auto** small in close zoom, medium in far zoom",
    "pref_glyphwindow.selectorDark": "@pref_glyphwindow.checkDark",
    "pref_glyphwindow.selectorEmptyCoordinates": "@pref_glyphwindow.checkEmptyCoordinates",
    "pref_glyphwindow.selectorFocus": "@pref_glyphwindow.checkFocus",
    "pref_glyphwindow.selectorInactiveHandles": "@pref_glyphwindow.buttonInactiveHandles",
    "pref_glyphwindow.selectorNodeName": "#### Show names of nodes and components\n\nChoose when the Glyph window should show names of nodes (if assigned) and of components:<br/>‣ always<br/>‣ only if coordinates are shown<br/>‣ never\n\nTurn **on** <i>Show hidden nodes</i> to also show node names that start with `.`, **off** to hide these.",
    "pref_glyphwindow.selectorPowerNudge": "@pref_glyphwindow.checkPowerNudge",
    "pref_glyphwindow.selectorScrollBars": "@pref_glyphwindow.checkScrollBars",
    "pref_glyphwindow.selectorSelectionGlow": "@pref_glyphwindow.checkSelectionGlow",
    "pref_glyphwindow.selectorShowAnchorCloudSelected": "@pref_glyphwindow.checkShowAnchorCloudSelected",
    "pref_glyphwindow.selectorShowAnchorName": "@pref_glyphwindow.checkShowAnchorName",
    "pref_glyphwindow.selectorShowAngles": "@pref_glyphwindow.checkShowAngles",
    "pref_glyphwindow.selectorShowLengths": "@pref_glyphwindow.checkShowLengths",
    "pref_glyphwindow.selectorShowStemThickness": "@pref_glyphwindow.checkShowStemThickness",
    "pref_glyphwindow.selectorShowTension": "@pref_glyphwindow.checkShowTension",
    "pref_glyphwindow.selectorTaperMode": "Choose where you need to move the pointer to see the basic **Quick measurement** (the distance between two closest paths) and the extra Quick measurement details (**end lines**, **center line** and **thickness rainbow**) if <i>View › Show › Quick measurement</i> is on:\n\n‣ **on fill:** shown when you point inside a filled area<br/>‣ **on outline**: shown when you point near the outline<br/>‣ **everywhere**: basic Quick measurement is shown anywhere where you move the pointer inside the Glyph window, extra details are shown on fill",
    "pref_glyphwindow.selectorThickness": "Displays contours in editing modes with a **thin**, **normal** or **thick** outline. The outline does not appear in Preview.\n\nTo show unfilled outlines in <i>Preview</i>, set layer to <i>Wireframe</i> or turn on <i>Stroke</i> in <i>Preview panel</i>.\n\nTo export contours with a visible outline into a font, assign a Stroke or <i>Expand Contour</i> to glyph or element.",
    "pref_glyphwindow.selectorZoneNodes": "@pref_glyphwindow.checkZoneNodes",
    "pref_glyphwindow.valueFontSizeHovered": "Choose font size for showing node coordinates",
    "pref_grid.Pref_Grid": "Look &amp; feel of the Glyph window grid if it is visible and its snapping is on. Appearance of guides, hints, zones, metrics line, if they’re visible.",
    "pref_grid.barOpacity": "#### Opacity of grid lines\n\nIf <i>View › Show › Grid</i> is turned on, shows **grid lines** with this opacity in Glyph window. Not all grid lines are shown at far zoom levels.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.\n\n<small>You may set the opacity of grid lines and/or dots to fully transparent, and still use snapping if <i>View › Show › Grid</i> and <i>View › Snap › Grid</i> are both turned on.</small>",
    "pref_grid.barPointOpacity": "#### Opacity of dots at the intersections of grid lines\n\nIf <i>View › Show › Grid</i> is turned on, shows **grid dots** with this opacity in Glyph window. Not all grid dots are shown at far zoom levels.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.\n\n<small>You may set the opacity of grid lines and/or dots to fully transparent, and still use snapping if <i>View › Show › Grid</i> and <i>View › Snap › Grid</i> are both turned on.</small>",
    "pref_grid.checkForced": "Hard or soft snapping of nodes, guides and anchors to grid it is visible and snapping is on: If <i>View › Show › Grid</i> and <i>View › Snap › Grid</i> are on:\n\n‣ **On:** Hard snapping of nodes (but not handles), guides and anchors. They will immediately snap to grid points when you move them<br/>‣ **Off:** Delayed soft snapping",
    "pref_grid.checkItalicAngle": "If <i>View › Show › Grid</i> is on:\n\n‣ If this is **on** and if <i>View › Italic Angle</i> is <i>Apply to Metrics and Grid</i>: slants the grid horizontally by the per-master setting <i>Font Info › Font Dimensions › Italic Angle</i>\n\n‣ If this is **off** or if <i>View › Italic Angle</i> is <i>Do Not Apply</i>: slants the grid horizontally by the grid <i>Slant angle</i> specified above\n\n<small>If <i>View › Italic Angle</i> is <i>Apply to Metrics</i>, the grid is never slanted</small>",
    "pref_grid.colorGrid": "#### Color of grid lines\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: choose a predefined color<br/>‣ then <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>…</i>: choose a custom color",
    "pref_grid.labelColor": "#### Color of grid lines\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: choose a predefined color<br/>‣ then <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> <i>…</i>: choose a custom color\n\n#### Opacity of grid lines\n\nIf <i>View › Show › Grid</i> is turned on, shows **grid lines** with this opacity in Glyph window. Not all grid lines are shown at far zoom levels.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.\n\n<small>You may set the opacity of grid lines and/or dots to fully transparent, and still use snapping if <i>View › Show › Grid</i> and <i>View › Snap › Grid</i> are both turned on.</small>",
    "pref_grid.labelColor_2": "#### Opacity of dots at the intersections of grid lines\n\nIf <i>View › Show › Grid</i> is turned on, shows **grid dots** with this opacity in Glyph window. Not all grid dots are shown at far zoom levels.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.\n\n<small>You may set the opacity of grid lines and/or dots to fully transparent, and still use snapping if <i>View › Show › Grid</i> and <i>View › Snap › Grid</i> are both turned on.</small>",
    "pref_grid.labelDistance": "Grid line distance: Horizontal and vertical distance between the grid points, if <i>View › Show › Grid</i> is turned on",
    "pref_grid.labelGuideFont": "@pref_grid.opacityGuideFont",
    "pref_grid.labelGuideGlyph": "@pref_grid.opacityGuideGlyph",
    "pref_grid.labelGuideMetrics": "@pref_grid.opacityGuideMetrics",
    "pref_grid.labelGuideShape": "@pref_grid.opacityGuideShape",
    "pref_grid.labelGuideZone": "@pref_grid.opacityGuideZone",
    "pref_grid.labelSlant": "#### Grid slant angle\n\nSlant the grid horizontally by the angle if <i>View › Show › Grid</i> is on, but <i>Follow the font’s Italic Angle</i> is off",
    "pref_grid.opacityGuideFont": "#### Opacity of font guides and metrics line\n\nUses this opacity (transparency) to show:<br/>‣ **font guides** in the Glyph window if <i>View › Font Guides</i> is turned on.<br/>‣ **metrics line** if <i>View › Metrics Line</i> is turned on.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "pref_grid.opacityGuideGlyph": "#### Opacity of glyph guides\n\nUses this opacity (transparency) to show **glyph guides** in the Glyph window if <i>View › Glyph Guides</i> is turned on.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "pref_grid.opacityGuideHint": "#### Opacity of hints\n\nUses this opacity (transparency) to show **hints** in the Glyph window if <i>View › Show › Hints</i> is turned on.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "pref_grid.opacityGuideMetrics": "#### Opacity of font dimension lines\n\nUses this opacity (transparency) to show **font dimension lines** (vertical font metrics) in the Glyph window if <i>View › Font Dimensions</i> is on\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "pref_grid.opacityGuideShape": "#### Opacity of element guides\n\nUses this opacity (transparency) to show **element  guides** in the Glyph window if <i>View › Glyph Guides</i> is turned on.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "pref_grid.opacityGuideZone": "#### Opacity of alignment zones\n\nUses this opacity (transparency) to show **alignment zones** in the Glyph window if <i>View › Show › Zones</i> is turned on.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "pref_grid.valueDistanceX": "Horizontal distance between the grid points, if <i>View › Show › Grid</i> is turned on",
    "pref_grid.valueDistanceY": "Vertical distance between the grid points, if <i>View › Show › Grid</i> is turned on",
    "pref_grid.valueSlant": "#### Horizontal slant angle of the grid\n\nSlants the grid by this angle if <i>View › Show › Grid</i> is on, and if either <i>Follow the font’s Italic Angle</i> is off or if <i>View › Italic Angle</i> is <i>Do Not Apply</i>\n\n<small>If <i>View › Italic Angle</i> is <i>Apply to Metrics</i>, the grid is never slanted</small>",
    "pref_grid.widgetSlant": "@pref_grid.valueSlant",
    "pref_groups.Pref_Groups": "Look &amp; feel of the visually related glyphs or other masters of the current glyph, shown in Glyph window if <i>View › Cousins</i> is turned on.",
    "pref_groups.buttonAlignCenter": "Center cousin stack over the current glyph",
    "pref_groups.buttonAlignLeft": "Align cousin stack to the left of the current glyph",
    "pref_groups.buttonAlignRight": "Align cousin stack to the right of the current glyph",
    "pref_groups.buttonGlyphs": "When <i>View › Cousins</i> is on, Glyph window shows **cousin glyphs** from the font. Cousin glyphs can be visually related to the current glyph\n\n<small>Use the settings below to customize the appearance of the cousin glyphs, and use the large text box to define the cousin relationships</small>",
    "pref_groups.buttonMasters": "When <i>View › Cousins</i> is on, Glyph window shows **cousin masters** of the current glyph (other masters that are set to visible)\n\n<small>The current master is editable, the other masters are shown as cousins. Use the settings below to customize the appearance of the cousin masters</small>",
    "pref_groups.checkDoubleClick": "‣ **On:** When you double-click a cousin glyph / master shown in the cousin stack in the Glyph window, the current glyph / master switches to that cousin for editing",
    "pref_groups.checkMetrics": "Show each cousin shifted horizontally by its advance glyphs",
    "pref_groups.color": "Show cousins in this color",
    "pref_groups.label": "@pref_groups.selectorFill",
    "pref_groups.labelOpacity": "@pref_groups.opacity",
    "pref_groups.label_3": "@pref_groups.selectorMask",
    "pref_groups.label_5": "Choose the color and the opacity in which cousins will be shown",
    "pref_groups.label_6": "Choose how each cousin in the stack should be shifted when displayed",
    "pref_groups.label_7": "×",
    "pref_groups.opacity": "Show cousins with this opacity",
    "pref_groups.selectorDoubleClick": "@pref_groups.checkDoubleClick",
    "pref_groups.selectorFill": "Choose when cousins should be shown filled: if <i>View › True Fill</i> is active, always, or never",
    "pref_groups.selectorMask": "If <i>Mask</i> layer is active and <i>View › Cousins</i> is on:\n\n‣ <i>show outline</i>: Shows the design layer of the cousin<br/>‣ <i>hide</i>: Does not show cousins<br/>‣ <i>show mask</i>: Shows the Mask layer of the cousins",
    "pref_groups.valueContent": "Define which glyphs are cousin glyphs\n\n<small>Each line represents one cousin group. If <i>View › Cousins</i> is on and any glyph from a group is current in your Glyph window, all the other glyphs from the group are shown as a cousin stack</small>\n\n<small>To define your custom cousin groups, press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span> to add a new cousin group, and in any line enter Unicode characters or glyph names, separated by spaces</small>",
    "pref_groups.valueShiftX": "Show each glyph in the cousin stack shifted horizontally by this % of UPM",
    "pref_groups.valueShiftY": "Show each glyph in the cousin stack shifted vertically by this % of UPM",
    "pref_metrics.Pref_Metrics": "Look &amp; feel of the Metrics and Kerning modes of the Glyph window.",
    "pref_metrics.checkDirectKerning": "#### Inactive kerning pairs are editable\n\nTo kern a pair in Glyph window <i>Kerning</i> mode by dragging:\n\n‣ **On:** You can immediately drag the 2nd glyph of any pair in your text<br/>‣ **Off:** You need to click the 2nd glyph of a pair to make it current, then you can drag that glyph. <small>To kern another pair, click its 2nd glyph, then drag</small>",
    "pref_metrics.checkHideCursor": "#### Hide cursor while editing kerning\n\n‣ **On:** temporarily hides the pointer while you drag a kerning pair in the <i>Kerning</i> mode",
    "pref_metrics.checkMetrics2Frame": "#### Align text to top-left when spacing mode is activated\n\nIn the Glyph window <i>Metrics</i>, <i>Kerning</i> and <i>Text</i> mode, the text:\n\n‣ **On:** Is always aligned to the top-left corner of the window. <small>The window behaves more like a text editor: you can scroll or pan only if you zoom in</small><br/>‣ **Off:** Behaves the same way as in the editing modes. <small>The window behaves more like a drawing app: you can scroll and pan freely</small>",
    "pref_metrics.checkMetricsArrows": "#### PgUp/PgDn navigate in Metrics Table, Up/down keys change value\n\nWhen you turn on <i>View › Metrics Table</i> in Glyph window and click any text box in the Metrics Table, if this setting is:\n\n‣ **On:** use the <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> and <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> keys to change the value in the field, use <span style=\"font-style: normal; white-space: nowrap;\"><b><small>PG</small>U<small>P</small></b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>PG</small>D<small>N</small></b></span> or <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>FN</small></b>·<b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b><small>FN</small></b>·<b>↓</b></span> to move between the fields<br/>‣ **Off:** use  to move between the fields",
    "pref_metrics.checkMetricsDoubleClick": "#### Double-click in <i>Metrics</i> mode opens glyph for editing\n\n‣ **On:** Double-click a glyph in <i>Metrics</i> mode to open a new Glyph window with that glyph, like in older FontLab.com apps",
    "pref_metrics.checkMetricsFreeMove": "#### Glyph can be dragged within the advance width in Metrics mode\n\nTo change metrics in Glyph window <i>Metrics</i> mode by dragging:\n\n‣ **On:** You can drag the sidebearing lines, or drag the glyph content horizontally within the advance width<br/>‣ **Off:** You can only drag the sidebearing lines",
    "pref_metrics.checkShowSb": "#### Spacing controls show sidebearing values in editing modes\n\nWhen <i>View › Show › Spacing Controls</i> is on, the Glyph window shows the sidebearing lines and, at the bottom of the glyph or window, the numerical advance width (except in Kerning mode).\n\nIn Metrics mode, it also shows the numerical sidebearings. When this setting is:\n\n‣ **On:** shows the numerical sidebearings in all editing modes of the Glyph window<br/>‣ **Off:** shows the numerical advance width in all editing modes of the Glyph window, but shows the numerical sidebearings only in the Metrics mode",
    "pref_metrics.checkSmartNavigation": "#### Smart navigation with the up/down arrow keys\n\nThe <span style=\"font-style: normal; white-space: nowrap;\"><b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span> arrow keys in <i>Metrics</i> and <i>Kerning</i> mode:\n\n‣ **On:** go to the previous / next line; if the line is first or last, get the previous / next phrase<br/>‣ **Off:** go to the previous / next line of the Glyph window text",
    "pref_metrics.checkStrokeSpacing": "#### Ignore Stroke thickness when calculating sidebearings\n\nIf you apply a stroke to a glyph via the <i>Stroke</i> panel, FontLab calculates the sidebearings (incl. expressions) based on:\n\n‣ **On:** Just the contours, **ignoring** the stroke thickness. <small>The ink box of the glyph is slightly narrower, and does not change when you change the stroke thickness</small><br/>‣ **Off:** The contours **including** the stroke thickness. <small>The ink box of the glyph is slightly wider, and changes when you change the stroke thickness</small>\n\n<small>If you apply the <i>Power Stroke</i> filter, the stroke not ignored regardless of this setting.</small>",
    "pref_metrics.colorKerning": "Choose a custom color for the Glyph window **background in <i>Kerning</i>** mode",
    "pref_metrics.colorMetrics": "Choose a custom color for the Glyph window **background in <i>Metrics</i>** mode",
    "pref_metrics.colorMetricsLines": "Choose a custom color for the vertical **sidebearing lines** visible in the <i>Metrics</i> mode, and in other modes if you turn on <i>View › Show › Spacing Controls</i>",
    "pref_metrics.label_10": "@pref_metrics.valueAuditKerningExceptions",
    "pref_metrics.label_11": "@pref_metrics.valueAuditKerningExceptions",
    "pref_metrics.label_18": "@pref_metrics.valuePantograph",
    "pref_metrics.label_19": "@pref_metrics.valuePantograph",
    "pref_metrics.label_5": "@pref_metrics.colorMetricsLines",
    "pref_metrics.label_6": "@pref_metrics.colorMetrics",
    "pref_metrics.label_7": "@pref_metrics.colorKerning",
    "pref_metrics.label_8": "Tolerance 1:",
    "pref_metrics.label_9": "Tolerance 2:",
    "pref_metrics.restoreTolerance1": "Restore",
    "pref_metrics.restoreTolerance2": "Restore",
    "pref_metrics.selectorDirectKerning": "@pref_metrics.checkDirectKerning",
    "pref_metrics.selectorHideCursor": "@pref_metrics.checkHideCursor",
    "pref_metrics.selectorMetrics2Frame": "@pref_metrics.checkMetrics2Frame",
    "pref_metrics.selectorMetricsArrows": "@pref_metrics.checkMetricsArrows",
    "pref_metrics.selectorMetricsDoubleClick": "@pref_metrics.checkMetricsDoubleClick",
    "pref_metrics.selectorMetricsFreeMove": "@pref_metrics.checkMetricsFreeMove",
    "pref_metrics.selectorShowSb": "@pref_metrics.checkShowSb",
    "pref_metrics.selectorSmartNavigation": "@pref_metrics.checkSmartNavigation",
    "pref_metrics.selectorStrokeSpacing": "@pref_metrics.checkStrokeSpacing",
    "pref_metrics.valueAuditKerningExceptions": "#### Minimal distance for Audit kerning exceptions\n\nWhen you run <i>Audit Exceptions</i>, FontLab checks all glyph combinations for each class-based kerning pair (<i>Font › Kerning</i>: all pairs in the current font master, <i>Kerning panel › <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span></i>: pairs selected in the panel)\n\n<small>If it finds combinations that are closer than this minimal distance, it shows a dialog where you can <i>Review</i> those pairs in a Kerning window, and you can <i>Add exceptions</i> with values adjusted to fit this minimal distance. Set this value in % of UPM, so 1 % is the minimal distance of 10 units in a 1000 UPM font</small>",
    "pref_metrics.valuePantograph": "#### Metrics and kerning editing changes value by 1/n of dragging distance\n\nIf the value is larger than `1`, you can drag to precisely adjust metrics and kerning even at far zoom levels:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> sidebearing line or a glyph in the <i>Metrics</i> mode or kerning pair in the <i>Kerning</i> mode: change in the metrics / kerning is this fraction of dragged distance.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: change is the same as dragged distance.\n\n<small>Reasonable values are between `4` and `10`.</small>",
    "pref_newfont.Pref_NewFont": "Preferences: New font",
    "pref_newfont.checkBackground": "Create \"Background\" layer",
    "pref_open.Pref_Open": "Fine-tune how FontLab opens a font. Use original or friendly glyph names. Convert TT contours. Detect components. Decompile OpenType features and tables. Restore windows, tabs &amp; panels.",
    "pref_open.actionConversion_Preferences": "Conversion Preferences",
    "pref_open.buttonExcludeReset": "If you’ve customized the list of tables that will not be imported into Tables panel, click here to reset the list to FontLab default",
    "pref_open.checkCompileFeatures": "**Test**:  When you open a font in a format that stores the source FEA syntax for OpenType feature definitions (`.vfb`, `.ufo`, `.glyphs`):\n\n‣ **On:**  Compiles the feature definitions, and reports problems to the <i>Output</i> panel",
    "pref_open.checkConvertCurves": "**Convert TrueType curves to PostScript curves**:  When you open a font with TrueType curves\n\n ‣ **On:** Converts them into PostScript curves using the <i>Curve Conversion</i> preferences",
    "pref_open.checkConvertNames": "**Change glyph names**:  When you open a font in a production format (`.otf`, `.ttf`, Type 1):\n\n‣ **On:** Renames glyphs to one of the selected naming schemes: <i>friendly</i>, <i>production</i>, <i>alternative</i> or <i>uniXXXX</i>\n\n‣ **Off:** Keeps glyph names as they are found in the font. If the font uses no glyph names, renames them to the <i>production</i> scheme.\n\n<small>When you open a font in a development format (.vfc, .vfj, .vfb, .fog, .ufo, .glyphs), FontLab always keeps the glyph names as they are found in the font.</small>",
    "pref_open.checkDecompileFeatures": "**Decompile to Features panel**:  When you open an OpenType font, FontLab always decompiles all positioning features from the `GPOS` table, and converts them into feature definitions in the FEA syntax that you can edit in the <i>Features</i> panel, and also into visual kerning and visual anchors\n\n‣ **On:** Also decompiles the OpenType substitution features from the binary `GSUB` table into the <i>Features</i> panel",
    "pref_open.checkDecompileTables": "FontLab provides graphical user interfaces for most, but not all, data structures (tables) of the OpenType format\n\nWhen you open an OpenType font:\n\n‣ **On:** FontLab converts all OpenType tables **except** those listed below into TTX-compatible XML syntax and puts them in the <i>Tables</i> panel",
    "pref_open.checkDecompose": "**Detect composites**:  When you open a non-VFC/VFJ font that has no components (for example an `.otf`):\n\n ‣ **On:** Finds identical contours, and replaces them with **components** if a source glyph can be found, and **element references** if a source glyph cannot be found\n\n<small>Detect composites at any moment with <i>Font › Detect Composites</i></small>",
    "pref_open.checkDetectGenius": "**Detect Genius nodes**:  \n\n‣ **On:** Assigns the Genius property to nodes that have G2 continuity",
    "pref_open.checkDetectServant": "**Detect Servant nodes**:  \n\n‣ **On:** Explicitly assigns the X-Servant or Y-Servant property to nodes that should follow if you move some key nodes\n\nWhen you turn on <i>Contour › Power Nudge</i>, FontLab uses the same method but makes some nodes Servants only temporarily",
    "pref_open.checkDetectZoneTags": "**Map zones to specific glyphs using tags**:  \n\n‣ **On:** When you open a non-VFC/VFJ font, automatically assigns tags to alignment zones",
    "pref_open.checkFeaturesPrefix": "**All lookups to Prefix**:  When FontLab decompiles binary OpenType features:\n\n‣ **On:** Lists all lookup definitions as named FEA lookups in the <i>Prefix</i> section of the <i>Features</i> panel<br/>‣ **Off:** Folds most lookup definitions into the FEA feature definition entries in the <i>Features</i> panel, and does not name them. If lookups are re-used or their order is complex, writes them as named FEA lookups",
    "pref_open.checkFeaturesSimplify": "**Simplify substitution rules**:  When FontLab decompiles binary OpenType features, it converts each class-based `GSUB LookupType 1` one-to-one substitution:\n\n‣ **On:** into a series of simple `sub glyph1 by glyph2` rules<br/>‣ **Off:** into a classed-based `sub @class1 by @class2` rule, and uses named or unnamed classes depending on the <i>Classes with</i> settings",
    "pref_open.checkGlyphsRestoreTabs": "**Restore tabs from Glyphs**:  \n\n‣ **On:** If you open a Glyphs file that includes saved tabs / windows (typically additional Glyph tabs), opens these tabs with their stored texts",
    "pref_open.checkNonSpacing": "**Detect Nonspacing components**:  When a component is **nonspacing**, it is visible, it exports, but it is ignored when showing sidebearings, calculating linked metrics, or copying metrics with Paste Special. When you open a non-VFC/VFJ font:\n\n‣ **On:** in every composite glyph, makes a component nonspacing if its source glyph is a nonspacing mark, a modifier symbol or an OpenType `GDEF` mark",
    "pref_open.checkOpenRestorePanels": "**Restore panels from VFC/VFJ**:  \n\n‣ **On:** If you open a VFC or VFJ that includes saved panels, opens these panels in their saved layout\n\n<small>Use <i>Preferences › Save Fonts</i> to choose whether to include panels in VFC/VFJ</small>",
    "pref_open.checkOpenRestoreWindows": "**Restore windows and tabs from VFC/VFJ**:  \n\n‣ **On:** If you open a VFC or VFJ that includes saved tabs / windows (typically additional Glyph windows), opens these windows with their stored texts\n\n<small>Use <i>Preferences › Save Fonts</i> to choose whether to include windows / tabs in VFC/VFJ</small>",
    "pref_open.checkRenameCID": "**Change CID to names**:  When you open a CID-keyed PostScript font (`.otf` or Type 1), typically a CJK font:\n\n‣ **On:** Renames the glyphs that are mapped to Unicode codepoints to one of the selected naming schemes: <i>friendly</i>, <i>production</i>, <i>alternative</i> or <i>uniXXXX</i>\n\n‣ **Off:** Builds the glyph names like `cidNNN` where `NNN` is the decimal CID",
    "pref_open.label": "FontLab can detect smart nodes when you open a non-VFC/VFJ font",
    "pref_open.labelGlyphNames": "Choose how FontLab treats **glyph names** and **CID** when it opens a non-VFC/VFJ font",
    "pref_open.labelZones": "Choose how FontLab treats **alignment zones** when it opens a non-VFC/VFJ font",
    "pref_open.label_12": "When FontLab decompiles binary OpenType features, it converts `GSUB` classes with more glyphs than the <i>OT class conversion threshold</i> to unnamed FEA classes, and converts larger classes according to the <i>OT class conversion method</i> setting",
    "pref_open.label_2": "Choose how FontLab treats the **OpenType Layout features** when it opens a non-VFC/VFJ font",
    "pref_open.label_3": "Choose how FontLab treats **glyph contours** and CID when it opens a non-VFC/VFJ font",
    "pref_open.label_4": "Choose how FontLab treats **components** when it opens a non-VFC/VFJ font",
    "pref_open.label_5": "Choose how FontLab treats binary **SFNT (OpenType) tables** when it opens an OpenType or TrueType font",
    "pref_open.label_7": "Choose which workspace elements should be restored (shown in your user interface) when you open a VFC or VFJ file that includes saved workspace data\n\n<small>Use <i>Preferences › Save › Save to VFC/VFJ</i> to include windows/panels in a VFC/VFJ when you save / export</small>",
    "pref_open.radioComponents": "This activates the **component mode** of FontLab<br/>‣ When you open a TTF, UFO, VFB or Glyphs font, composite glyphs will use components<br/>‣ User interface is optimized for working with components\n\nYou can still use element references in this mode",
    "pref_open.radioToElements": "This activates the **references mode** of FontLab<br/>‣ When you open a TTF, UFO, VFB or Glyphs font, converts components to element references<br/>‣ User interface is optimized for working with element references",
    "pref_open.selectorConversionSettings": "@pref_open.checkConvertCurves",
    "pref_open.selectorConvertCurves": "@pref_open.checkConvertCurves",
    "pref_open.selectorConvertNames1": "@pref_open.checkConvertNames",
    "pref_open.selectorDecompose": "@pref_open.checkDecompose",
    "pref_open.selectorDetectGenius": "@pref_open.checkDetectGenius",
    "pref_open.selectorDetectServant": "@pref_open.checkDetectServant",
    "pref_open.selectorDetectZoneTags": "@pref_open.checkDetectZoneTags",
    "pref_open.selectorFeaturesClasses": "**OT class conversion method**:  When FontLab decompiles binary OpenType features, it converts `GSUB` classes with more glyphs than the <i>OT class conversion threshold</i>:\n\n‣ <i>Classes panel</i>: to named OT Classes in the Classes panel, so you can edit them visually<br/>‣ <i>Features Prefix</i>: to named FEA classes (`@name`) in the <i>Prefix</i> section of the <i>Features</i> panel<br/> ‣ <i>Feature definitions</i>: to unnamed FEA classes (`[a b c`]) directly in the feature definitions that use them — same as classes below the threshold",
    "pref_open.selectorGlyphsRestoreTabs": "@pref_open.checkGlyphsRestoreTabs",
    "pref_open.selectorNiceNames": "When you open a font in a production format, renames glyphs or CID (depending on the settings) to the this naming scheme:\n\n‣ <i>friendly</i>: human-readable names suitable for design work<br/>‣  <i>production</i>: compatible with Adobe recommendations for shipping fonts; human-readable for Western glyphs, <i>uniXXXX</i> for most other glyphs<br/>‣ <i>alternative</i>: human-readable names frequently used in `.glyphs` files<br/>‣ <i>uniXXXX</i>: algorithmic names derived from the Unicode codepoints; `uni` prefix for 4-digit Unicodes, `u` prefix for 5-digit Unicodes\n\n<small>When you open a font in a development format (.vfc, .vfj, .vfb, .fog, .ufo, .glyphs), FontLab always keeps the glyph names as they are found in the font.</small>",
    "pref_open.selectorNonSpacing": "@pref_open.checkNonSpacing",
    "pref_open.selectorOpenRestorePanels": "@pref_open.checkOpenRestorePanels",
    "pref_open.selectorOpenRestoreWindows": "@pref_open.checkOpenRestoreWindows",
    "pref_open.selectorRenameCID": "@pref_open.checkRenameCID",
    "pref_open.valueFeatureClassCount": "**OT class conversion threshold**:  When FontLab decompiles binary OpenType features, it converts `GSUB` classes\n\n‣ with fewer glyphs than this threshold to unnamed FEA classes (`[a b c`]) directly in the feature definitions that use them<br/>‣ with more glyphs than this threshold according to the next setting, <i>OT class conversion method</i> <br/>‣ default: `8`",
    "pref_open.valueImportExclude": "FontLab provides graphical user interfaces for most, but not all, data structures (tables) of the OpenType format\n\nWhen you open an OpenType font and <i>Decompile to XML in Tables panel except</i> is **on**, FontLab converts all OpenType tables **except** those listed here into TTX-compatible XML syntax and puts them in the <i>Tables</i> panel\n\nRemove table tags from the list to import them into the Tables panel, add table tags to not import their low-level representation",
    "pref_operations.Pref_Operations": "Behaviors when creating new glyphs, separating images. Additional tweaks.",
    "pref_operations.buttonBrowseNamFileName": "Your custom `.nam` file needs to conform to a defined syntax\n\n<small>MORE: Help › User Manual</small>",
    "pref_operations.buttonResetNamFileName": "After you restart FontLab, it will use the default `standard.nam` bundled with FontLab",
    "pref_operations.buttonShowNamFileName": "Show current `.nam` mapping file in Finder / File Explorer",
    "pref_operations.checkCreateDynamic": "#### Create auto layers when you create glyphs\n\nWhen you create a new glyph and <i>add components</i> is turned on:<br/>‣ **On:** generates all glyph layers as auto layers, so their contents will automatically update when you add or modify the glyphs that are used as component sources in the auto layers",
    "pref_operations.checkCreateGenerate": "#### Add components when you create glyphs\n\nWhen you <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> a Font window cell or when you use <i>Font › New Glyph</i> or <i>› Generate Glyphs</i> or <i>› Add Glyphs</i> or when you use other methods to create a new glyph:<br/>‣ **On:** tries to generate its content in all font masters: creates glyph layers, and adds components if the glyph has a known recipe",
    "pref_operations.checkFriendlyEncoding": "When an Encoding filter is active in Font window, and you add a glyph in an empty filter cell (<span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> or <i>Font › Create Glyph</i>), the new glyph gets the name: ‣ **On:** specified by the above setting, **Off:** specified in the Encoding (`.enc` file).\n\n<small>When  <i>Preferences › Font Window › Encoding filters find synonyms</i> is **off** and the new name does not match the name specified in the Encoding, the new glyph will appear outside the Encoding filter. If <i>Encoding filters find synonyms</i> is **on**, the new glyph will appear inside the filter.</small>",
    "pref_operations.checkLockComposites": "If you <i>Detect</i> element references:\n\n‣ **On:** If FontLab finds a “primary” element reference, it locks all detected references except the primary. When you double-click a locked reference, the glyph with the unlocked reference opens for editing\n\n‣ **Off:** FontLab keeps all detected references unlocked. When you double-click a reference, you can edit it in-place.",
    "pref_operations.checkMergeOverlap": "‣ Turn **on** if separation splits glyph images like “%”, where there is a horizontal overlap of the bounding boxes, or glyph images made of separate close-by elements (like dots), but you’d prefer to keep them merged<br/>‣ Turn **off** if separation produces too large elements that include several glyph images next to one another",
    "pref_operations.checkMergeStacked": "‣ Turn **on** if separation splits fragments that are on top of other fragments, such as the dot over the “i”, but you’d prefer to keep them merged<br/>‣ Turn **off** if separation merges together fragments that are above one another, but actually belong to separate glyphs",
    "pref_operations.checkOCR": "‣ **On:** When you do <i>Element › Image › Separate and Trace</i>, FontLab uses the built-in OCR modules to recognize what letter each element represents, and assigns names to the elements accordingly. Turn on the OCR modules you’d like to use (currently: English and/or Russian)",
    "pref_operations.checkSeparateStrings": "‣ Turn **on** if the glyph shapes on your artwork sit on a common baseline<br/>‣ Turn **off** if the glyph shapes on your artwork are irregularly arranged and don’t sit on a common baseline",
    "pref_operations.labelPowerGuides": "@pref_operations.selectorPowerGuides",
    "pref_operations.labelPowerGuides_2": "Decide how FontLab creates glyphs when you:\n\n‣ Double-click a missing glyph cell in the Font window\n\n‣> or use <i>Font › New Glyphs</i> or <i>Add Glyphs</i>",
    "pref_operations.labelPowerGuides_3": "@pref_operations.checkLockComposites",
    "pref_operations.labelPowerGuides_4": "Control how FontLab separates an image or vector artwork into smaller pieces on <i>Element › Optically Separate</i>",
    "pref_operations.label_2": "@pref_operations.selectorPowerGuides",
    "pref_operations.selectorConvertNames2": "@pref_operations.selectorNiceNames",
    "pref_operations.selectorNiceNames": "When you generate a new glyph name or add a new glyph for a Unicode character, FontLab uses this naming scheme:\n\n‣ <i>friendly</i>: human-readable names suitable for design work<br/>‣  <i>production</i>: compatible with Adobe recommendations for shipping fonts; human-readable for Western glyphs, <i>uniXXXX</i> for most other glyphs<br/>‣ <i>alternative</i>: human-readable names frequently used in `.glyphs` files<br/>‣ <i>uniXXXX</i>: algorithmic names derived from the Unicode codepoints; `uni` prefix for 4-digit Unicodes, `u` prefix for 5-digit Unicodes\n\n<small>Works with empty Font window cells with Unicode-based filters (Script, Unicode Range, Codepage), with <i>Add Glyphs</i>, <i>Generate Glyphs</i>, <i>Rename Glyph</i> and <i>Glyph</i> panel <i>Update glyph name</i></small>",
    "pref_operations.selectorPowerGuides": "Choose which guides are used to link nodes to when you use <i>Glyph › Add Power Guides</i>. Choose between:<br/>‣ <i>only element guides</i><br/>‣ <i>element and glyph guides</i> (default)<br/>‣ <i>element, glyph and font guides</i><br/>‣ <i>element, glyph and font guides and zones</i>",
    "pref_operations.valueNamFileName": "The `.nam` file maps Unicode codepoints to default glyph names and their synonyms. FontLab uses it to generate Unicode codepoints based on a glyph name, to generate glyph names based on Unicodes, to generate friendly (human-readable) names various glyphs, and to find synonyms when you search for a glyph.\n\nDefault is `standard.nam` bundled with FontLab",
    "pref_paste.Pref_Paste": "Scale and shift of duplicated or pasted glyph contours, and of imported or pasted images or vector artwork. Treatment of fill & stroke in vector artwork",
    "pref_paste.buttonPasteAlign": "Scales **vectors** so that 1 pt/px = 1 font unit, places at origin (0,0)\n\nScales **images** so that 1 pixel = 1 font unit, places at origin",
    "pref_paste.buttonPasteAscenderDescender": "Scales **vectors** to vertically fit between Descender and Ascender, places at Descender\n\nScales **images** so that 1 pixel = 1 font unit, places at (0, Descender)",
    "pref_paste.buttonPasteCapsBaseline": "Scales **vectors** to vertically fit between Baseline and Caps Height, places at Baseline\n\nScales **images** so that 1 pixel = 1 font unit, places at origin (0,0)",
    "pref_paste.buttonPasteCapsDescender": "Scales **vectors** to vertically fit between Descender and Caps Height, places at Descender\n\nScales **images** so that 1 pixel = 1 font unit, places at (0, Descender)",
    "pref_paste.buttonPasteNoscale": "Scales **vectors** so that 1 pt/px = 1 font unit. Places AI vector artwork at the same position in font units as the artwork had in points on global rulers. Places other vectors at origin (0,0)\n\nScales **images** so that 1 pixel = 1 font unit, places at origin",
    "pref_paste.buttonPasteUPM": "Scales **vectors** to vertically fit between Descender and Units Per eM (UPM) value, places at Descender\n\nScales **images** so that 1 pixel = 1 font unit, places at (0, Descender)",
    "pref_paste.checkColor": "When you <i>File › Import › Artwork</i> or drag-drop vector artwork in `.pdf` or `.ai` format, or copy-paste from a vector graphics app (Adobe Illustrator, Affinity Designer, Sketch):\n\nFontLab creates **separate color elements** for all paths that have a unique fill or stroke. Choose this if you make a **color font**",
    "pref_paste.checkContourPasteVisual": "If you’ve applied a transformation such as scale, rotation or slant to an element, and you copy a contour selection from that element, and paste it inside another element, the pasted contours:\n\n‣ **On:** will be visually identical to the original appearance — FontLab applies the transformation of the original element<br/>‣ **Off:** will look as if the original element did not have any transformation",
    "pref_paste.checkIgnoreAppearance": "When you <i>File › Import › Artwork</i> or drag-drop vector artwork in `.pdf` or `.ai` format, or copy-paste from a vector graphics app (Adobe Illustrator, Affinity Designer, Sketch):\n\nFontLab combines all paths into a single monochrome element with **simple editable contours**, and ignores fill & stroke. Choose this if you make a **traditional monochrome font**",
    "pref_paste.checkPasteEPS": "When you copy-paste from Adobe Illustrator or another vector graphics app that puts several formats into the clipboard:\n\n‣ **On:** Pastes using the **AICB** format. With <i>Keep position if possible</i>, retains the global ruler **position** in points. With <i>Keep stroke and colors</i>, pastes a group where all compound paths with the same fill & stroke make one element\n\n‣ **Off**: Pastes using the **PDF** format. Better supports clipping paths and complex fills. With <i>Keep artwork size</i>, aligns the bottom-left corner to the origin (0,0). With <i>Keep stroke and colors</i>, pastes a group where each compound path is one element\n\n<small>When only PDF or only AICB is in the clipboard, FontLab uses that format</small>",
    "pref_paste.label": "When you:\n\n‣ **paste vector** artwork copied from a drawing app: it will be **scaled** and **aligned**<br/>‣ **paste** or **import** an **image**: it be scaled so that 1 pixel = 1 font unit, but will be **aligned**<br/>‣ **import vector** artwork from a PDF, EPS or SVG file: it will be **scaled** and **aligned**<br/>‣ **drag-drop vector** artwork from a PDF, EPS or SVG file into the Glyph window: it will be **scaled**\n\naccording to these settings",
    "pref_paste.labelColor": "Choose how FontLab should import **vector artwork** when you <i>File › Import › Artwork</i> or drag-drop a `.pdf` or `.ai` file, or when you copy-paste from a vector graphics app, or from another font editor\n\nDoes not apply to bitmap images",
    "pref_paste.labelFit": "Choose these settings to place (align) the bottom of a **bitmap image** or **vector artwork** at a specific Font Dimension line, and to scale (fit) the vector artwork when you <i>File › Import › Artwork</i> a `.pdf`, `.ai` or bitmap image file, or when you copy-paste from an image editing app, from a vector graphics app, or from another font editor\n\nWhen you drag-drop, FontLab places the artwork where you drop it",
    "pref_paste.labelSize": "Choose these settings to keep the size of a **bitmap image** (1 px = 1 font unit) and of **vector artwork** (1 pt/px = 1 font unit) when you <i>File › Import › Artwork</i> a `.pdf`, `.ai` or bitmap image file, or when you copy-paste from an image editing app, from a vector graphics app, or from another font editor\n\nWhen you drag-drop, FontLab places the artwork where you drop it",
    "pref_paste.label_15": "When you select contours or elements in the Glyph window and choose <i>Edit › Duplicate</i>, a copy will be placed with this horizontal and vertical offset in font units. Default: `100`•`50`.",
    "pref_paste.label_16": "When you select contours or elements in the Glyph window and choose <i>Edit › Copy</i>, then <i>Paste</i>, a copy will be placed with this horizontal and vertical offset in font units. Default: `0`•`0`.",
    "pref_paste.selectorColor": "@pref_paste.checkColor",
    "pref_paste.selectorContourPasteVisual": "@pref_paste.checkContourPasteVisual",
    "pref_paste.selectorIgnoreAppearance": "@pref_paste.checkIgnoreAppearance",
    "pref_paste.selectorPasteAlign": "@pref_paste.buttonPasteAlign",
    "pref_paste.selectorPasteAscenderDescender": "@pref_paste.buttonPasteAscenderDescender",
    "pref_paste.selectorPasteCapsBaseline": "@pref_paste.buttonPasteCapsBaseline",
    "pref_paste.selectorPasteCapsDescender": "@pref_paste.buttonPasteCapsDescender",
    "pref_paste.selectorPasteEPS": "@pref_paste.checkPasteEPS",
    "pref_paste.selectorPasteNoscale": "@pref_paste.buttonPasteNoscale",
    "pref_paste.selectorPasteUPM": "@pref_paste.buttonPasteUPM",
    "pref_paste.separatorPosition": "•",
    "pref_paste.separatorPosition_2": "•",
    "pref_paste.valueDuplicateOffsetX": "Duplicate offset: horizontal: When you select contours or elements in the Glyph window and choose <i>Edit › Duplicate</i>, a copy will be placed with this horizontal offset in font units. Default: `100`.",
    "pref_paste.valueDuplicateOffsetY": "Duplicate offset: vertical: When you select contours or elements in the Glyph window and choose <i>Edit › Duplicate</i>, a copy will be placed with this vertical offset in font units. Default: `50`.",
    "pref_paste.valuePasteOffsetX": "Copy / Paste offset: horizontal: When you select contours or elements in the Glyph window and choose <i>Edit › Copy</i>, then <i>Paste</i>, a copy will be placed with this horizontal offset in font units. Default: `0`.",
    "pref_paste.valuePasteOffsetY": "Copy / Paste offset: vertical: When you select contours or elements in the Glyph window and choose <i>Edit › Copy</i>, then <i>Paste</i>, a copy will be placed with this vertical offset in font units. Default: `0`.",
    "pref_save.Pref_Save": "Save locations. Backups. Autosave. Saving UI configuration. Bitmap color font export.",
    "pref_save.buttonAutosaveFolder": "Reveal (open) the autosave folder in Finder / File Explorer\n\n<small>The autosave folder is<br/>‣ `~/Library/Application Support/FontLab/FontLab 8/Autosave` on macOS<br/>‣ `%userprofile%\\AppData\\Local\\Fontlab\\FontLab 8\\Autosave` on Windows</small>",
    "pref_save.buttonFolder": "Choose the folder in which fonts will be saved if this setting is chosen",
    "pref_save.checkAutosave": "@pref_save.valueAutosave",
    "pref_save.checkBackupFolder": "If <i>Existing font files</i> is <i>Rename</i> and you save:\n\n‣ **On:** FontLab saves the backup files in a `.backup` subfolder<br/>‣ **Off:** FontLab saves the backup files in the same folder as the file",
    "pref_save.checkSavePanelsVFC": "‣ **On:** When you save / export the font as <i>FontLab Compact (VFC)</i>, the file will include the positions of the open **panels**\n\n<small>When you open the VFC, FontLab restores the included panels if <i>Preferences › Open Fonts › VFC/VFJ › Restore › Panels</i> is on</small>",
    "pref_save.checkSavePanelsVFJ": "‣ **On:** When you save / export the font as <i>FontLab JSON (VFJ)</i>, the file will include the positions of the open **panels**\n\n<small>When you open the VFJ, FontLab restores the included panels if <i>Preferences › Open Fonts › VFC/VFJ › Restore  › Panels</i> is on</small>",
    "pref_save.checkSaveSessionVFJ": "When you save / export the font as <i>FontLab JSON (VFJ)</i>, or if you turn on <i>Preferences › Save Fonts › Save VFJ when saving VFC</i> and save, the VFJ file:\n\n‣ **On:** will include timestamps of last modification of the glyphs\n\n‣ **Off:** will not include timestamps, which makes the VFJ more suitable for version control systems",
    "pref_save.checkSaveWindowsVFC": "‣ **On:** When you save / export the font as <i>FontLab Compact (VFC)</i>, the file will include the content of the open Font and glyph **windows**\n\n<small>When you open the VFC, FontLab restores the included windows if <i>Preferences › Open Fonts › VFC/VFJ › Restore › Windows and tabs</i> is on</small>",
    "pref_save.checkSaveWindowsVFJ": "‣ **On:** When you save / export the font as <i>FontLab JSON (VFJ)</i>, the file will include the content of the open Font and glyph **windows**\n\n<small>When you open the VFJ, FontLab restores the included windows if <i>Preferences › Open Fonts › VFC/VFJ › Restore › Windows and tabs</i> is on</small>",
    "pref_save.editFolder": "When you create a new font, or open a font in a format other than VFC/VFJ, and choose <i>File › Save</i>, FontLab saves the font in this folder if this setting is selected",
    "pref_save.label": "@pref_save.valuePPM",
    "pref_save.labelAutosave": "@pref_save.valueAutosave",
    "pref_save.labelBitmap": "Choose how FontLab should export contours into bitmap-based font formats (OT+sbix, OT+CBDT)",
    "pref_save.labelBitmap2": "@pref_save.valuePPM",
    "pref_save.labelExistingFiles": "Choose what FontLab does with the older VFC/VFJ files when you save again",
    "pref_save.labelFirstSave": "Choose how FontLab saves the file when you create a new font or you open a font in a format other than VFC/VFJ, and choose <i>File › Save</i>",
    "pref_save.labelVFC": "Choose if your workspace should be included inside your <i>FontLab Compact (VFC)</i> file when you save / export into that format\n\n<small>When you open a VFC, FontLab restores windows / panels if <i>Preferences › Open Fonts › VFC/VFJ › Restore</i> is on</small>",
    "pref_save.labelVFJ": "Choose if your workspace should be included inside your <i>FontLab JSON (VFJ)</i> file when you save / export into that format\n\n<small>When you open a VFJ, FontLab restores the included windows / panels if ==Preferences > Open Fonts > VFC/VFJ >Restore == is on</small>",
    "pref_save.optionJsonFormatting": "When you save or export into the VFJ format:\n\n‣ **On:** The saved JSON will be **prettified**: it will be larger but more human-readable thanks to line breaks and indentations<br/>‣ **Off:** The saved JSON will be **minified**: it will be smaller but less human-readable",
    "pref_save.optionVFJ": "Whenever you save as `.vfc`, FontLab also saves a JSON-compatible `.vfj` file in the same folder. The VFJ contains the same information as the VFC save format but is human-readable\n\nCustomize what is saved in <i>Include in VFJ</i>, turn on <i>Add indentation</i>  for prettified JSON",
    "pref_save.radioFontAskFileName0": "**First save is in specified folder with autogenerated file name**: When you create a new font, or open a font in a format other than VFC/VFJ, and choose <i>File › Save</i>, FontLab saves the font in the specified folder with an automatically generated file name",
    "pref_save.radioFontAskFileName1": "**Ask for location and file name on first save**: When you create a new font or open a font in a format other than VFC/VFJ, and choose <i>File › Save</i>, FontLab shows a <i>Save As</i> dialog that lets you choose the save location and file name",
    "pref_save.radioFontAskFileName2": "**First save is in source folder with autogenerated file name**: When you open a font in a format other than VFC/VFJ, and choose <i>File › Save</i>, FontLab saves the font in the same folder as the source font, with an automatically generated file name\n\nWhen you create a new font, and choose <i>File › Save</i>, FontLab saves the font in the folder specified below",
    "pref_save.selectorAutosave": "@pref_save.valueAutosave",
    "pref_save.selectorConflict": "**Rename, Move to trash or Overwrite existing font files on save**: When you save, and a same-named file exists in the save location, FontLab can <i>Overwrite</i> the existing file, <i>Move</i> it <i>to trash</i> (recycle bin), or <i>Rename</i> it, creating a **backup**, which has the date and time of the save appended to the file name.\n\nIf <i>Save renamed files in subfolder</i> is on, FontLab saves the backup files in a `.backup` subfolder, otherwise it saves them in the same folder as the working file",
    "pref_save.valueAutosave": "When you turn this **on** and enter a time interval in minutes, when you open a font and modify it, FontLab will start automatically saving a copy of the font in the **autosave folder** (`0.2` will autosave every 12 seconds)\n\n<small>After a crash, FontLab prompts you to open the autosaved files. When you open them, or when you quit the app, FontLab moves the contents of the autosave folder to the Trash/Recycle Bin</small>\n\n<small>The autosave folder is<br/>‣ `~/Library/Application Support/FontLab/FontLab 8/Autosave` on macOS<br/>‣ `%userprofile%\\AppData\\Local\\Fontlab\\FontLab 8\\Autosave` on Windows</small>",
    "pref_save.valuePPM": "When your font does not have a `ppm.NN` layer and you export it into a bitmap font format, all glyphs are rasterized at this PPM\n\n<small>Choose `127` or less to export into the OpenType CBDT format</small>",
    "pref_strings.Pref_Strings": "Texts shown in Preview panel, Fonts panel, in stickers and Sketchboard frames",
    "pref_strings.editIconText": "Edit the text that is used in the <i>Fonts</i> panel",
    "pref_strings.editNewTextBlock": "Edit the text that is used when you add a Sketchboard text frame",
    "pref_strings.editPreviewPanel": "Edit the default text that is used in the <i>Preview</i> panel\n\nUse `@` as a placeholder for current glyph, `@@` to type the at sign",
    "pref_strings.editSticker": "Edit the text that is used when you add a new Text sticker",
    "pref_strings.label": "@pref_strings.editNewTextBlock",
    "pref_strings.label_2": "@pref_strings.editPreviewPanel",
    "pref_strings.label_3": "@pref_strings.editIconText",
    "pref_strings.label_4": "@pref_strings.editSticker",
    "pref_texts.Pref_Texts": "Add, edit and remove texts that you can choose in the Glyph window property bar",
    "pref_texts.buttonAdd": "Add new predefined text: Double-click the name in the list to rename, type the text into the text area",
    "pref_texts.buttonRemove": "Remove selected text from predefined texts",
    "pref_texts.buttonSave": "Save selected text",
    "pref_texts.listWidget": "Double-click: rename a predefined text. Click: edit the text in the text area\n\nTo insert a predefined text into the Glyph window, use the property bar <i>Predefined text</i> dropdown",
    "pref_texts.plainTextEdit": "#### Edit predefined text\n\nUse glyphtext to specify predefined texts.\n\n<small>**Glyphtext**: Unicode text notation mixed with special “escaped” strings that you can use to input glyphs. Enter a series of plain characters like `Ж`. Follow an escaped string or series of strings with a space to enter a plain Unicode character.<br/>‣ `/glyphname`: glyph name or synonym like `Zhe-cy.sc` or `Zhecyr.sc`<br/>‣ `/character.suffix`: variant of a Unicode character like `Ж.sc`<br/>‣ `\\uXXXX`: The Unicode codepoint of a character like `\\u0416`</small>",
    "pref_variations.Pref_Variations": "Behavior of interpolation. Look &amp; feel of masters. Editing behavior with <i>Edit › Match when Editing</i>.",
    "pref_variations.checkInactiveWireframe": "#### Show inactive layers as wireframes\n\nControls how a layer is rendered when it is **not current** and it is **visible** (eye is open) in the <i>Layers &amp; Masters</i> panel. If the preference is:<br/>‣ **On**: Layer is rendered as wireframe in Glyph window editing modes, with the opacity defined here and the settings from <i>Preferences › Glyph window › Inactive</i>. Layer is not rendered in previews. Best for **variable** design.<br/>‣ **Off**: Layer is filled in Glyph window editing modes and in previews (Preview panel, Font window cells, Glyph window Text mode etc.). Best for **multi-color** design.\n\n<small>Current layer is always rendered in Glyph window editing modes using <i>View</i> menu settings, and is fully filled in previews. Invisible non-current layers are not rendered in Glyph window editing modes and in previews.</small>",
    "pref_variations.checkInstanceLayer": "#### Show `#instance` layer\n\n‣ **On:** If the glyph has matching masters, it gets a special layer named `#instance` that contains the current interpolated instance, and is shown in the Glyph window and in the <i>Layers &amp; Masters panel</i>. The `#instance` layer is updated automatically when you use the <i>Variations</i> panel<br/>‣ **Off:** The special `#instance` layer is not generated or shown",
    "pref_variations.checkInterpretLayerName": "#### Guess width / weight axis location from master style attribute or layer name\n\n‣ **On:** if the chosen axes are not defined in <i>Font Info › Axes</i>, FontLab synthesizes those axes and uses <i>Font Info › Names</i> style attributes or glyph layer names such as `Bold` to infer the master location on those axes.<br/>‣ **Off:** if the width / weight axes are not defined, FontLab will not synthesize them and will not infer master locations on them.",
    "pref_variations.checkMastersColor": "#### Preview master color\n\n‣ **On:** The Glyph window will show the color of the current master as assigned in the <i>Layers &amp; Masters panel</i>, either as a bar on top of the window or as the window background.\n\n<small>Use to easier differentiate which master you are working on.</small>\n\n<small><span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> the color column in the <i>Layers &amp; Masters</i> panel to automatically assign unique colors to each master.</small>",
    "pref_variations.checkMatch1": "If <i>Edit › Match when Editing</i> is on and this setting is **on:**<br/>‣ Keeps match when you remove a node on a master.<br/>‣ Removes the corresponding node in all matching masters.<br/>‣ Also keeps match when you delete a contour.",
    "pref_variations.checkMatch2": "If <i>Edit › Match when Editing</i> is on and this setting is **on:**<br/>‣ Keeps match when you add a node to a contour on a master.<br/>‣ Adds a corresponding node in all matching masters\n\nDoes not keep match if you add a new contour (e.g. draw). Select the contour you have drawn and use <i>Edit › Copy to Masters</i> to copy it to all masters.",
    "pref_variations.checkMatch3": "If <i>Edit › Match when Editing</i> is on and this setting is **on:**<br/>‣ Assigns or changes the name of a node in all matching masters.",
    "pref_variations.checkMatch5": "If <i>Edit › Match when Editing</i> is on and this setting is **on**, keeps match when you:<br/>‣ add a guide<br/>‣ rename a guide that already has a name<br/>‣ remove a named guide",
    "pref_variations.checkMatch6": "If <i>Edit › Match when Editing</i> is on and this setting is **on:**<br/>‣ Adds hints to all matching masters if you manually add hints or use <i>Tools › Autohint</i>.",
    "pref_variations.checkMatch7": "If <i>Edit › Match when Editing</i> is on and this setting is **on:**<br/>‣ When you add an anchor, adds corresponding anchors on all matching masters in the same position.<br/>‣ When you remove an anchor, removes same-named anchors from all matching masters",
    "pref_variations.checkMatch9": "If <i>Edit › Match when Editing</i> is on and this setting is **on**, keeps match when you use <i>Contour</i> menu operations:<br/>‣ <i>Set Start Point</i><br/>‣ <i>Reverse Contour</i><br/>‣ <i>Add Smart Corner</i>",
    "pref_variations.checkSmartRound": "#### Smart rounding\n\nWhen you export static instances, interpolation:<br/>‣ **On:** uses the main master’s existing PS hints to regularize stem thicknesses and eliminates “off by one” rounding errors<br/>‣ **Off:** uses traditional simple rounding",
    "pref_variations.label": "@pref_variations.valueBarThickness",
    "pref_variations.label_2": "If <i>Edit › Match when Editing</i> is **on** and you edit a master in the Glyph window, FontLab will repeat the following editing operations in other matching masters so those masters remain interpolation-compatible.\n\n<small>When you have drawn a new contour, use <i>Edit › Copy to Masters</i> to copy the current selection to all other masters.</small>",
    "pref_variations.label_3": "@pref_variations.valueBackgroundBrighness",
    "pref_variations.label_5": "@pref_variations.checkInterpretLayerName",
    "pref_variations.radioColorBackground": "Use the master color as the Glyph window background color, with chosen brightness",
    "pref_variations.radioColorBar": "Show the master color as a horizontal line at the top of the Glyph window, with thickness",
    "pref_variations.selectorCheck1": "@pref_variations.checkMastersColor",
    "pref_variations.selectorCheck2": "@pref_variations.checkInstanceLayer",
    "pref_variations.selectorCheck3": "@pref_variations.checkSmartRound",
    "pref_variations.selectorCheck4": "@pref_variations.checkInterpretLayerName",
    "pref_variations.selectorInactiveWireframe": "@pref_variations.checkInactiveWireframe",
    "pref_variations.selectorInterpretLayerName": "@pref_variations.checkInterpretLayerName",
    "pref_variations.valueBackgroundBrighness": "Set the brightness of the Glyph window background that shows the master color",
    "pref_variations.valueBarThickness": "Set thickness of the horizontal line that to shows the master color",
    "pref_variations.valueInactiveMastersOpacity": "#### Opacity of inactive layers when shown as wireframes\n\nSet the opacity of wireframes when <i>Preferences › Variations › Show inactive layers as wireframes</i> is turned on and multiple layers are visible in <i>Layers &amp; Masters</i> panel.\n\nDrag slider to the left for more transparency, drag to the right for more opacity.",
    "previewpanel.buttonAlignCenter": "**Center**:  Horizontally aligns text to the center",
    "previewpanel.buttonAlignLeft": "**Align left**:  Aligns text to the left",
    "previewpanel.buttonAlignRight": "**Align right**:  Aligns text to the right",
    "previewpanel.buttonContentAnchors": "**Mark attachment by anchors**:  For each base anchor (e.g. `top`) in the current glyph, shows combinations of the current glyph followed by every glyph that contains a matching mark anchor (e.g. `_top`). The marks are positioned via mark attachment.",
    "previewpanel.buttonContentBlock": "#### Echo text\n\n‣ **On**: Preview panel shows the glyphs from the Glyph window, or the glyphs selected in the Font window<br/>‣ **Off**: Panel shows custom text",
    "previewpanel.buttonContentContext": "**Context**:  Shows the current glyph mixed with custom text\n\nClick <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span> to customize the text, use `@` as the placeholder for current glyph, e.g. `nn@oo@HH@OO`",
    "previewpanel.buttonContentMasters": "**Masters**:  Shows masters for current glyph or window text / selection that are set to _visible_ in <i>Layers & Masters</i> panel, or all masters if no master is set to _visible_.\n\nIf Glyph window text or Font window selection has one glyph, the preview is _single-line_. If the text / selection has more glyphs, the preview is _multi-line_.\n\nClick <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span> to choose if for the Glyph window, the preview should always be single-line.",
    "previewpanel.buttonContentReferences": "**Composites**:  Shows the current glyph layer and all glyphs that:<br/>‣ contain a component pointing to the current glyph layer<br/>‣ contain references to the same element as present in the current glyph layer",
    "previewpanel.buttonContentText": "**Custom text**:  Type or paste your custom text directly into the panel.\n\nTurn on <i>abc</i> (<i>Show glyph names</i>) to type into the top text box using glyphtext.\n\n<small>**Glyphtext**: Unicode text notation mixed with special “escaped” strings that you can use to input glyphs. Enter a series of plain characters like `Ж`. Follow an escaped string or series of strings with a space to enter a plain Unicode character.<br/>‣ `/glyphname`: glyph name or synonym like `Zhe-cy.sc` or `Zhecyr.sc`<br/>‣ `/character.suffix`: variant of a Unicode character like `Ж.sc`<br/>‣ `\\uXXXX`: The Unicode codepoint of a character like `\\u0416`</small>",
    "previewpanel.buttonContentTextWaterfall": "**Text waterfall**:  Shows custom text in different sizes, one per line\n\nTurn on <i>Echo text</i> above to show the glyphs from the Glyph window, or the glyphs selected in the Font window\n\nClick <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span> to customize the sizes",
    "previewpanel.buttonContentWaterfall": "**Glyph waterfall**:  Shows the current glyph in different sizes\n\nClick <span style=\"font-style: normal; white-space: nowrap;\"><b>☼</b></span> to customize the sizes",
    "previewpanel.buttonExchange": "#### Swap text color and background color\n\nExchange the **text** (foreground) fill color with the **background** fill color.",
    "previewpanel.buttonFeatures": "#### Apply features\n\n ‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> when **off** or <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>click</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>click</b></span>:  opens the Features selector where you can turn on OpenType processing and apply OpenType features to the Preview panel text<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> when **on**: turns off OpenType processing and features<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: turns on/off  OpenType processing and features",
    "previewpanel.buttonFilter1": "**Invert colors**:  Swaps the Text color and the Background color of the Preview panel",
    "previewpanel.buttonFilter2": "**Blur preview**:  Blurs the rendered preview. Change the blur strength in the next box\n\nUseful to simulate low vision or readability from a large distance",
    "previewpanel.buttonFilter3": "**X-Ray view**:  Renders glyphs as simplified vertical bars\n\nUseful to get an impression of the horizontal rhythm",
    "previewpanel.buttonFlipH": "**Horizontal flip**:  Flips each glyph in the preview horizontally.\n\n<small>‣ Useful to check spacing and spot curve imperfections<br/>‣ Use <i>Tools › Actions</i> to actually flip the glyph content.</small>",
    "previewpanel.buttonFlipV": "**Vertical flip**:  Flips each text line in the preview vertically.\n\n<small>Useful to check spacing and spot curve imperfections.<br/>‣ Use <i>Tools › Actions</i> to actually flip the glyph content.</small>",
    "previewpanel.buttonFollow": "**Echo / Custom text**:  Toggles content between <i>Echo text</i> and <i>Custom text</i>:<br/>‣ <i>Echo text</i> shows the glyphs from the Glyph window, or glyphs selected in the Font window<br/>‣ <i>Custom text</i> allows you to type or paste your custom text\n\n<small>Open the Sidebar and turn on <i>abc</i> (<i>Show glyph names</i>) to type into the top text box using glyphtext.</small>\n\n<small>**Glyphtext**: Unicode text notation mixed with special “escaped” strings that you can use to input glyphs. Enter a series of plain characters like `Ж`. Follow an escaped string or series of strings with a space to enter a plain Unicode character.<br/>‣ `/glyphname`: glyph name or synonym like `Zhe-cy.sc` or `Zhecyr.sc`<br/>‣ `/character.suffix`: variant of a Unicode character like `Ж.sc`<br/>‣ `\\uXXXX`: The Unicode codepoint of a character like `\\u0416`</small>",
    "previewpanel.buttonInstance": "**Preview variation instance**:  Previews the current dynamic instance selected in the <i>Variations</i> panel",
    "previewpanel.buttonLine": "**Preview interpolation**:  Previews interpolation steps along the _interpolation vector_ on the <i>Variations</i> panel <i>Map</i> view. To see the interpolation, choose <i>Echo text</i> or <i>Custom text</i> as <i>Preview</i> panel content, turn on <i>Variations</i> panel and choose <i>Map</i>. If your font has more than two axes, choose two axes on the sides of the map. Drag the two `+` crosses of the gray interpolation vector to choose the start and end point of the interpolation preview.\n\nThis activates the <i>Interpolation</i> button in Preview panel. When this button is on, the panel shows 7 interpolation steps of the current glyph between the end points of the vector.\n\n<small>The panel shows interpolation when the content is <i>Echo text</i> or <i>Custom text</i>, and until you click <i>Preview master</i> or <i>Preview instance</i>. Once you’ve set the interpolation vector, you can click <i>Preview interpolation</i> again to see the interpolation steps.</small>",
    "previewpanel.buttonMaster": "**Preview master**:  Previews the current layer / master selected in the <i>Layers and Masters</i> panel",
    "previewpanel.buttonOutlineNone": "**Fill preview**:  Fills the Preview text with chosen Text color\n\nSimulates normal text rendering in end-user apps",
    "previewpanel.buttonOutlineNormal": "**Medium outline**:  Draws the Preview text with medium outline in chosen Text color, and without fill\n\nUseful to examine the contour structure",
    "previewpanel.buttonOutlineThick": "**Thick outline**:  Draws the Preview text with thick outline in chosen Text color, and without fill\n\nUseful to examine the contour structure",
    "previewpanel.buttonOutlineThin": "**Thin outline**:  Draws the Preview text with thin outline in chosen Text color, and without fill\n\nUseful to examine the contour structure",
    "previewpanel.buttonPanel": "**Sidebar**:  Show / hide the sidebar with Preview panel settings",
    "previewpanel.buttonScale": "**Preview stretch**:  Turns on/off horizontal stretching of the glyph preview by the percentage chosen in the next dropdown\n\n<small>Use <i>Tools › Actions</i> to actually stretch the glyph content</small>",
    "previewpanel.buttonSettings": "**Content settings**: Change the custom text for Context, the sizes for Text waterfall and Glyph waterfall, or the preferences for Masters",
    "previewpanel.buttonShowNames": "**Show glyph names**:  Shows two text boxes at the bottom of the panel\n\n‣ Type into the top text box using glyphtext.<br/>‣ The bottom box shows names of the previewed glyphs (prefixed with `/`), after features have been applied.\n\n<small>**Glyphtext**: Unicode text notation mixed with special “escaped” strings that you can use to input glyphs. Enter a series of plain characters like `Ж`. Follow an escaped string or series of strings with a space to enter a plain Unicode character.<br/>‣ `/glyphname`: glyph name or synonym like `Zhe-cy.sc` or `Zhecyr.sc`<br/>‣ `/character.suffix`: variant of a Unicode character like `Ж.sc`<br/>‣ `\\uXXXX`: The Unicode codepoint of a character like `\\u0416`</small>",
    "previewpanel.buttonShowNodes": "**Show nodes**:  Shows contour nodes on previewed glyphs",
    "previewpanel.buttonSize1": "**1 line**:  Chooses the font size so that one line of text fits vertically into the Preview panel",
    "previewpanel.buttonSize2": "**2 lines**:  Chooses the font size so that two lines of text fit vertically into the Preview panel",
    "previewpanel.buttonSize3": "**3 lines**:  Chooses the font size so that three lines of text fit vertically into the Preview panel",
    "previewpanel.buttonSizeFit": "**Fit text**:  Chooses the font size so that the entire text fits both horizontally and vertically into the Preview panel",
    "previewpanel.buttonSlant": "**Preview slant**:  Turns on/off slanting of the glyph preview by the angle chosen in the next dropdown\n\n<small>Use <i>Tools › Actions</i> to actually slant the glyph content</small>",
    "previewpanel.buttonStroke": "**Preview weight**:  Move the slider to the right to simulate added weight (making the glyphs bolder) by the value. Move it to the left to simulate removed weight (making the glyphs lighter).\n\n<small>Use <i>Tools › Actions › Effects › Bold</i> to actually change the weight.</small>",
    "previewpanel.buttonTracking": "**Preview tracking**:  Previews tracking by the amount of units chosen in the next dropdown\n\n<small>Use <i>Tools › Actions</i> to actually change the glyph metrics</small>",
    "previewpanel.buttonUpload": "**Copy content to window**:  Copies the text shown in the Preview panel to the Glyph window, or selects the glyphs in the Font window",
    "previewpanel.colorBackground": "**Background color**:  Changes the color of the Preview panel background",
    "previewpanel.colorForeground": "**Text color**:  Changes the color of the Preview panel text (glyph fill or outlines)",
    "previewpanel.lineGlyphNames": "**Previewed glyph names**:  Shows names of the previewed glyphs (prefixed with `/`), after features have been applied",
    "previewpanel.selectorContent": "#### Content menu\n\n<i>Echo Text</i>: current glyph(s) from the Glyph window or glyph(s) selected in the Font window. <i>Custom</i>: type or paste your custom text into the panel. <i>Context</i> : current glyph between the reference characters: nn@oo@HH@OO. <i>Text Waterfall</i>: custom text or the current glyph(s) in descending sizes. <i>Glyph Waterfall</i>: current glyph in descending sizes. <i>Composites</i>: all glyphs with the same component as the current glyph. <i>Anchors</i>: all virtual composite glyphs with the current glyph as base",
    "previewpanel.selectorDirection": "**Left to right**: Change text direction",
    "previewpanel.selectorFeatures": "**DELETED**: Open a dialog with a list of all OpenType features in the font",
    "previewpanel.selectorMaster": "Select <i>Active</i> to preview the layer / master selected in Layers and Masters panel, select <i>Instance</i> to preview the “dynamic instance”",
    "previewpanel.selectorOutline": "Outline render: Choose <i>None</i> for regular outline rendering or <i>Thin</i>, <i>Normal</i> or <i>Thick</i> for unfilled outline",
    "previewpanel.selectorSize": "**Font size**:  Choose the font size of the previewed text from a predefined list\n\nYou can also change the font size with pinch or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>-scroll on the main Preview area",
    "previewpanel.selectorSlant": "**Slant angle**:  Turn on <i>Preview slant</i> and choose a predefined angle (from –15° to 15°) to simulate slanting of the previewed glyphs\n\n<small>Use <i>Tools › Actions</i> to actually slant the glyph content</small>",
    "previewpanel.selectorSqueeze": "**Stretch percentage**:  Turn on <i>Preview stretch</i> and choose a predefined percentage (from 70% to 200%) to simulate horizontal stretching of the previewed glyphs\n\n<small>Use <i>Tools › Actions</i> to actually stretch the glyph content</small>",
    "previewpanel.selectorStroke": "**DELETED**: Turn on <i>Preview stroke</i> and change the stroke thickness.<br/>‣ positive thickness draws the stroke in Text color<br/>‣ negative thickness draws the stroke in Background color\n\nUseful for previewing artificial boldening or print smear",
    "previewpanel.selectorTracking": "**Tracking amount**: Turn on <i>Preview tracking</i> and choose a predefined tracking value (from –100 to 100 font units) to simulate added or removed whitespace between glyphs\n\n<small>Use <i>Tools › Actions</i> to actually change the glyph metrics</small>",
    "previewpanel.sliderWidth": "@previewpanel.buttonStroke",
    "previewpanel.valueBlur": "**Blur strength**:  Turn on <i>Blur preview</i> and change the blur strength to blur the rendered preview\n\nUseful to simulate low vision or readability from a large distance",
    "previewpanel.valueGlyphNames": "**Panel text**:  Type the preview panel text using glyphtext.\n\n<small>**Glyphtext**: Unicode text notation mixed with special “escaped” strings that you can use to input glyphs. Enter a series of plain characters like `Ж`. Follow an escaped string or series of strings with a space to enter a plain Unicode character.<br/>‣ `/glyphname`: glyph name or synonym like `Zhe-cy.sc` or `Zhecyr.sc`<br/>‣ `/character.suffix`: variant of a Unicode character like `Ж.sc`<br/>‣ `\\uXXXX`: The Unicode codepoint of a character like `\\u0416`</small>",
    "previewpanel.valueWidth": "@previewpanel.buttonStroke",
    "previewpanel.widgetPreview": "@mainwindow.actionPreviewPanel",
    "pythonpanel.buttonCompile": "**Run script**: Runs the currently edited script. The results appear in the <i>Output</i> panel",
    "pythonpanel.buttonConsole": "**Console panel**: Show / hide the Python console – the interactive Python shell where you can communicate with Python using the command line. Unlike the commands you write in the editor that need to be run before you see any response, you can enter Python commands in the Console and get an immediate response",
    "pythonpanel.buttonMore": "**Scripting panel <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> menu**\n\n<small>‣<i>New Script</i> closes the currently opened script and clears the panel’s contents allowing you to start a new script<br/>‣<i>Open Script</i> closes the current script and opens the standard Open dialog box allowing you to select and open the script file<br/>‣<i>Save Script</i> saves changes to the currently opened script<br/>‣<i>Save Script As</i> saves the current script to a new file<br/>‣<i>Clear Python Context</i> resets the Python dictionary state before running every new script<br/>‣<i>Clear Python Context Now</i> resets the Python dictionary state</small>",
    "pythonpanel.buttonOutput": "**Output panel**: Show / hide the Output panel where results of macro program interpretation appear",
    "pythonpanel.buttonQuery": "**Scripts list**: Show / hide the list of Python scripts in the left part of the panel",
    "pythonpanel.frameTop": "@mainwindow.actionPythonPanel",
    "pythonpanel.scriptsAdd": "**Add scripts folder**: Brings up the standard Open dialog. If the selected folder contains at least one file with a .py extension it will appear in the Scripts list. Any scripts you add here will become available in the <i>Scripts</i> menu, from where you can run them quickly without opening the Scripting panel",
    "pythonpanel.scriptsList": "**Scripts list**: To add a folder with scripts, click the <i>Add scripts folder</i> button below the list. To remove a folder with all its scripts, select it in the list and click the <i>Remove scripts folder</i> button. To update the list contents (after you moved or renamed script files), click the <i>Refresh folders</i> button. To open a script for edit, <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> it in the list",
    "pythonpanel.scriptsRefresh": "**Refresh folders**: Updates the contents of the Scripts list and the <i>Scripts</i> menu after you moved or renamed script files",
    "pythonpanel.scriptsRemove": "**Remove scripts folder**: Removes the selected folder with all its scripts from the list of scripts and the <i>Scripts</i> menu",
    "pythonpanel.searchClear": "**Clear search**: Clears the search field",
    "pythonpanel.searchField": "**Search**: To search within the currently opened script, enter the text and press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>",
    "pythonpanel.textOutput": "**Search**: To search within the currently opened script, enter the text and press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>",
    "quicktipspanel.buttonQuickHelp": "Welcome to **Quick Help**! You are looking at a **help tip** that has tells you about the user interface element that you’re pointing at.\n\nTo **deactivate** Quick Help: tap (briefly press) or release <span style=\"font-style: normal; white-space: nowrap;\"><b>F1</b></span>. To activate Quick Help **temporarily**: **press-and-hold** <span style=\"font-style: normal; white-space: nowrap;\"><b>F1</b></span>. To turn Quick Help **mode on/off**: **tap** <span style=\"font-style: normal; white-space: nowrap;\"><b>F1</b></span>\n\nTo show help tips in **large font size**, turn on <i>Preferences › General › Show keystrokes</i> and <i>Apply</i>\n\n<small>In Quick Help **mode**, explore the user interface with your pointer: we’ve added help tips to many tools and panels (try the <i>Contour</i> tool tool in the Toolbar), with more to come! With Quick Help off, short tool tips appear when you point at some UI element and wait</small>\n\n<small>On macOS, you may need to use <span style=\"font-style: normal; white-space: nowrap;\"><b><small>FN</small></b>·<b>F1</b></span> for Quick Help. To use just <span style=\"font-style: normal; white-space: nowrap;\"><b>F1</b></span>, turn on <i>Apple menu › System Preferences… › Keyboard › Keyboard › Use F1, F2, etc. keys as standard function keys</i></small>",
    "selectionspanel.buttonAdd": "**Add**: Adds the current Glyph window selection as a new stored selection.\n\nClick, type a name, press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>",
    "selectionspanel.buttonRemove": "**Remove stored selection**: Choose item in the list and click this to remove (forget) the stored selection",
    "selectionspanel.buttonUpdate": "**Update stored selection**: Replaces the content of the stored selection with the current Glyph window selection",
    "selectionspanel.frameLegend": "@mainwindow.actionSelectionsPanel",
    "selectionspanel.frameTop": "@mainwindow.actionSelectionsPanel",
    "selectionspanel.list": "@mainwindow.actionSelectionsPanel",
    "shapespanel.buttonArrangeBottom": "@mainwindow.actionShapeToBack",
    "shapespanel.buttonArrangeDown": "@mainwindow.actionShapeDown",
    "shapespanel.buttonArrangeTop": "@mainwindow.actionShapeToFront",
    "shapespanel.buttonArrangeUp": "@mainwindow.actionShapeUp",
    "shapespanel.buttonAutoComponent": "@mainwindow.actionComponentAttached",
    "shapespanel.buttonCenter": "#### Center in metrics\n\nCenter the component / element within the advance width.\n\n<small>To revert the element to its original position, click <i>Reset location</i>.</small>",
    "shapespanel.buttonChart": "#### Show / hide components and references\n\n‣ If current element is a **component**, shows glyphs that also contain the same component in the current layer, and the component’s source glyph.<br/>‣ If current element is a **reference**, shows glyphs that contain other references to this element.",
    "shapespanel.buttonDecompose": "#### Decompose and copy anchors\n\nReplace the component that points to a source glyph with the content of that glyph.\n\nIf you decompose a component that points to a glyph that has anchors, FontLab copies the anchors into the current glyph if same-named anchors don’t exist in the current glyph layer.",
    "shapespanel.buttonExchange": "#### Swap fill color and stroke color\n\nExchange the **fill** color with the **stroke** color.",
    "shapespanel.buttonExpand": "#### Show / hide additional element properties\n\nOpen to edit fill color, stroke color &amp; thickness and opacity of an element, or to change the component source glyph.",
    "shapespanel.buttonFilterExpand": "#### Expand element filter\n\nReplaces the source contours and the filter with the final contours produced by the filter.\n\n<small>**Element filter**: an algorithm that applies a live, non-destructive transformation to a contour element to produce a different result. Examples: Smart Fill, Smart Corner, Glue, Power Brush, Power Stroke, Delta, Skin, Clipping Group. If you apply a filter, you can edit the source contour element, and you can change the properties of the filter.<br/>‣ To convert to final contours: <i>Expand</i> a selected filter in <i>Elements</i> panel, or <i>Expand Filters</i> in <i>Element</i> menu.<br/>‣ To remove the filter result and restore the source contour: <i>Remove</i> a selected filter in <i>Elements</i> panel or in <i>Element</i> menu.</small>",
    "shapespanel.buttonFilterRemove": "@mainwindow.actionRemove_Filter",
    "shapespanel.buttonFlipH": "#### Live horizontal flip\n\nFlip selected component / element **horizontally** by setting a live negative horizontal scale transformation.\n\n<small>‣ Element scale is “non-destructive” and does not change contours inside the element.<br/>‣ Click <i>Reset scale</i> in <i>Elements</i> panel to unflip scale the element back to 100%: the original size determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "shapespanel.buttonFlipV": "#### Live vertical flip\n\nFlip selected component / element **vertically** by setting a live negative vertical scale transformation.\n\n<small>‣ Element scale is “non-destructive” and does not change contours inside the element.<br/>‣ Click <i>Reset scale</i> in the <i>Elements</i> panel to unflip and scale the element back to 100%: the original size determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "shapespanel.buttonLocationReset": "**Reset live shift**: Reverts the live shift transformation of the component / element to 0,0\n\n<small>Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "shapespanel.buttonLock": "@mainwindow.actionShape_Is_Locked",
    "shapespanel.buttonNonSpacing": "@mainwindow.actionNon_Spacing",
    "shapespanel.buttonPanel": "**Show / hide element properties**: Open / close bottom panel section.\n\n<small>Click to open, then edit the element name, and to apply live transformations (shift, scale, rotation and slant) to an element or component. Live element transformations are “non-destructive” and do not change contours inside the element. To **directly transform the contours**, use <i>Transformation</i> panel, <i>Tools › Free Transform</i> or <i>Tools › Transform</i> **in Contour tool**, or use <i>Transformation</i> panel in Font window on Non-Composite glyphs.</small>\n\n<small>To **apply existing** live element transformations to the contours, and to reset the live element transformations, choose <i>Element › Expand Transformation</i><br/>If properties section is open, click **v** to edit fill color, stroke color &amp; thickness and opacity of an element, or to change the component source glyph</small>",
    "shapespanel.buttonPlace": "**Create new glyph with name and place element**: Creates new glyph with the name specified in the element name field, places a reference to this element in the glyph",
    "shapespanel.buttonRemove": "**Remove element**: Deletes the selected component / element from the glyph layer",
    "shapespanel.buttonRotateReset": "Reset the element rotation and slant transformations: reverts element to the original shape determined by the element content\n\n<small>Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "shapespanel.buttonScaleReset": "Reset the element scale transformation to 100%: reverts element to the original size determined by the element content\n\n<small>Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "shapespanel.buttonService": "#### Service element\n\nClick to declare the current component / element a service component / element.\n\nWhen an element or component is **service**, it is not visible in previews, doesn't export or interpolate, and it is ignored when calculating metrics like a non-spacing element",
    "shapespanel.buttonTransformExpand": "**Expand Transform**: Applies element transformations to the contours, and resets element transformations",
    "shapespanel.buttonUpdateMetrics": "Copies metrics from the current component / element to the selected glyphs containing it as a reference",
    "shapespanel.chartClass": "The list of glyphs referencing the selected component / element: To change the size of the grid cells, use the <i>Smaller cells</i> or <i>Bigger cells</i> buttons above the grid. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> (or <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CMD</small></b>·<b>2×click</b></span>) on any glyphs in the grid to add them to the Glyph window for editing. Use the <i>Copy Metrics</i> button to copy metrics from the current component / element to the selected glyphs containing it as reference",
    "shapespanel.colorBody": "#### Fill color\n\nSet the fill color of a contour element. Exports to color font formats, no effect in monochrome fonts.\n\nIf element is a sticker, changes background color.",
    "shapespanel.colorStroke": "#### Stroke color\n\nSet the stroke color of a contour element. Exports to color font formats, no effect in monochrome fonts.\n\nIf element is a sticker, changes its arrow and text color",
    "shapespanel.frameLegend": "@mainwindow.actionShapesPanel",
    "shapespanel.frameTop": "@mainwindow.actionShapesPanel",
    "shapespanel.sizeDecrease": "**Smaller cells**: Increases the cell size of the glyph cells",
    "shapespanel.sizeIncrease": "**Bigger cells**: Makes the size of the glyph cells bigger",
    "shapespanel.sliderOpacity": "@shapespanel.valueOpacity",
    "shapespanel.tree": "**Elements panel list**: Elements in current glyph layer in the visual stacking order: **first** element / component at the bottom, **last** on top.\n\nSee name, live shift, usage count as components or references, non-spacing &amp; lock status, colour. See contours inside a contour element. <span style=\"font-style: normal; white-space: nowrap;\"><b>Drag-drop</b></span> elements, components, contours to reorder.\n\n<small>Click <i>Show / hide element properties</i> in panel header to rename, apply live transformations, click <i>More properties</i> to change or decompose component and change color / stroke. Click <i>Show components and references</i> to see composite glyphs that use current component / element and to copy glyph metrics to those glyphs</small>",
    "shapespanel.valueGlyphName": "**Glyph name of component source**: Name of the glyph used as the source of selected component. Type another glyph name to replace the component with a component that points to a different source glyph.",
    "shapespanel.valueLocationX": "#### X position: live horizontal shift\n\nMove component / element **horizontally** by setting a live shift transformation.\n\n<small>‣ Element shift is “non-destructive” and does not change contours inside the element.<br/>‣ To center the component / element between glyph sidebearings, click the <i>Center in metrics</i> button.<br/>‣ Click <i>Reset shift</i> to move the element to the default position determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations.</small>",
    "shapespanel.valueLocationY": "#### Y position: live vertical shift\n\nMove component / element **vertically** by setting a live shift transformation.\n\n<small>‣ Element shift is “non-destructive” and does not change contours inside the element.<br/>‣ To center the component / element between glyph sidebearings, click the <i>Center in metrics</i> button.<br/>‣ Click <i>Reset shift</i> to move the element to the default position determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations.</small>",
    "shapespanel.valueName": "**Element name**: Optional name of an element. Named elements appear in the Gallery panel. Use <i>Element › Element Reference</i> to insert references to named elements.",
    "shapespanel.valueNote": "**Element note**: Custom text for your own purpose. Each element note is shared by all references to the element",
    "shapespanel.valueOpacity": "#### Element opacity\n\nDrag slider to change the opacity of the selected element or enter value (0%: fully transparent, 100%: solid / opaque).\n\nApplies to fill and stroke. Exports to color font formats.",
    "shapespanel.valueRotate": "#### Live rotation\n\nRotate selected component / element by setting a live rotation transformation.\n\nPositive value in degrees rotates counterclockwise (to the left) around the bottom-left corner of the element box, negative rotates clockwise (to the right).\n\n<small>‣ Element rotation is “non-destructive” and does not change contours inside the element.<br/>‣ Click <i>Reset rotate and slant</i> to revert the element to the original shape determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations.</small>",
    "shapespanel.valueScaleH": "#### Live horizontal scale\n\nChange the width of the selected component / element by setting a live **horizontal scale** transformation.\n\n<small>‣ Element scale is “non-destructive” and does not change contours inside the element.<br/>‣ Enter values >100% to enlarge horizontally, <100% to reduce.<br/>‣ Click <i>Reset scale</i> to scale the element back to 100%: the original size determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "shapespanel.valueScaleV": "#### Live vertical scale\n\nChange the height of the selected component / element by setting a live **vertical scale** transformation.\n\n<small>‣ Element scale is “non-destructive” and does not change contours inside the element.<br/>‣ Enter values >100% to enlarge vertically, <100% to reduce.<br/>‣ Click <i>Reset scale</i> to scale the element back to 100%: the original size determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "shapespanel.valueSlant": "#### Live slant\n\nSlant selected component / element by setting a live slant transformation.\n\nPositive value in degrees slants to the right around the bottom-left corner of the element box, negative slants to the left.\n\n<small>‣ Element slant is “non-destructive” and does not change contours inside the element.<br/>‣ Click <i>Reset rotate and slant</i> to revert the element to the original shape determined by the element content.<br/>‣ Choose <i>Element › Expand Transformation</i> to apply element transformations to the contours, and to reset the element transformations</small>",
    "shapespanel.valueStrokeWidth": "#### Stroke thickness\n\nStroke width of the selected contour element in font units. Exports to color font formats.\n\n<small>‣ Use <i>Preferences › Spacing › Ignore Stroke thickness</i> to control how it affects sidebearings.<br/>‣ To use in monochrome fonts, choose <i>Element › Expand Stroke</i>.</small>",
    "shapespanel.widgetColorBrush": "#### Fill color\n\nChoose the color or gradient that is applied to the **filled area** of the element.",
    "shapespanel.widgetColorPen": "#### Stroke color\n\nChoose the color or gradient that is applied to the **stroke** of the element.",
    "shapespanel.widgetTop": "@mainwindow.actionShapesPanel",
    "sourcepanel.buttonApply": "**Apply**: Checks the validity of the JSON code, and saves changes you made in the code to the glyph",
    "sourcepanel.buttonElement": "**Element**: Shows the JSON code for the current element only",
    "sourcepanel.buttonGlyph": "**Glyph**: Shows the JSON code for the whole current glyph with all its layers and elements",
    "sourcepanel.buttonLayer": "**Layer**: Shows the JSON code for the current layer with all its elements included",
    "sourcepanel.buttonRevert": "**Revert**:  Rejects changes that were not applied yet",
    "sourcepanel.frameTop": "@mainwindow.actionSourcePanel",
    "sourcepanel.textEditor": "#### Code\n\n See and edit the JSON representation of the <i>Glyph</i>, <i>Layer</i> or <i>Element</i>, depending on the top toggle. Select and copy-paste the code from one glyph to another, one layer to another layer etc.\n\nCode is compatible with VFJ. Does not include the enclosing braces (opening `{` and closing `}`).\n\n<small>‣ If <i>Preferences › Editing › Live preview</i> is on, Source panel updates as you edit the glyph in window<br/>‣ Set font size in <i>Preferences › Code editors</i></small>",
    "sourcepanel.widgetEditor": "@mainwindow.actionSourcePanel",
    "strokepanel.buttonApply": "**Apply**: Apply current stroke to selected element or glyph",
    "strokepanel.buttonCapButt": "**Flat cap**: Strokes are started and finished with flat elements",
    "strokepanel.buttonCapRound": "**Round cap**: Strokes are started and finished with round elements",
    "strokepanel.buttonCapSquare": "**Square cap**: Strokes are started and finished with square elements",
    "strokepanel.buttonEmpty": "**No stroke**: Removes stroke from the selected element. To set the attribute back to “no stroke” for multiple selected elements or glyphs, use the <i>Element › Remove Stroke</i> command",
    "strokepanel.buttonExchange": "@shapespanel.buttonExchange",
    "strokepanel.buttonJoinBevel": "**Flat join**: Bevel joins are drawn as if the joining segments were stroked with butt cap ends and the resulting notch is filled with a triangle",
    "strokepanel.buttonJoinMiter": "**Miter join**: Miter joins extend the outer edges of the lines until they meet at an angle, similar to the corners of a picture frame",
    "strokepanel.buttonJoinRound": "**Round join**: Round joins draw a circle with a diameter equal to the stroke width at each bend",
    "strokepanel.buttonLine": "**Set stroke**: Click to apply visible stroke (with current color, thickness and style) to the selected element",
    "strokepanel.colorStroke": "**Stroke color**: Select the color for the stroke. Note that stroke colors can be exported only in font formats supporting colors",
    "strokepanel.frameBottom": "@mainwindow.actionStrokePanel",
    "strokepanel.frameTop": "@mainwindow.actionStrokePanel",
    "strokepanel.label_4": "**Style**: Stroke color and visibility",
    "strokepanel.sliderWidth": "**Stroke width**: Use the slider to change the width (thickness) of the stroke",
    "strokepanel.valueMiter": "**Miter limit**: Defines the maximum length of the miter join corner, as a multiplication of the stroke width",
    "strokepanel.valueWidth": "**Stroke width**: Enter the value for the width (thickness) of the stroke",
    "strokepanel.widgetColorBrush": "@shapespanel.widgetColorBrush",
    "strokepanel.widgetColorPen": "@shapespanel.widgetColorPen",
    "swatchpanel.buttonAdd": "**Add color**: Add new swatch color mixed in the <i>Color</i> panel to the palette",
    "swatchpanel.buttonApply": "**Apply Color**: Apply currently selected swatch color to currently selected element or glyph. Hold ⌥ to apply to selected glyphs",
    "swatchpanel.buttonIcons": "**Table mode**: Show swatches as a table of color rectangles",
    "swatchpanel.buttonList": "**List mode**: Show swatches as a list of named colors",
    "swatchpanel.buttonMore": "**Palettes**: Opens the <i>Palettes</i> dialog box allowing you to create, name, import and export color palettes",
    "swatchpanel.buttonRemove": "**Remove color(s)**: Remove currently selected swatches",
    "swatchpanel.colorSource": "**Color**: Select stroke or body color, or reset color to transparency",
    "swatchpanel.listColors": "**Swatches**: List of the swatch colors in the current palette",
    "swatchpanel.selectorParameter": "**Current palette**: Click to select active swatch palette from the list of available palettes. Click <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> to create new, import and export palettes",
    "tablespanel.buttonAdd": "**Add table definition**: Adds new empty table named \"XXXX\" to the list of font tables. Rename the table and write or paste its content",
    "tablespanel.buttonFind": "**Search again**: Searches for the next entry of the string in the table definition",
    "tablespanel.buttonRemove": "**Remove table definition**: Deletes the selected table from the font",
    "tablespanel.buttonVerify": "**Verify**: Compiles the code of the current table to check it for syntax errors and consistency",
    "tablespanel.frameTop": "@mainwindow.actionTablesPanel",
    "tablespanel.searchClear": "**Clear search**: Removes the text from the search field",
    "tablespanel.searchField": "**Search**: To search within the current table, enter the text and press <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>",
    "tablespanel.tablesList": "**Tables**: The list of tables that can be edited.\n\nTo edit the table, click its name in the list. To add new table, click the <i>+</i> button below the list. To delete the selected table, click <i>-</i>. To perform a basic verification of the code, select the table and click the <i>Verify</i> button above the list.\n\nTo export the table together with the exported font, click the checkbox at the left of the table name",
    "tablespanel.textEditor": "**Code**: The current table definition in the TTX syntax. Edit the code if needed and click the <i>Verify</i> button. To export the table together with the exported font, click the checkbox at the left of the table name",
    "toolbarpanel.buttonBrush": "**Brush** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>B</b></span>)<br/><small>Freely draw calligraphic strokes.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>drag</b></span> before you draw: resize &amp; rotate brush. <small>Change element thickness &amp; brush rotation in <i>Brush</i> panel</small>\n\n‣ <small>SIMPLE BRUSH</small>: Directly draw simple brush-shaped contours\n\n‣ <small>POWER BRUSH</small>: Draw freehand skeleton with brush, adjust later. <small>Change node thickness with <i>Thickness</i> tool</small>\n\n‣ <small>ERASING BRUSH</small>: Cut-out (erase) brush-shaped portions from existing contours\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>B</b></span>: activate (hold: temporarily).<br/>Tap again / choose in toolbox: switch sub-tool. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonBucket": "**Fill** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>F</b></span>)<br/><small>Fill / unfill areas. Reverse contours.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: fill unfilled area highlighted in blue<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: unfill filled area<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> / <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: (un)fill many areas\n\n<small>Creates Smart Fill filter if area has intersections. Reverses contour direction if area is the entire closed contour.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> contour: reverse its direction\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>F</b></span>: activate (hold: temporarily).</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonEllipse": "@widgetellipse.buttonRound",
    "toolbarpanel.buttonEraser": "**Eraser** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>2</b></span>)<br/><small>Remove points. Curves to lines. Simplify paths.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>drag</b></span>: resize Eraser radius\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: remove nodes within radius; convert segments to lines if handles within radius<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: “paint” &amp; remove within radius<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: remove within freeform drawn area<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: keep key nodes\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>click</b></span> node, <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> another on same contour: simplify path between them\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>2</b></span>: activate (hold: temporarily).<br/>Tap again / choose in toolbox: switch sub-tool. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonErasingRect": "@widgetellipse.buttonEraser",
    "toolbarpanel.buttonKerning": "**Kerning** mode (<span style=\"font-style: normal; white-space: nowrap;\"><b>K</b></span>)<br/><small>Add / change kerning pairs. Auto kern.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: adjust kern pair by pointer distance<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: adjust with lever. <small>Customize in <i>Preferences › Spacing</i></small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>←</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span>: adjust kern pair by 1<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: accelerate, <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span>: more<br/><small>Customize in <i>Preferences › Distances</i></small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span> / <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span> / <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b></span>: add exception<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>;</b></span> auto kern<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>;</b></span>: alternative auto kern\n\n<small><i>Window › Workspaces › Kerning</i>: open kerning panels</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>K</b></span>: activate (hold: temporarily).</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonKnife": "**Knife** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>J</b></span>)<br/><small>Add &amp; duplicate nodes. Slice &amp; break contours.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> segment: add node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span>: add near extremum / inflection\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> through contours: add nodes. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: constrain<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>drag</b></span> through contours: slice\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> node: break contour<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span> through contours: add nodes and break at them\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>-**click** node: duplicate\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>J</b></span>: activate (hold: temporarily).<br/>Tap again / choose in toolbox: switch sub-tool. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonMagnet": "**Magnet** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>U</b></span>)<br/><small>Add hints. Link points to power guides.</small>\n\n<small>POWER GUIDES</small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> from node / handle to guide, zone, font dimension: link point to a guide to make a power guide <small>(when you move it, all linked points follow)</small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> from point to canvas: remove the link\n\n<small>HINTS</small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> from node / handle to another point or to canvas: add hint<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> point: add ghost hint\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>U</b></span>: activate (hold: temporarily).</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonMeter": "**Guides** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>G</b></span>)<br/><small>Measure. Inspect. Add anchors, pins, element guides & stickers.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: measure<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: add element guide<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: constrain\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span>: add anchor<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: add pin\n\nAdd stickers with property bar.\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>G</b></span>: activate (hold: temporarily).</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonMetrics": "**Metrics** mode (<span style=\"font-style: normal; white-space: nowrap;\"><b>M</b></span>)<br/><small>Change advance widths and sidebearings. Auto space.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> sidebearing or content: adjust by pointer distance<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: adjust with lever. <small>Customize in <i>Preferences › Spacing</i></small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>←</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span>: LSB. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: RSB<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b>←</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>→</b></span>: move<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b>↑</b></span>/<span style=\"font-style: normal; white-space: nowrap;\"><b>↓</b></span>: width<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: accelerate<br/><small>Customize in <i>Preferences › Distances</i></small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>;</b></span> auto space\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>M</b></span>: activate (hold: temporarily).<br/><span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup></span>Turn off <i>System Preferences › Keyboard › Shortcuts › Mission Control › Mission Control</i></small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonNodes": "**Контур** (<span style=\"font-style: normal; white-space: nowrap;\"><b>A</b></span>)<br/><small>Правка контуров, направляющих, якорей, компонентов.</small>\n\n<small>NODE</small><small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: keep handles. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: constrain. <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span>: with lever. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b></span>: nudge handles. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>ALT</small></b></span>: slide. <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>ALT</small></b>·<b><small>CMD</small></b></span>: harmonized<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: corner↔︎smooth. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: to H/V. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>ALT</small></b></span>: to Smart Corner / Genius. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: harmonize node. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b></span> harmonize handle<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span>: remove. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>DEL</small></b></span>: break &amp; delete</small>\n\n<small>HANDLE</small><small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: move. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: keep angle. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: with opposite<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>ALT</small></b>·<b>click</b></span>: retract. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span>: to line<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: align angle. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: to H/W. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: to extremum</small>\n\n <small>SEGMENT</small><small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: edit segment. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: also handles<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b>click</b></span>: add node. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>CTRL</small></b>·<b><small>ALT</small></b></span>: add extremum or inflection<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> line: to curve. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>ALT</small></b></span>: to smooth curve ‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> curve: PS↔︎TT. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>ALT</small></b></span>: quick PS↔︎TT<br/>‣ **<span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>** select contour</small>\n\n <small>CANVAS</small><small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> select nodes / handles. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: add. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: freeform nodes+handles<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: select closest contour</small>",
    "toolbarpanel.buttonOval": "@widgetellipse.buttonCurved",
    "toolbarpanel.buttonPen": "**Pen** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>P</b></span>)<br/><small>Draw Bézier paths.</small>\n\n<small>NEW</small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: corner &amp; line<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: smooth node &amp; curve with symmetric handles, <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>drag</b></span>: non-symmetric<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: corner &amp; curve with handle\n\n<small>EXISTING</small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> segment: add node; smooth node: retract handles; corner: remove; contour end: continue<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> node: move handles<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span> node: move handle\n\n<span style=\"font-style: normal; white-space: nowrap;\"><b><small>ESC</small></b></span>: finish drawing contour\n\n<small>Turn on <i>Preferences › Editing › Pen and Pencil tools can change contour</i> to add to / modify existing contours using Pen</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>P</b></span>: activate (hold: temporarily).<br/>Tap again / choose in toolbox: switch sub-tool. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonPencil": "**Pencil** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>N</b></span>)<br/><small>Freely draw &amp; adjust paths.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: freehand contour<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: line<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: constrain\n\n<small>Turn on <i>Preferences › Editing › Pen and Pencil tools can change contour</i> to add to / modify existing contours using Pencil</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>N</b></span>: activate (hold: temporarily).</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonPolygon": "@widgetellipse.buttonPolygon",
    "toolbarpanel.buttonPrepolate": "**Matchmaker** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>7</b></span>)<br/><small>Improve &amp; inspect variation matching of masters. Correct contour direction. Set start points.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> node: make first<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> node: reverse contour\n\n<small>If matching status is **yellow** or **red**, manually match a **section** (continuous series of one or more segments) across masters::<br/>‣ Select start of section (blue): drag around start nodes of section in all masters &amp; release. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: add nodes to it.<br/>‣ Select end of section (orange): drag around end nodes of section in all masters &amp; release. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: add.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>↩</b></span>: make sections compatible.<br/>‣ Repeat until <i>Status</i> is green.</small>\n\n<small>Drag **blue dot**: change stacking view</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>7</b></span>: activate (hold: temporarily).</small>\n\n<small>MORE: Help › User Manual</small>",
    "toolbarpanel.buttonRectangle": "@widgetellipse.buttonRect",
    "toolbarpanel.buttonRotate": "**Rotate** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>R</b></span>)<br/><small>Rotate selection. Apply live rotation to element.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: set basis vector, then rotate\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: set rotation center, then **hold**: set basis vector and <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: rotate\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: rotate in steps of 15°\n\n<small>‣ **Green** controls (when Element tool was active or when component or complex element is current): rotation is applied to element as live transformation<br/>‣ **Blue** controls: rotation is applied to the contours. Nodes and handles are immediately rounded if <i>Font Info › Family Dimensions › Round coordinates</i> is on.</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>R</b></span>: activate (hold: temporarily).</small>",
    "toolbarpanel.buttonScale": "**Scale** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>S</b></span>)<br/><small>Resize selection. Apply live scaling to element.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: scale around location<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> horizontally or vertically: scale only H/V<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span> diagonally: scale proportionally\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: set scale center, then **drag**: scale. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: scale proportionally\n\n<small>‣ **Green** controls (when Element tool was active or when component or complex element is current): rotation is applied to element as live transformation<br/>‣ **Blue** controls: rotation is applied to the contours. Nodes and handles are immediately rounded if <i>Font Info › Family Dimensions › Round coordinates</i> is on.</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>S</b></span>: activate (hold: temporarily).</small>",
    "toolbarpanel.buttonScissors": "**Scissors** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>Q</b></span>)<br/><small>Make overlaps &amp; simple ink traps. Unlink / loop corners.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> node: unlink &amp; add Smart Fill<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span>: add simple ink trap<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: loop corner\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> between / around 2 nodes: make overlap, around 4 concave corners: make X-overlap\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>Q</b></span>: activate (hold: temporarily).<br/>Tap again / choose in toolbox: switch sub-tool. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonShapes": "**Element** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>V</b></span>)<br/><small>Transform, group, ungroup components, elements, without changing contours.</small>\n\nTransform (move, scale, rotate, slant, flip) or colorize a vector element with <i>Element</i> tool to affect current glyph and its components, but without affecting other references.\n\n<small>Elements: vector / bitmap shapes with same color &amp; stroke, _components_ pointing to another glyph, _groups_, or _compound elements_ made with a _filter_: Power Brush, Smart Corner etc. Share elements between glyphs in the same layer via _references_.</small>\n\n<small>Transform content with <i>Contour</i> tool to also affect all references.</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>V</b></span>: activate (hold: temporarily).</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonSlant": "**Slant** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>D</b></span>)<br/><small>Slant selection. Apply live slant to element.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: set basis vector, then slant\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: set slant center, then **hold**: set basis vector and <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: slant. Hold <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span> as you drag to slant by italic angle of font master\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: slant in steps of 3°\n\n<small>‣ Direction of slant is perpendicular to the overall direction of the basis vector</small>\n\n<small>‣ **Green** controls (when Element tool was active or when component or complex element is current): rotation is applied to element as live transformation<br/>‣ **Blue** controls: rotation is applied to the contours. Nodes and handles are immediately rounded if <i>Font Info › Family Dimensions › Round coordinates</i> is on.</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>D</b></span>: activate (hold: temporarily).</small>",
    "toolbarpanel.buttonSmartPen": "**Rapid** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>5</b></span>)<br/><small>Quickly draw smooth paths with auto-extremums &amp; consistent curve tension.</small>\n\n<small>NEW</small><br/><small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add corner node &amp; line<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: add smooth node &amp; curve with <i>Font Info › Font Dimensions › Curve tension</i><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b><small>ALT</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b><small>ALT</small></b></span>: add tangent node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: add custom tension point</small>\n\n<small>EXISTING</small><br/><small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> segment: add node; first node: close contour<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> node: smooth↔︎corner; tension point: reset tension<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> node: corner↔︎tangent<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>click</b></span> node: remove<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> tension point: custom tension</small>\n\n<small><span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: constrain. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span>: no snapping.<br/>Customize in <i>Preferences › Editing</i></small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>5</b></span>: activate (hold: temporarily).<br/>Tap again / choose in toolbox: switch sub-tool. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.buttonStar": "@widgetellipse.buttonStar",
    "toolbarpanel.buttonStroke": "**Thickness** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>8</b></span>)<br/><small>Change thickness of <i>Stroke</i> or <i>Power Brush</i> in element or node.</small>\n\n<small>STROKE</small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> control point: change node thickness on one side. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: on both sides<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: element thickness on one side<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>ALT</small></b>·<b>drag</b></span>: stroke location on node\n\n<small>POWER BRUSH</small><br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: node thickness on both sides<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: element thickness on both<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span>: rotate element brush\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b><small>ALT</small></b>·<b>click</b></span>: copy node thickness to element<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>, tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>BKSP</small></b></span>: reset node thickness\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>8</b></span>: activate (hold: temporarily).</small>",
    "toolbarpanel.buttonTTH": "**TrueType Hinting** mode<br/><small>Edit visual FontLab TTH commands. Preview Windows® ClearType® screen rendering.</small>\n\n<small>Customize behavior in <i>Preferences › Autohinting</i></small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>SHIFT</small></b>·<b><small>CMD</small></b>·<b>F7</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>SHIFT</small></b>·<b><small>CTRL</small></b>·<b>F7</b></span>: activate.</small>\n\n<small>MORE: Help › User Manual</small>",
    "toolbarpanel.buttonText": "**Text** mode (<span style=\"font-style: normal; white-space: nowrap;\"><b>T</b></span>)<br/><small>Edit text (Glyph window content). Preview glyphs. Add text frames on Sketchboard.</small>\n\n<small>GLYPH WINDOW</small><br/>‣ type / paste text<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>/</b></span> glyph by name, <span style=\"font-style: normal; white-space: nowrap;\"><b># </b></span> Unicode<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>L</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>L</b></span>: related<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b>F</b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b>F</b></span>: find\n\n<small>SKETCHBOARD</small>: **click**: new Text frame\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>T</b></span>: activate. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ESC</small></b></span>: exit.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "toolbarpanel.checkCoordinates": "@mainwindow.actionShowCoordinates",
    "toolbarpanel.checkCurvature": "@mainwindow.actionShowCurvature",
    "toolbarpanel.checkFontAudit": "@mainwindow.actionFont_Audit",
    "toolbarpanel.checkFontGuidelines": "@mainwindow.actionShowFontGuidelines",
    "toolbarpanel.checkGrid": "@mainwindow.actionShowGrid",
    "toolbarpanel.checkGuidelines": "@mainwindow.actionShowGuidelines",
    "toolbarpanel.checkHints": "@mainwindow.actionHints",
    "toolbarpanel.checkNodes": "@mainwindow.actionAll_Nodes",
    "tthpanel.buttonCompile": "**Compile code**: Compile instructions in the Code panel",
    "tthpanel.buttonDirectionH": "**Horizontal commands (H)**: Show horizontal (x-direction) commands",
    "tthpanel.buttonDirectionV": "**Vertical commands (V)**: Show vertical (y-direction) commands",
    "tthpanel.buttonProgram": "**Code panel**: Show or hide <i>Code</i> panel where the visual hinting code can be edited at the right of the waterfall preview",
    "tthpanel.buttonProgramVertical": "**Code panel**: Show or hide <i>Code</i> panel where the visual hinting code can be edited below the waterfall preview",
    "tthpanel.buttonSamples": "**Sample strings**: Show list of predefined sample strings",
    "tthpanel.buttonToolAlign": "**Align tool (A)**: Activate Align tool.<small>Alignment instructions are used to align points to the grid. There are two types of alignment instructions: those linked with alignment zones and those not linked with zones</small>",
    "tthpanel.buttonToolDoubleLink": "**Double Link (D)**:  Activate Double Link tool.<small>Double links let you set the distance between two “untouched” points. Both points will be moved by this command and both points will be touched afterward</small>",
    "tthpanel.buttonToolEdit": "**Editor (E)**: Activate Edit tool",
    "tthpanel.buttonToolFinalDelta": "**Final Delta (F)**:  Activate Final Delta tool.<small>Final delta instructions are applied after the final interpolation of all untouched points. They are used as a last resort to shift points to remove or add pixels at PPM sizes where it is still necessary after application of zones, stems and all other hints</small>",
    "tthpanel.buttonToolInterpolate": "**Interpolate (I)**:  Activate Interpolate tool. <small>Interpolate sets the position of a point in the same proportion between two other points as it was in the original outline</small>",
    "tthpanel.buttonToolMiddleDelta": "**Middle Delta (M)**:  Activate Middle Delta tool.<small>A middle delta instruction can move outline points like any other instruction. It can move any outline point in ⅛-pixel increments</small>",
    "tthpanel.buttonToolSingleLink": "**Single Link (S)**:  Activate Single Link tool.<small>The single link connects an outline point to a point whose position is set by another command</small>",
    "tthpanel.buttonToolSmartLink": "**Smart Link (R)**:  Activate Smart Link tool",
    "tthpanel.buttonZoom16": "**16x**: Zooms the current ppm preview by 16",
    "tthpanel.buttonZoom2": "**2x**: Zooms the current ppm preview by 2",
    "tthpanel.buttonZoom4": "**4x**: Zooms the current ppm preview by 4",
    "tthpanel.buttonZoom8": "**8x**: Zooms the current ppm preview by 8",
    "tthpanel.buttonZoomPanel": "**Zoom panel**: Show or hide <i>Zoom</i> panel where the current text string is rendered in the current ppm with 2x-16x zoom",
    "tthpanel.labelZoomPPM": "Current ppm shown in the **Zoom** panel",
    "tthpanel.previewContent": "**Text string**: Enter the text here to preview it hinted in the waterfall preview area and in the **Zoom** panel. The \"@\" character in the string will bring the current glyph",
    "widgetbrush.buttonClose": "@widgetnodes.buttonClose",
    "widgetbrush.buttonEraser": "**Erasing brush** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>B</b></span>)<br/><small>Cut out (erase) brush-shaped portions of existing contours, and remove existing overlaps.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>drag</b></span> or use <i>Brush</i> panel before you draw: resize &amp; rotate brush\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>B</b></span>: activate Simple brush</small>",
    "widgetbrush.buttonNormal": "**Simple brush** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>B</b></span>)<br/><small>Directly draw brush-shaped contours.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>drag</b></span> or use <i>Brush</i> panel before you draw: resize &amp; rotate brush<br/>‣ Edit drawn contours with <i>Contour</i> tool\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>B</b></span>: activate Power Brush</small>",
    "widgetbrush.buttonPower": "**Power Brush** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>B</b></span>)<br/><small>Draw a skeleton contour like the Pencil tool, and apply a live, editable Power Brush filter.</small>\n\n‣ Change properties of Power Brush filter in the <i>Brush</i> panel<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>drag</b></span> or use <i>Brush</i> panel before you draw: resize &amp; rotate brush<br/>‣ Edit skeleton contour with <i>Contour</i> tool<br/>‣ Change thickness on a node or rotate brush with <i>Thickness</i> tool\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>B</b></span>: activate Erasing brush</small>",
    "widgetcolorpanel.barOpacity": "**Opacity**: set the color opacity / transparency.\n\n‣ 100%: solid color<br/>‣ 0%: full transparency",
    "widgetcolorpanel.buttonApply": "**Apply Color**: applies the current solid color or gradient to the current layer of the selected glyphs. <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: to all layers",
    "widgetcolorpanel.buttonFlat": "**Flat color**:  Allows to find and select the solid color for fill or stroke. Click on <i>Set black color</i> at the right to select pure black or click on <i>Reset color</i> to set no color",
    "widgetcolorpanel.buttonGradient": "**Linear gradient**: Allows to define and apply the linear gradient of colors to fill or stroke. Click on the gradient bar to turn on/off the Gradient control in the Glyph window. Double-click on the gradient bar to add new color to the gradient. To delete a color from the gradient, double-click on its triangle below the gradient bar",
    "widgetcolorpanel.buttonGradientConical": "**Conical gradient**: Allows to define and apply the conical gradient of colors to fill or stroke. Click on the gradient bar to turn on/off the Gradient control in the Glyph window. Double-click on the gradient bar to add new color to the gradient. To delete a color from the gradient, double-click on its triangle below the gradient bar",
    "widgetcolorpanel.buttonGradientRadial": "**Radial gradient**: Allows to define and apply the radial gradient of colors to fill or stroke. Click on the gradient bar to turn on/off the Gradient control in the Glyph window. Double-click on the gradient bar to add new color to the gradient. To delete a color from the gradient, double-click on its triangle below the gradient bar",
    "widgetcolorpanel.buttonMore": "**Gradient <span style=\"font-style: normal; white-space: nowrap;\"><b>☰</b></span> menu**\n\n‣ <i>Pad Spread</i>  <br/>‣ <i>Reflect Spread</i>  <br/>‣ <i>Repeate Spread</i> <br/>‣ <i>Reverse Gradient</i> flips the gradient  horizontally so that colors from the right go to the left and vice versa",
    "widgetcolorpanel.buttonResetBlack": "**Set black color**:  selects the pure black color usually used in traditional outline fonts",
    "widgetcolorpanel.buttonResetNone": "**Reset color**: selects \"No fill\" color or \"no stroke\"",
    "widgetcolorpanel.editColorRGB": "**Current color**: the notation of the currently selected color in the current color scheme. Select the color scheme in the menu at the left",
    "widgetcolorpanel.frameColor": "Solid color bar",
    "widgetcolorpanel.selectorColorMode": "**Color scheme menu**: choose among RGB, #, HSL and Lab color modes",
    "widgetcolorpanel.valueOpacity": "Enter the numeric opacity value in %",
    "widgetcolorpanel.widgetColorSource": "**Color**: Select fill (horizontal rectangle) or stroke (vertical rectangle) depending on what color you want to change. Click on arrows to swap fill and stroke colors",
    "widgetcolorpanel.widgetGradient": "**Gradient bar**: Click on the gradient bar to turn on/off the Gradient control in the Glyph window. Double-click on the gradient bar to add new color to the gradient. To delete a color from the gradient, double-click on its triangle below the gradient bar",
    "widgetcolorpanel.widgetTitle": "@mainwindow.actionColorsPanel",
    "widgetellipse.buttonClose": "@widgetnodes.buttonClose",
    "widgetellipse.buttonCurved": "**Oval** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>O</b></span>)<br/><small>Draw ovals.  Change tension for next oval in toolbox, for future ovals in current master in <i>Font Info › Font Dimensions › Curve tension</i></small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: draw from corner<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: draw from center<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: width = height<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span>: reversed contour <small>(unfills overlaps with filled contours)</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: create numerically\n\n<small>If not active, tap <span style=\"font-style: normal; white-space: nowrap;\"><b>O</b></span>: activate (hold: temporarily). If active, tap again / use toolbox: switch between **Ellipse** and **Oval**. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> toolbar icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "widgetellipse.buttonEraser": "**Erasing rectangle** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>I</b></span>)<br/><small>Cut out (erase) rectangular portions of existing contours, and remove existing overlaps.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: draw from corner<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: draw from center<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: square\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: create numerically\n\n<small>If not active, tap <span style=\"font-style: normal; white-space: nowrap;\"><b>I</b></span>: activate (hold: temporarily). If active, tap again: switch between **Rectangle**, **Polygon**, **Star**, **Erasing rectangle**. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> toolbar icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "widgetellipse.buttonPolygon": "**Polygon** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>I</b></span>)<br/><small>Draw regular polygons. Change number of corners in toolbox.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: draw from center<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: rotate by 90°<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span>: reversed contour <small>(unfills overlaps with filled contours)</small>\n\n<small>If not active, tap <span style=\"font-style: normal; white-space: nowrap;\"><b>I</b></span>: activate (hold: temporarily). If active, tap again: switch between **Rectangle**, **Polygon**, **Star**, **Erasing rectangle**. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> toolbar icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "widgetellipse.buttonRect": "**Rectangle** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>I</b></span>)<br/><small>Draw rectangles or squares.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: draw from corner<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: draw from center<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: square<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span>: reversed contour <small>(unfills overlaps with filled contours)</small>\n\n<small>If not active, tap <span style=\"font-style: normal; white-space: nowrap;\"><b>I</b></span>: activate (hold: temporarily). If active, tap again: switch between **Rectangle**, **Polygon**, **Star**, **Erasing rectangle**. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> toolbar icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "widgetellipse.buttonRound": "**Ellipse** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>O</b></span>)<br/><small>Draw geometric ellipses or circles.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: draw from corner<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>: draw from center<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: circle<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span>: reversed contour <small>(unfills overlaps with filled contours)</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: create numerically\n\n<small>If not active, tap <span style=\"font-style: normal; white-space: nowrap;\"><b>O</b></span>: activate (hold: temporarily). If active, tap again / use toolbox: switch between **Ellipse** and **Oval**. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> toolbar icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "widgetellipse.buttonStar": "**Star** tool (<span style=\"font-style: normal; white-space: nowrap;\"><b>I</b></span>)<br/><small>Draw stars. Change number of corners in toolbox.</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: draw from center<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: rotate by 90°<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span>: reversed contour <small>(unfills overlaps with filled contours)</small>\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: create numerically\n\n<small>If not active, tap <span style=\"font-style: normal; white-space: nowrap;\"><b>I</b></span>: activate (hold: temporarily). If active, tap again: switch between **Rectangle**, **Polygon**, **Star**, **Erasing rectangle**. <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> toolbar icon: open toolbox.</small>\n\n<small>MORE: SHIFT·F1 when this is active</small>",
    "widgetellipse.valueParameter": "‣ If **Oval with tension** is active, set the tension for the next oval you draw. <small>Set tension for future ovals in current master in <i>Font Info › Font Dimensions › Curve tension</i></small>\n\n‣ If **Polygon** is active, change the number of sides of the regular polygon\n\n‣ If **Star** is active, change the number of corners",
    "widgetknife.buttonAdd": "**Knife › Add nodes** sub-tool\n\nIf **on** or all off:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> through contours: **add nodes**<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: constrain adding horizontally / vertically\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> segment: add node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> segment: add near extremum / inflection<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> node: break contour<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> node: duplicate</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>J</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetknife.buttonBreak": "**Knife › Break contour** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> through contours: **add nodes and break contour at them**, make open contour(s)<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: break horizontally / vertically\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> segment: add node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> segment: add near extremum / inflection<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> node: break contour<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> node: duplicate</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>J</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetknife.buttonClose": "@widgetnodes.buttonClose",
    "widgetknife.buttonCut": "**Knife › Slice contour** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> through contours: **add nodes and slice contour**, make separate closed contours<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>drag</b></span>: slice horizontally / vertically\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> segment: add node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> segment: add near extremum / inflection<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> node: break contour<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>click</b></span> node: duplicate</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>J</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetmetrics.buttonClose": "#### Toolbox\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> button: close toolbox for this tool<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> toolbox frame: move toolbox<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> toolbar icon: open toolbox for this tool",
    "widgetnodes.buttonClose": "#### Toolbox\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> button: close toolbox for this tool<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> toolbox frame: move toolbox<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span> toolbar icon: open toolbox for this tool",
    "widgetnodes.buttonNudge": "#### Nudge\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b><small>ALT</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> points or selections: handles in adjacent curve segments move proportionally",
    "widgetnodes.buttonPantograph": "#### Contour lever\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> node, handle or selection reference point for a short distance: point moves by a fraction of the pointer movement<br/>‣ drag further: movement gradually matches your pointer movement<br/>‣ release mouse and drag again to start the lever (precision) move again.\n\n<small>Change the contour lever precision factor in <i>Preferences › Distances</i></small>",
    "widgetnodes.buttonPowerNudge": "#### Power Nudge\n\nWhen you drag points or selections:\n\n‣ **On:** key nodes stay in place, Servant and non-key nodes &amp; handles move proportionally<br/>‣ **Off:** only Servant nodes move proportionally\n\n<small>Turn on <i>Preferences › Glyph Window › Show Power nudge status</i> to see which nodes will move if Power Nudge is on</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b>·<b>C</b></span>: toggle. Hold <span style=\"font-style: normal; white-space: nowrap;\"><b>C</b></span>: activate temporarily.</small>",
    "widgetoptimizer.buttonClose": "@widgetnodes.buttonClose",
    "widgetoptimizer.buttonEraser": "**Eraser › Remove points** sub-tool\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b>·<b>drag</b></span>: resize Eraser radius\n\nIf **on** or all off:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: remove nodes within radius; convert segments to lines if handles within radius<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: “paint” &amp; remove within radius<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: keep key  nodes\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>2</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetoptimizer.buttonLasso": "**Eraser › Lasso eraser** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> on canvas: remove nodes within drawn freeform area; convert segments to lines if handles within area<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: keep key nodes\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>2</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetoptimizer.buttonSmooth": "**Eraser › Simplify path** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> node, then <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> another node on same contour: simplify path between these nodes\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>2</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetpen.buttonClose": "@widgetnodes.buttonClose",
    "widgetpen.buttonCorner": "**Pen › Add corner** sub-tool\n\nIf **on**:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> canvas: add sharp node &amp; line segment<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: add smooth node &amp; curve segment\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>P</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetpen.buttonCurve": "**Pen › Add curve** sub-tool\n\nIf **on**:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> canvas: add smooth node &amp; curve segment<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> canvas: add sharp node &amp; line segment\n\n‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> &amp; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: first segment as curve, <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: as line\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>P</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetpen.buttonEditable": "#### Existing contour is editable\n\nIf **off**:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> segment: add corner<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> end node of open contour: continue<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> smooth node: retract handles; sharp: remove node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>drag</b></span> node: make corner, move handle<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>: constrain handle to 45°\n\nIf **on**, all the above, and also:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> &amp; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> segment: add smooth node &amp; break contour<br/>‣ then <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> &amp; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span>: close the segment, remove smaller part\n\n<small>Same as <i>Preferences › Editing › Pen and Pencil can modify contour</i></small>",
    "widgetpen.buttonHandles": "**Pen › Edit handles** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> curve segment: edit segment<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> line segment: make curve\n\n<small>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> &amp; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> node: make it smooth node &amp; place both handles<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> &amp; <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> node: place one handle<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> smooth node: retract handles; sharp: remove node</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>P</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetpen.buttonTangent": "**Pen › Add tangent** sub-tool\n\nIf **on**:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> canvas: add smooth node &amp; add curve if previous segment was line or vice versa<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span> canvas: add sharp node &amp; line segment\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>P</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetscissors.buttonClose": "@widgetnodes.buttonClose",
    "widgetscissors.buttonDisconnect": "**Scissors › Disconnect** sub-tool\n\nIf **on** or all off:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> node: unlink &amp; add Smart Fill<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>drag</b></span> between / around 2 nodes: make overlap, around 4 concave corners: make X-overlap\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>Q</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetscissors.buttonInktrap": "**Scissors › Simple ink trap** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>SHIFT</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> node: create simple ink trap (duplicate node and move the new nodes apart by the value in toolbox)\n\n<small>Use <i>Font Info › Font Dimensions › Ink trap width</i> to change ink trap width for all existing Smart ink traps, and for all future simple ink traps in the master.</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>Q</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetscissors.buttonLoop": "**Scissors › Loop corner** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> sharp node: convert into a looped corner (create triangular loop)\n\n<small>Turn on <i>Font Info › Other Values › Unfill looped corners</i> in a master to make the looped contours that are outside the filled area transparent.</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>Q</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetscissors.valueInkTrapWidth": "#### Simple ink trap width\n\nChange width for the next simple ink trap.\n\nUse <i>Font Info › Font Dimensions › Ink trap width</i> to change ink trap width for all existing Smart ink traps, and for all future simple ink traps in the master.",
    "widgetsmartpen.buttonClose": "@widgetnodes.buttonClose",
    "widgetsmartpen.buttonCorner": "**Rapid › Corner point** sub-tool\n\nIf **on** or all off:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> canvas: add sharp node. Next segment will be a line.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: add smooth node. Previous &amp; next segments will be curves.\n\n<small>If **all off** &amp; <i>Preferences › Editing › Rapid tool remembers last state</i> off:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add sharp node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: add smooth node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b><small>ALT</small></b></span><span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b>click</b></span>: add tangent node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: add custom tension point</small>\n\n<small>Change default curve tension in <i>Font Info › Font Dimensions › Curve tension</i></small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>5</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetsmartpen.buttonCurve": "**Rapid › Curve point** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>CTRL</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> canvas: add smooth node. Previous &amp; next segments will be curves.<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: add sharp node. Next segment will be a line.\n\n<small>If **all off** &amp; <i>Preferences › Editing › Rapid tool remembers last state</i> off:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add sharp node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: add smooth node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b><small>ALT</small></b></span><span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b>click</b></span>: add tangent node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: add custom tension point</small>\n\n<small>Change default curve tension in <i>Font Info › Font Dimensions › Curve tension</i></small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>5</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetsmartpen.buttonOff": "**Rapid › Tension point** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> canvas: add custom tension point. Next segment will be a curve with custom tension.\n\n<small>If **all off** &amp; <i>Preferences › Editing › Rapid tool remembers last state</i> off:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add sharp node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: add smooth node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b><small>ALT</small></b></span><span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b>click</b></span>: add tangent node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: add custom tension point</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>5</b></span>: activate next sub-tool or turn all off.</small>",
    "widgetsmartpen.buttonTangent": "**Rapid › Tangent point** sub-tool\n\nIf **on** or with <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b><small>ALT</small></b></span> <span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b><small>ALT</small></b></span>:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span> canvas: add tangent point. If previous segment was a line, next will be a curve and vice versa.\n\n<small>If **all off** &amp; <i>Preferences › Editing › Rapid tool remembers last state</i> off:<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>click</b></span>: add sharp node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b>2×click</b></span>: add smooth node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><sup>M</sup><b><small>CMD</small></b>·<b><small>ALT</small></b></span><span style=\"font-style: normal; white-space: nowrap;\"><sup>W</sup><b><small>CTRL</small></b>·<b><small>ALT</small></b>·<b>click</b></span>: add tangent node<br/>‣ <span style=\"font-style: normal; white-space: nowrap;\"><b><small>ALT</small></b>·<b>click</b></span>: add custom tension point</small>\n\n<small>Tap <span style=\"font-style: normal; white-space: nowrap;\"><b>5</b></span>: activate next sub-tool or turn all off.</small>\n\n<small>Change default curve tension in <i>Font Info › Font Dimensions › Curve tension</i></small>",
    "widgetstrokepanel.panel": "@mainwindow.actionStrokePanel",
    "ylocation.valueLocation": "**Location string**:  specifies the location (interpolation value) of the master or instance on each defined axis\n\nComma-separated list of axis codes followed by the equal sign and the location in design coordinates, for example `wt=400` or `wt=600,wd=75`"
}
